### YamlMime:ManagedReference
items:
- uid: CodeJam.Collections.KeyEqualityComparer
  commentId: T:CodeJam.Collections.KeyEqualityComparer
  id: KeyEqualityComparer
  parent: CodeJam.Collections
  children:
  - CodeJam.Collections.KeyEqualityComparer.Create``2(System.Func{``0,``1})
  - CodeJam.Collections.KeyEqualityComparer.Create``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  langs:
  - csharp
  - vb
  name: KeyEqualityComparer
  nameWithType: KeyEqualityComparer
  fullName: CodeJam.Collections.KeyEqualityComparer
  type: Class
  source:
    remote:
      path: Main/src/Collections/Dictionary/KeyEqualityComparer.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: KeyEqualityComparer
    path: ../Main/src/Collections/Dictionary/KeyEqualityComparer.cs
    startLine: 10
  assemblies:
  - CodeJam
  namespace: CodeJam.Collections
  summary: "\nProvides static methods for creating <xref href=\"CodeJam.Collections.KeyEqualityComparer%602\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static class KeyEqualityComparer
    content.vb: Public Module KeyEqualityComparer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: CodeJam.Collections.KeyEqualityComparer.Create``2(System.Func{``0,``1})
  commentId: M:CodeJam.Collections.KeyEqualityComparer.Create``2(System.Func{``0,``1})
  id: Create``2(System.Func{``0,``1})
  parent: CodeJam.Collections.KeyEqualityComparer
  langs:
  - csharp
  - vb
  name: Create<T, TKey>(Func<T, TKey>)
  nameWithType: KeyEqualityComparer.Create<T, TKey>(Func<T, TKey>)
  fullName: CodeJam.Collections.KeyEqualityComparer.Create<T, TKey>(System.Func<T, TKey>)
  type: Method
  source:
    remote:
      path: Main/src/Collections/Dictionary/KeyEqualityComparer.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: Create
    path: ../Main/src/Collections/Dictionary/KeyEqualityComparer.cs
    startLine: 22
  assemblies:
  - CodeJam
  namespace: CodeJam.Collections
  summary: "\nCreates a <xref href=\"CodeJam.Collections.KeyEqualityComparer%602\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static KeyEqualityComparer<T, TKey> Create<T, TKey>(Func<T, TKey> keySelector)
    parameters:
    - id: keySelector
      type: System.Func{{T},{TKey}}
      description: The function to extract the key for each element.
    typeParameters:
    - id: T
      description: The type of the comparing elements.
    - id: TKey
      description: The type of the key.
    return:
      type: CodeJam.Collections.KeyEqualityComparer{{T},{TKey}}
      description: "\nA <xref href=\"CodeJam.Collections.KeyEqualityComparer%602\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: Public Shared Function Create(Of T, TKey)(keySelector As Func(Of T, TKey)) As KeyEqualityComparer(Of T, TKey)
  overload: CodeJam.Collections.KeyEqualityComparer.Create*
  nameWithType.vb: KeyEqualityComparer.Create(Of T, TKey)(Func(Of T, TKey))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: CodeJam.Collections.KeyEqualityComparer.Create(Of T, TKey)(System.Func(Of T, TKey))
  name.vb: Create(Of T, TKey)(Func(Of T, TKey))
- uid: CodeJam.Collections.KeyEqualityComparer.Create``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  commentId: M:CodeJam.Collections.KeyEqualityComparer.Create``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  id: Create``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  parent: CodeJam.Collections.KeyEqualityComparer
  langs:
  - csharp
  - vb
  name: Create<T, TKey>(Func<T, TKey>, IEqualityComparer<TKey>)
  nameWithType: KeyEqualityComparer.Create<T, TKey>(Func<T, TKey>, IEqualityComparer<TKey>)
  fullName: CodeJam.Collections.KeyEqualityComparer.Create<T, TKey>(System.Func<T, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)
  type: Method
  source:
    remote:
      path: Main/src/Collections/Dictionary/KeyEqualityComparer.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: Create
    path: ../Main/src/Collections/Dictionary/KeyEqualityComparer.cs
    startLine: 36
  assemblies:
  - CodeJam
  namespace: CodeJam.Collections
  summary: "\nCreates a <xref href=\"CodeJam.Collections.KeyEqualityComparer%602\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static KeyEqualityComparer<T, TKey> Create<T, TKey>(Func<T, TKey> keySelector, IEqualityComparer<TKey> comparer)
    parameters:
    - id: keySelector
      type: System.Func{{T},{TKey}}
      description: The function to extract the key for each element.
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{{TKey}}
      description: The equality comparer to use to compare the keys.
    typeParameters:
    - id: T
      description: The type of the comparing elements.
    - id: TKey
      description: The type of the key.
    return:
      type: CodeJam.Collections.KeyEqualityComparer{{T},{TKey}}
      description: "\nA <xref href=\"CodeJam.Collections.KeyEqualityComparer%602\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: Public Shared Function Create(Of T, TKey)(keySelector As Func(Of T, TKey), comparer As IEqualityComparer(Of TKey)) As KeyEqualityComparer(Of T, TKey)
  overload: CodeJam.Collections.KeyEqualityComparer.Create*
  nameWithType.vb: KeyEqualityComparer.Create(Of T, TKey)(Func(Of T, TKey), IEqualityComparer(Of TKey))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: CodeJam.Collections.KeyEqualityComparer.Create(Of T, TKey)(System.Func(Of T, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: Create(Of T, TKey)(Func(Of T, TKey), IEqualityComparer(Of TKey))
references:
- uid: CodeJam.Collections.KeyEqualityComparer`2
  commentId: T:CodeJam.Collections.KeyEqualityComparer`2
  isExternal: false
  name: KeyEqualityComparer<T, TKey>
  nameWithType: KeyEqualityComparer<T, TKey>
  fullName: CodeJam.Collections.KeyEqualityComparer<T, TKey>
  nameWithType.vb: KeyEqualityComparer(Of T, TKey)
  fullName.vb: CodeJam.Collections.KeyEqualityComparer(Of T, TKey)
  name.vb: KeyEqualityComparer(Of T, TKey)
  spec.csharp:
  - uid: CodeJam.Collections.KeyEqualityComparer`2
    name: KeyEqualityComparer
    nameWithType: KeyEqualityComparer
    fullName: CodeJam.Collections.KeyEqualityComparer
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: CodeJam.Collections.KeyEqualityComparer`2
    name: KeyEqualityComparer
    nameWithType: KeyEqualityComparer
    fullName: CodeJam.Collections.KeyEqualityComparer
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: CodeJam.Collections
  commentId: N:CodeJam.Collections
  isExternal: false
  name: CodeJam.Collections
  nameWithType: CodeJam.Collections
  fullName: CodeJam.Collections
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: CodeJam.Collections.KeyEqualityComparer.Create*
  commentId: Overload:CodeJam.Collections.KeyEqualityComparer.Create
  isExternal: false
  name: Create
  nameWithType: KeyEqualityComparer.Create
  fullName: CodeJam.Collections.KeyEqualityComparer.Create
- uid: System.Func{{T},{TKey}}
  commentId: T:System.Func{``0,``1}
  parent: System
  definition: System.Func`2
  name: Func<T, TKey>
  nameWithType: Func<T, TKey>
  fullName: System.Func<T, TKey>
  nameWithType.vb: Func(Of T, TKey)
  fullName.vb: System.Func(Of T, TKey)
  name.vb: Func(Of T, TKey)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: CodeJam.Collections.KeyEqualityComparer{{T},{TKey}}
  commentId: T:CodeJam.Collections.KeyEqualityComparer{``0,``1}
  parent: CodeJam.Collections
  definition: CodeJam.Collections.KeyEqualityComparer`2
  name: KeyEqualityComparer<T, TKey>
  nameWithType: KeyEqualityComparer<T, TKey>
  fullName: CodeJam.Collections.KeyEqualityComparer<T, TKey>
  nameWithType.vb: KeyEqualityComparer(Of T, TKey)
  fullName.vb: CodeJam.Collections.KeyEqualityComparer(Of T, TKey)
  name.vb: KeyEqualityComparer(Of T, TKey)
  spec.csharp:
  - uid: CodeJam.Collections.KeyEqualityComparer`2
    name: KeyEqualityComparer
    nameWithType: KeyEqualityComparer
    fullName: CodeJam.Collections.KeyEqualityComparer
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: CodeJam.Collections.KeyEqualityComparer`2
    name: KeyEqualityComparer
    nameWithType: KeyEqualityComparer
    fullName: CodeJam.Collections.KeyEqualityComparer
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEqualityComparer{{TKey}}
  commentId: T:System.Collections.Generic.IEqualityComparer{``1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEqualityComparer`1
  name: IEqualityComparer<TKey>
  nameWithType: IEqualityComparer<TKey>
  fullName: System.Collections.Generic.IEqualityComparer<TKey>
  nameWithType.vb: IEqualityComparer(Of TKey)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of TKey)
  name.vb: IEqualityComparer(Of TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEqualityComparer`1
  commentId: T:System.Collections.Generic.IEqualityComparer`1
  isExternal: true
  name: IEqualityComparer<T>
  nameWithType: IEqualityComparer<T>
  fullName: System.Collections.Generic.IEqualityComparer<T>
  nameWithType.vb: IEqualityComparer(Of T)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T)
  name.vb: IEqualityComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
