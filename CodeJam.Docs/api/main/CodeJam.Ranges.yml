### YamlMime:ManagedReference
items:
- uid: CodeJam.Ranges
  commentId: N:CodeJam.Ranges
  id: CodeJam.Ranges
  children:
  - CodeJam.Ranges.CompositeRange
  - CodeJam.Ranges.CompositeRange`1
  - CodeJam.Ranges.CompositeRange`2
  - CodeJam.Ranges.CompositeRangeExtensions
  - CodeJam.Ranges.ICompositeRange`1
  - CodeJam.Ranges.IRange`1
  - CodeJam.Ranges.IRangeFactory`2
  - CodeJam.Ranges.Range
  - CodeJam.Ranges.Range`1
  - CodeJam.Ranges.Range`2
  - CodeJam.Ranges.RangeBoundaryFrom`1
  - CodeJam.Ranges.RangeBoundaryFromKind
  - CodeJam.Ranges.RangeBoundaryTo`1
  - CodeJam.Ranges.RangeBoundaryToKind
  - CodeJam.Ranges.RangeExtensions
  - CodeJam.Ranges.RangeIntersection`1
  - CodeJam.Ranges.RangeIntersection`2
  langs:
  - csharp
  - vb
  name: CodeJam.Ranges
  nameWithType: CodeJam.Ranges
  fullName: CodeJam.Ranges
  type: Namespace
  assemblies:
  - CodeJam
references:
- uid: CodeJam.Ranges.CompositeRange
  commentId: T:CodeJam.Ranges.CompositeRange
  isExternal: false
  name: CompositeRange
  nameWithType: CompositeRange
  fullName: CodeJam.Ranges.CompositeRange
- uid: CodeJam.Ranges.Range
  commentId: T:CodeJam.Ranges.Range
  isExternal: false
  name: Range
  nameWithType: Range
  fullName: CodeJam.Ranges.Range
- uid: CodeJam.Ranges.RangeBoundaryFrom`1
  commentId: T:CodeJam.Ranges.RangeBoundaryFrom`1
  parent: CodeJam.Ranges
  isExternal: false
  name: RangeBoundaryFrom<T>
  nameWithType: RangeBoundaryFrom<T>
  fullName: CodeJam.Ranges.RangeBoundaryFrom<T>
  nameWithType.vb: RangeBoundaryFrom(Of T)
  fullName.vb: CodeJam.Ranges.RangeBoundaryFrom(Of T)
  name.vb: RangeBoundaryFrom(Of T)
  spec.csharp:
  - uid: CodeJam.Ranges.RangeBoundaryFrom`1
    name: RangeBoundaryFrom
    nameWithType: RangeBoundaryFrom
    fullName: CodeJam.Ranges.RangeBoundaryFrom
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: CodeJam.Ranges.RangeBoundaryFrom`1
    name: RangeBoundaryFrom
    nameWithType: RangeBoundaryFrom
    fullName: CodeJam.Ranges.RangeBoundaryFrom
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: CodeJam.Ranges.RangeBoundaryTo`1
  commentId: T:CodeJam.Ranges.RangeBoundaryTo`1
  parent: CodeJam.Ranges
  isExternal: false
  name: RangeBoundaryTo<T>
  nameWithType: RangeBoundaryTo<T>
  fullName: CodeJam.Ranges.RangeBoundaryTo<T>
  nameWithType.vb: RangeBoundaryTo(Of T)
  fullName.vb: CodeJam.Ranges.RangeBoundaryTo(Of T)
  name.vb: RangeBoundaryTo(Of T)
  spec.csharp:
  - uid: CodeJam.Ranges.RangeBoundaryTo`1
    name: RangeBoundaryTo
    nameWithType: RangeBoundaryTo
    fullName: CodeJam.Ranges.RangeBoundaryTo
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: CodeJam.Ranges.RangeBoundaryTo`1
    name: RangeBoundaryTo
    nameWithType: RangeBoundaryTo
    fullName: CodeJam.Ranges.RangeBoundaryTo
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: CodeJam.Ranges.RangeBoundaryFromKind
  commentId: T:CodeJam.Ranges.RangeBoundaryFromKind
  parent: CodeJam.Ranges
  isExternal: false
  name: RangeBoundaryFromKind
  nameWithType: RangeBoundaryFromKind
  fullName: CodeJam.Ranges.RangeBoundaryFromKind
- uid: CodeJam.Ranges.RangeBoundaryToKind
  commentId: T:CodeJam.Ranges.RangeBoundaryToKind
  parent: CodeJam.Ranges
  isExternal: false
  name: RangeBoundaryToKind
  nameWithType: RangeBoundaryToKind
  fullName: CodeJam.Ranges.RangeBoundaryToKind
- uid: CodeJam.Ranges.RangeIntersection`1
  commentId: T:CodeJam.Ranges.RangeIntersection`1
  isExternal: false
  name: RangeIntersection<T>
  nameWithType: RangeIntersection<T>
  fullName: CodeJam.Ranges.RangeIntersection<T>
  nameWithType.vb: RangeIntersection(Of T)
  fullName.vb: CodeJam.Ranges.RangeIntersection(Of T)
  name.vb: RangeIntersection(Of T)
  spec.csharp:
  - uid: CodeJam.Ranges.RangeIntersection`1
    name: RangeIntersection
    nameWithType: RangeIntersection
    fullName: CodeJam.Ranges.RangeIntersection
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: CodeJam.Ranges.RangeIntersection`1
    name: RangeIntersection
    nameWithType: RangeIntersection
    fullName: CodeJam.Ranges.RangeIntersection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: CodeJam.Ranges.RangeIntersection`2
  commentId: T:CodeJam.Ranges.RangeIntersection`2
  isExternal: false
  name: RangeIntersection<T, TKey>
  nameWithType: RangeIntersection<T, TKey>
  fullName: CodeJam.Ranges.RangeIntersection<T, TKey>
  nameWithType.vb: RangeIntersection(Of T, TKey)
  fullName.vb: CodeJam.Ranges.RangeIntersection(Of T, TKey)
  name.vb: RangeIntersection(Of T, TKey)
  spec.csharp:
  - uid: CodeJam.Ranges.RangeIntersection`2
    name: RangeIntersection
    nameWithType: RangeIntersection
    fullName: CodeJam.Ranges.RangeIntersection
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: CodeJam.Ranges.RangeIntersection`2
    name: RangeIntersection
    nameWithType: RangeIntersection
    fullName: CodeJam.Ranges.RangeIntersection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: CodeJam.Ranges.CompositeRangeExtensions
  commentId: T:CodeJam.Ranges.CompositeRangeExtensions
  parent: CodeJam.Ranges
  isExternal: false
  name: CompositeRangeExtensions
  nameWithType: CompositeRangeExtensions
  fullName: CodeJam.Ranges.CompositeRangeExtensions
- uid: CodeJam.Ranges.RangeExtensions
  commentId: T:CodeJam.Ranges.RangeExtensions
  parent: CodeJam.Ranges
  isExternal: false
  name: RangeExtensions
  nameWithType: RangeExtensions
  fullName: CodeJam.Ranges.RangeExtensions
- uid: CodeJam.Ranges.CompositeRange`1
  commentId: T:CodeJam.Ranges.CompositeRange`1
  parent: CodeJam.Ranges
  isExternal: false
  name: CompositeRange<T>
  nameWithType: CompositeRange<T>
  fullName: CodeJam.Ranges.CompositeRange<T>
  nameWithType.vb: CompositeRange(Of T)
  fullName.vb: CodeJam.Ranges.CompositeRange(Of T)
  name.vb: CompositeRange(Of T)
  spec.csharp:
  - uid: CodeJam.Ranges.CompositeRange`1
    name: CompositeRange
    nameWithType: CompositeRange
    fullName: CodeJam.Ranges.CompositeRange
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: CodeJam.Ranges.CompositeRange`1
    name: CompositeRange
    nameWithType: CompositeRange
    fullName: CodeJam.Ranges.CompositeRange
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: CodeJam.Ranges.CompositeRange`2
  commentId: T:CodeJam.Ranges.CompositeRange`2
  parent: CodeJam.Ranges
  isExternal: false
  name: CompositeRange<T, TKey>
  nameWithType: CompositeRange<T, TKey>
  fullName: CodeJam.Ranges.CompositeRange<T, TKey>
  nameWithType.vb: CompositeRange(Of T, TKey)
  fullName.vb: CodeJam.Ranges.CompositeRange(Of T, TKey)
  name.vb: CompositeRange(Of T, TKey)
  spec.csharp:
  - uid: CodeJam.Ranges.CompositeRange`2
    name: CompositeRange
    nameWithType: CompositeRange
    fullName: CodeJam.Ranges.CompositeRange
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: CodeJam.Ranges.CompositeRange`2
    name: CompositeRange
    nameWithType: CompositeRange
    fullName: CodeJam.Ranges.CompositeRange
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: CodeJam.Ranges.ICompositeRange`1
  commentId: T:CodeJam.Ranges.ICompositeRange`1
  isExternal: false
  name: ICompositeRange<T>
  nameWithType: ICompositeRange<T>
  fullName: CodeJam.Ranges.ICompositeRange<T>
  nameWithType.vb: ICompositeRange(Of T)
  fullName.vb: CodeJam.Ranges.ICompositeRange(Of T)
  name.vb: ICompositeRange(Of T)
  spec.csharp:
  - uid: CodeJam.Ranges.ICompositeRange`1
    name: ICompositeRange
    nameWithType: ICompositeRange
    fullName: CodeJam.Ranges.ICompositeRange
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: CodeJam.Ranges.ICompositeRange`1
    name: ICompositeRange
    nameWithType: ICompositeRange
    fullName: CodeJam.Ranges.ICompositeRange
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: CodeJam.Ranges.IRangeFactory`2
  commentId: T:CodeJam.Ranges.IRangeFactory`2
  isExternal: false
  name: IRangeFactory<T, TRange>
  nameWithType: IRangeFactory<T, TRange>
  fullName: CodeJam.Ranges.IRangeFactory<T, TRange>
  nameWithType.vb: IRangeFactory(Of T, TRange)
  fullName.vb: CodeJam.Ranges.IRangeFactory(Of T, TRange)
  name.vb: IRangeFactory(Of T, TRange)
  spec.csharp:
  - uid: CodeJam.Ranges.IRangeFactory`2
    name: IRangeFactory
    nameWithType: IRangeFactory
    fullName: CodeJam.Ranges.IRangeFactory
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRange
    nameWithType: TRange
    fullName: TRange
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: CodeJam.Ranges.IRangeFactory`2
    name: IRangeFactory
    nameWithType: IRangeFactory
    fullName: CodeJam.Ranges.IRangeFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRange
    nameWithType: TRange
    fullName: TRange
  - name: )
    nameWithType: )
    fullName: )
- uid: CodeJam.Ranges.IRange`1
  commentId: T:CodeJam.Ranges.IRange`1
  isExternal: false
  name: IRange<T>
  nameWithType: IRange<T>
  fullName: CodeJam.Ranges.IRange<T>
  nameWithType.vb: IRange(Of T)
  fullName.vb: CodeJam.Ranges.IRange(Of T)
  name.vb: IRange(Of T)
  spec.csharp:
  - uid: CodeJam.Ranges.IRange`1
    name: IRange
    nameWithType: IRange
    fullName: CodeJam.Ranges.IRange
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: CodeJam.Ranges.IRange`1
    name: IRange
    nameWithType: IRange
    fullName: CodeJam.Ranges.IRange
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: CodeJam.Ranges.Range`1
  commentId: T:CodeJam.Ranges.Range`1
  parent: CodeJam.Ranges
  isExternal: false
  name: Range<T>
  nameWithType: Range<T>
  fullName: CodeJam.Ranges.Range<T>
  nameWithType.vb: Range(Of T)
  fullName.vb: CodeJam.Ranges.Range(Of T)
  name.vb: Range(Of T)
  spec.csharp:
  - uid: CodeJam.Ranges.Range`1
    name: Range
    nameWithType: Range
    fullName: CodeJam.Ranges.Range
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: CodeJam.Ranges.Range`1
    name: Range
    nameWithType: Range
    fullName: CodeJam.Ranges.Range
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: CodeJam.Ranges.Range`2
  commentId: T:CodeJam.Ranges.Range`2
  parent: CodeJam.Ranges
  isExternal: false
  name: Range<T, TKey>
  nameWithType: Range<T, TKey>
  fullName: CodeJam.Ranges.Range<T, TKey>
  nameWithType.vb: Range(Of T, TKey)
  fullName.vb: CodeJam.Ranges.Range(Of T, TKey)
  name.vb: Range(Of T, TKey)
  spec.csharp:
  - uid: CodeJam.Ranges.Range`2
    name: Range
    nameWithType: Range
    fullName: CodeJam.Ranges.Range
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: CodeJam.Ranges.Range`2
    name: Range
    nameWithType: Range
    fullName: CodeJam.Ranges.Range
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: CodeJam.Ranges
  commentId: N:CodeJam.Ranges
  isExternal: false
  name: CodeJam.Ranges
  nameWithType: CodeJam.Ranges
  fullName: CodeJam.Ranges
