### YamlMime:ManagedReference
items:
- uid: CodeJam.IO.IoCodeExceptions
  commentId: T:CodeJam.IO.IoCodeExceptions
  id: IoCodeExceptions
  parent: CodeJam.IO
  children:
  - CodeJam.IO.IoCodeExceptions.ArgumentDirectoryExistsFileExpected(System.String,System.String)
  - CodeJam.IO.IoCodeExceptions.ArgumentDirectoryNotFound(System.String,System.String)
  - CodeJam.IO.IoCodeExceptions.ArgumentFileExistsDirectoryExpected(System.String,System.String)
  - CodeJam.IO.IoCodeExceptions.ArgumentFileNotFound(System.String,System.String)
  - CodeJam.IO.IoCodeExceptions.ArgumentNotSimpleName(System.String,System.String)
  - CodeJam.IO.IoCodeExceptions.ArgumentNotVolumeOrDirectoryPath(System.String,System.String)
  - CodeJam.IO.IoCodeExceptions.ArgumentNotWellFormedAbsolutePath(System.String,System.String)
  - CodeJam.IO.IoCodeExceptions.ArgumentNotWellFormedPath(System.String,System.String)
  - CodeJam.IO.IoCodeExceptions.ArgumentRootedOrNotRelativePath(System.String,System.String)
  - CodeJam.IO.IoCodeExceptions.DirectoryExists(System.String)
  - CodeJam.IO.IoCodeExceptions.FileExists(System.String)
  - CodeJam.IO.IoCodeExceptions.IOException(System.String,System.Object[])
  langs:
  - csharp
  - vb
  name: IoCodeExceptions
  nameWithType: IoCodeExceptions
  fullName: CodeJam.IO.IoCodeExceptions
  type: Class
  source:
    remote:
      path: Main/src/IO/IoCodeExceptions.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: IoCodeExceptions
    path: ../Main/src/IO/IoCodeExceptions.cs
    startLine: 13
  assemblies:
  - CodeJam
  namespace: CodeJam.IO
  summary: IO exception factory class
  example: []
  syntax:
    content: public static class IoCodeExceptions
    content.vb: Public Module IoCodeExceptions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: CodeJam.IO.IoCodeExceptions.ArgumentNotWellFormedPath(System.String,System.String)
  commentId: M:CodeJam.IO.IoCodeExceptions.ArgumentNotWellFormedPath(System.String,System.String)
  id: ArgumentNotWellFormedPath(System.String,System.String)
  parent: CodeJam.IO.IoCodeExceptions
  langs:
  - csharp
  - vb
  name: ArgumentNotWellFormedPath(String, String)
  nameWithType: IoCodeExceptions.ArgumentNotWellFormedPath(String, String)
  fullName: CodeJam.IO.IoCodeExceptions.ArgumentNotWellFormedPath(System.String, System.String)
  type: Method
  source:
    remote:
      path: Main/src/IO/IoCodeExceptions.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: ArgumentNotWellFormedPath
    path: ../Main/src/IO/IoCodeExceptions.cs
    startLine: 21
  assemblies:
  - CodeJam
  namespace: CodeJam.IO
  summary: Creates <xref href="System.ArgumentException" data-throw-if-not-resolved="false"></xref> for invalid path.
  example: []
  syntax:
    content: public static ArgumentException ArgumentNotWellFormedPath(string argumentName, string path)
    parameters:
    - id: argumentName
      type: System.String
      description: Name of the argument.
    - id: path
      type: System.String
      description: The path being checked.
    return:
      type: System.ArgumentException
      description: Initialized instance of <xref href="System.ArgumentException" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function ArgumentNotWellFormedPath(argumentName As String, path As String) As ArgumentException
  overload: CodeJam.IO.IoCodeExceptions.ArgumentNotWellFormedPath*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: CodeJam.IO.IoCodeExceptions.ArgumentNotWellFormedAbsolutePath(System.String,System.String)
  commentId: M:CodeJam.IO.IoCodeExceptions.ArgumentNotWellFormedAbsolutePath(System.String,System.String)
  id: ArgumentNotWellFormedAbsolutePath(System.String,System.String)
  parent: CodeJam.IO.IoCodeExceptions
  langs:
  - csharp
  - vb
  name: ArgumentNotWellFormedAbsolutePath(String, String)
  nameWithType: IoCodeExceptions.ArgumentNotWellFormedAbsolutePath(String, String)
  fullName: CodeJam.IO.IoCodeExceptions.ArgumentNotWellFormedAbsolutePath(System.String, System.String)
  type: Method
  source:
    remote:
      path: Main/src/IO/IoCodeExceptions.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: ArgumentNotWellFormedAbsolutePath
    path: ../Main/src/IO/IoCodeExceptions.cs
    startLine: 39
  assemblies:
  - CodeJam
  namespace: CodeJam.IO
  summary: Creates <xref href="System.ArgumentException" data-throw-if-not-resolved="false"></xref> for invalid full path.
  example: []
  syntax:
    content: public static ArgumentException ArgumentNotWellFormedAbsolutePath(string argumentName, string path)
    parameters:
    - id: argumentName
      type: System.String
      description: Name of the argument.
    - id: path
      type: System.String
      description: The path being checked.
    return:
      type: System.ArgumentException
      description: Initialized instance of <xref href="System.ArgumentException" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function ArgumentNotWellFormedAbsolutePath(argumentName As String, path As String) As ArgumentException
  overload: CodeJam.IO.IoCodeExceptions.ArgumentNotWellFormedAbsolutePath*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: CodeJam.IO.IoCodeExceptions.ArgumentRootedOrNotRelativePath(System.String,System.String)
  commentId: M:CodeJam.IO.IoCodeExceptions.ArgumentRootedOrNotRelativePath(System.String,System.String)
  id: ArgumentRootedOrNotRelativePath(System.String,System.String)
  parent: CodeJam.IO.IoCodeExceptions
  langs:
  - csharp
  - vb
  name: ArgumentRootedOrNotRelativePath(String, String)
  nameWithType: IoCodeExceptions.ArgumentRootedOrNotRelativePath(String, String)
  fullName: CodeJam.IO.IoCodeExceptions.ArgumentRootedOrNotRelativePath(System.String, System.String)
  type: Method
  source:
    remote:
      path: Main/src/IO/IoCodeExceptions.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: ArgumentRootedOrNotRelativePath
    path: ../Main/src/IO/IoCodeExceptions.cs
    startLine: 57
  assemblies:
  - CodeJam
  namespace: CodeJam.IO
  summary: Creates <xref href="System.ArgumentException" data-throw-if-not-resolved="false"></xref> for invalid relative path.
  example: []
  syntax:
    content: public static ArgumentException ArgumentRootedOrNotRelativePath(string argumentName, string path)
    parameters:
    - id: argumentName
      type: System.String
      description: Name of the argument.
    - id: path
      type: System.String
      description: The path being checked.
    return:
      type: System.ArgumentException
      description: Initialized instance of <xref href="System.ArgumentException" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function ArgumentRootedOrNotRelativePath(argumentName As String, path As String) As ArgumentException
  overload: CodeJam.IO.IoCodeExceptions.ArgumentRootedOrNotRelativePath*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: CodeJam.IO.IoCodeExceptions.ArgumentNotSimpleName(System.String,System.String)
  commentId: M:CodeJam.IO.IoCodeExceptions.ArgumentNotSimpleName(System.String,System.String)
  id: ArgumentNotSimpleName(System.String,System.String)
  parent: CodeJam.IO.IoCodeExceptions
  langs:
  - csharp
  - vb
  name: ArgumentNotSimpleName(String, String)
  nameWithType: IoCodeExceptions.ArgumentNotSimpleName(String, String)
  fullName: CodeJam.IO.IoCodeExceptions.ArgumentNotSimpleName(System.String, System.String)
  type: Method
  source:
    remote:
      path: Main/src/IO/IoCodeExceptions.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: ArgumentNotSimpleName
    path: ../Main/src/IO/IoCodeExceptions.cs
    startLine: 75
  assemblies:
  - CodeJam
  namespace: CodeJam.IO
  summary: Creates <xref href="System.ArgumentException" data-throw-if-not-resolved="false"></xref> for invalid simple name.
  example: []
  syntax:
    content: public static ArgumentException ArgumentNotSimpleName(string argumentName, string path)
    parameters:
    - id: argumentName
      type: System.String
      description: Name of the argument.
    - id: path
      type: System.String
      description: The path being checked.
    return:
      type: System.ArgumentException
      description: Initialized instance of <xref href="System.ArgumentException" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function ArgumentNotSimpleName(argumentName As String, path As String) As ArgumentException
  overload: CodeJam.IO.IoCodeExceptions.ArgumentNotSimpleName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: CodeJam.IO.IoCodeExceptions.ArgumentNotVolumeOrDirectoryPath(System.String,System.String)
  commentId: M:CodeJam.IO.IoCodeExceptions.ArgumentNotVolumeOrDirectoryPath(System.String,System.String)
  id: ArgumentNotVolumeOrDirectoryPath(System.String,System.String)
  parent: CodeJam.IO.IoCodeExceptions
  langs:
  - csharp
  - vb
  name: ArgumentNotVolumeOrDirectoryPath(String, String)
  nameWithType: IoCodeExceptions.ArgumentNotVolumeOrDirectoryPath(String, String)
  fullName: CodeJam.IO.IoCodeExceptions.ArgumentNotVolumeOrDirectoryPath(System.String, System.String)
  type: Method
  source:
    remote:
      path: Main/src/IO/IoCodeExceptions.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: ArgumentNotVolumeOrDirectoryPath
    path: ../Main/src/IO/IoCodeExceptions.cs
    startLine: 93
  assemblies:
  - CodeJam
  namespace: CodeJam.IO
  summary: Creates <xref href="System.ArgumentException" data-throw-if-not-resolved="false"></xref> if path does not ends with one of path separator chars.
  example: []
  syntax:
    content: public static ArgumentException ArgumentNotVolumeOrDirectoryPath(string argumentName, string path)
    parameters:
    - id: argumentName
      type: System.String
      description: Name of the argument.
    - id: path
      type: System.String
      description: The path being checked.
    return:
      type: System.ArgumentException
      description: Initialized instance of <xref href="System.ArgumentException" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function ArgumentNotVolumeOrDirectoryPath(argumentName As String, path As String) As ArgumentException
  overload: CodeJam.IO.IoCodeExceptions.ArgumentNotVolumeOrDirectoryPath*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: CodeJam.IO.IoCodeExceptions.ArgumentDirectoryExistsFileExpected(System.String,System.String)
  commentId: M:CodeJam.IO.IoCodeExceptions.ArgumentDirectoryExistsFileExpected(System.String,System.String)
  id: ArgumentDirectoryExistsFileExpected(System.String,System.String)
  parent: CodeJam.IO.IoCodeExceptions
  langs:
  - csharp
  - vb
  name: ArgumentDirectoryExistsFileExpected(String, String)
  nameWithType: IoCodeExceptions.ArgumentDirectoryExistsFileExpected(String, String)
  fullName: CodeJam.IO.IoCodeExceptions.ArgumentDirectoryExistsFileExpected(System.String, System.String)
  type: Method
  source:
    remote:
      path: Main/src/IO/IoCodeExceptions.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: ArgumentDirectoryExistsFileExpected
    path: ../Main/src/IO/IoCodeExceptions.cs
    startLine: 113
  assemblies:
  - CodeJam
  namespace: CodeJam.IO
  summary: Creates <xref href="System.IO.FileNotFoundException" data-throw-if-not-resolved="false"></xref> for missing file when there is a dictionary.
  example: []
  syntax:
    content: public static FileNotFoundException ArgumentDirectoryExistsFileExpected(string argumentName, string filePath)
    parameters:
    - id: argumentName
      type: System.String
      description: Name of the argument.
    - id: filePath
      type: System.String
      description: The file being checked.
    return:
      type: System.IO.FileNotFoundException
      description: Initialized instance of <xref href="System.IO.FileNotFoundException" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function ArgumentDirectoryExistsFileExpected(argumentName As String, filePath As String) As FileNotFoundException
  overload: CodeJam.IO.IoCodeExceptions.ArgumentDirectoryExistsFileExpected*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: CodeJam.IO.IoCodeExceptions.ArgumentFileExistsDirectoryExpected(System.String,System.String)
  commentId: M:CodeJam.IO.IoCodeExceptions.ArgumentFileExistsDirectoryExpected(System.String,System.String)
  id: ArgumentFileExistsDirectoryExpected(System.String,System.String)
  parent: CodeJam.IO.IoCodeExceptions
  langs:
  - csharp
  - vb
  name: ArgumentFileExistsDirectoryExpected(String, String)
  nameWithType: IoCodeExceptions.ArgumentFileExistsDirectoryExpected(String, String)
  fullName: CodeJam.IO.IoCodeExceptions.ArgumentFileExistsDirectoryExpected(System.String, System.String)
  type: Method
  source:
    remote:
      path: Main/src/IO/IoCodeExceptions.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: ArgumentFileExistsDirectoryExpected
    path: ../Main/src/IO/IoCodeExceptions.cs
    startLine: 129
  assemblies:
  - CodeJam
  namespace: CodeJam.IO
  summary: Creates <xref href="System.IO.DirectoryNotFoundException" data-throw-if-not-resolved="false"></xref> for missing directory when there is a file.
  example: []
  syntax:
    content: public static DirectoryNotFoundException ArgumentFileExistsDirectoryExpected(string argumentName, string directoryPath)
    parameters:
    - id: argumentName
      type: System.String
      description: Name of the argument.
    - id: directoryPath
      type: System.String
      description: The directory being checked.
    return:
      type: System.IO.DirectoryNotFoundException
      description: Initialized instance of <xref href="System.IO.DirectoryNotFoundException" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function ArgumentFileExistsDirectoryExpected(argumentName As String, directoryPath As String) As DirectoryNotFoundException
  overload: CodeJam.IO.IoCodeExceptions.ArgumentFileExistsDirectoryExpected*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: CodeJam.IO.IoCodeExceptions.ArgumentFileNotFound(System.String,System.String)
  commentId: M:CodeJam.IO.IoCodeExceptions.ArgumentFileNotFound(System.String,System.String)
  id: ArgumentFileNotFound(System.String,System.String)
  parent: CodeJam.IO.IoCodeExceptions
  langs:
  - csharp
  - vb
  name: ArgumentFileNotFound(String, String)
  nameWithType: IoCodeExceptions.ArgumentFileNotFound(String, String)
  fullName: CodeJam.IO.IoCodeExceptions.ArgumentFileNotFound(System.String, System.String)
  type: Method
  source:
    remote:
      path: Main/src/IO/IoCodeExceptions.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: ArgumentFileNotFound
    path: ../Main/src/IO/IoCodeExceptions.cs
    startLine: 145
  assemblies:
  - CodeJam
  namespace: CodeJam.IO
  summary: Creates <xref href="System.IO.FileNotFoundException" data-throw-if-not-resolved="false"></xref> for missing file.
  example: []
  syntax:
    content: public static FileNotFoundException ArgumentFileNotFound(string argumentName, string filePath)
    parameters:
    - id: argumentName
      type: System.String
      description: Name of the argument.
    - id: filePath
      type: System.String
      description: The file being checked.
    return:
      type: System.IO.FileNotFoundException
      description: Initialized instance of <xref href="System.IO.FileNotFoundException" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function ArgumentFileNotFound(argumentName As String, filePath As String) As FileNotFoundException
  overload: CodeJam.IO.IoCodeExceptions.ArgumentFileNotFound*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: CodeJam.IO.IoCodeExceptions.ArgumentDirectoryNotFound(System.String,System.String)
  commentId: M:CodeJam.IO.IoCodeExceptions.ArgumentDirectoryNotFound(System.String,System.String)
  id: ArgumentDirectoryNotFound(System.String,System.String)
  parent: CodeJam.IO.IoCodeExceptions
  langs:
  - csharp
  - vb
  name: ArgumentDirectoryNotFound(String, String)
  nameWithType: IoCodeExceptions.ArgumentDirectoryNotFound(String, String)
  fullName: CodeJam.IO.IoCodeExceptions.ArgumentDirectoryNotFound(System.String, System.String)
  type: Method
  source:
    remote:
      path: Main/src/IO/IoCodeExceptions.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: ArgumentDirectoryNotFound
    path: ../Main/src/IO/IoCodeExceptions.cs
    startLine: 160
  assemblies:
  - CodeJam
  namespace: CodeJam.IO
  summary: Creates <xref href="System.IO.DirectoryNotFoundException" data-throw-if-not-resolved="false"></xref> for missing directory.
  example: []
  syntax:
    content: public static DirectoryNotFoundException ArgumentDirectoryNotFound(string argumentName, string directoryPath)
    parameters:
    - id: argumentName
      type: System.String
      description: Name of the argument.
    - id: directoryPath
      type: System.String
      description: The directory being checked.
    return:
      type: System.IO.DirectoryNotFoundException
      description: Initialized instance of <xref href="System.IO.DirectoryNotFoundException" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function ArgumentDirectoryNotFound(argumentName As String, directoryPath As String) As DirectoryNotFoundException
  overload: CodeJam.IO.IoCodeExceptions.ArgumentDirectoryNotFound*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: CodeJam.IO.IoCodeExceptions.IOException(System.String,System.Object[])
  commentId: M:CodeJam.IO.IoCodeExceptions.IOException(System.String,System.Object[])
  id: IOException(System.String,System.Object[])
  parent: CodeJam.IO.IoCodeExceptions
  langs:
  - csharp
  - vb
  name: IOException(String, Object[])
  nameWithType: IoCodeExceptions.IOException(String, Object[])
  fullName: CodeJam.IO.IoCodeExceptions.IOException(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: Main/src/IO/IoCodeExceptions.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: IOException
    path: ../Main/src/IO/IoCodeExceptions.cs
    startLine: 175
  assemblies:
  - CodeJam
  namespace: CodeJam.IO
  summary: Creates <xref href="CodeJam.IO.IoCodeExceptions.IOException(System.String%2cSystem.Object%5b%5d)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static IOException IOException(string messageFormat, params object[] args)
    parameters:
    - id: messageFormat
      type: System.String
      description: The message format.
    - id: args
      type: System.Object[]
      description: The arguments.
    return:
      type: System.IO.IOException
      description: Initialized instance of <xref href="CodeJam.IO.IoCodeExceptions.IOException(System.String%2cSystem.Object%5b%5d)" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function IOException(messageFormat As String, ParamArray args As Object()) As IOException
  overload: CodeJam.IO.IoCodeExceptions.IOException*
  nameWithType.vb: IoCodeExceptions.IOException(String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: CodeJam.IO.IoCodeExceptions.IOException(System.String, System.Object())
  name.vb: IOException(String, Object())
- uid: CodeJam.IO.IoCodeExceptions.FileExists(System.String)
  commentId: M:CodeJam.IO.IoCodeExceptions.FileExists(System.String)
  id: FileExists(System.String)
  parent: CodeJam.IO.IoCodeExceptions
  langs:
  - csharp
  - vb
  name: FileExists(String)
  nameWithType: IoCodeExceptions.FileExists(String)
  fullName: CodeJam.IO.IoCodeExceptions.FileExists(System.String)
  type: Method
  source:
    remote:
      path: Main/src/IO/IoCodeExceptions.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: FileExists
    path: ../Main/src/IO/IoCodeExceptions.cs
    startLine: 192
  assemblies:
  - CodeJam
  namespace: CodeJam.IO
  summary: Creates <xref href="CodeJam.IO.IoCodeExceptions.IOException(System.String%2cSystem.Object%5b%5d)" data-throw-if-not-resolved="false"></xref> for file that should not exist.
  example: []
  syntax:
    content: public static IOException FileExists(string filePath)
    parameters:
    - id: filePath
      type: System.String
      description: The file being checked.
    return:
      type: System.IO.IOException
      description: Initialized instance of <xref href="CodeJam.IO.IoCodeExceptions.IOException(System.String%2cSystem.Object%5b%5d)" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function FileExists(filePath As String) As IOException
  overload: CodeJam.IO.IoCodeExceptions.FileExists*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: CodeJam.IO.IoCodeExceptions.DirectoryExists(System.String)
  commentId: M:CodeJam.IO.IoCodeExceptions.DirectoryExists(System.String)
  id: DirectoryExists(System.String)
  parent: CodeJam.IO.IoCodeExceptions
  langs:
  - csharp
  - vb
  name: DirectoryExists(String)
  nameWithType: IoCodeExceptions.DirectoryExists(String)
  fullName: CodeJam.IO.IoCodeExceptions.DirectoryExists(System.String)
  type: Method
  source:
    remote:
      path: Main/src/IO/IoCodeExceptions.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: DirectoryExists
    path: ../Main/src/IO/IoCodeExceptions.cs
    startLine: 204
  assemblies:
  - CodeJam
  namespace: CodeJam.IO
  summary: Creates <xref href="CodeJam.IO.IoCodeExceptions.IOException(System.String%2cSystem.Object%5b%5d)" data-throw-if-not-resolved="false"></xref> for directory that should not exist.
  example: []
  syntax:
    content: public static IOException DirectoryExists(string directoryPath)
    parameters:
    - id: directoryPath
      type: System.String
      description: The directory being checked.
    return:
      type: System.IO.IOException
      description: Initialized instance of <xref href="CodeJam.IO.IoCodeExceptions.IOException(System.String%2cSystem.Object%5b%5d)" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function DirectoryExists(directoryPath As String) As IOException
  overload: CodeJam.IO.IoCodeExceptions.DirectoryExists*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: CodeJam.IO
  commentId: N:CodeJam.IO
  isExternal: false
  name: CodeJam.IO
  nameWithType: CodeJam.IO
  fullName: CodeJam.IO
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  parent: System
  isExternal: true
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: CodeJam.IO.IoCodeExceptions.ArgumentNotWellFormedPath*
  commentId: Overload:CodeJam.IO.IoCodeExceptions.ArgumentNotWellFormedPath
  isExternal: false
  name: ArgumentNotWellFormedPath
  nameWithType: IoCodeExceptions.ArgumentNotWellFormedPath
  fullName: CodeJam.IO.IoCodeExceptions.ArgumentNotWellFormedPath
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: CodeJam.IO.IoCodeExceptions.ArgumentNotWellFormedAbsolutePath*
  commentId: Overload:CodeJam.IO.IoCodeExceptions.ArgumentNotWellFormedAbsolutePath
  isExternal: false
  name: ArgumentNotWellFormedAbsolutePath
  nameWithType: IoCodeExceptions.ArgumentNotWellFormedAbsolutePath
  fullName: CodeJam.IO.IoCodeExceptions.ArgumentNotWellFormedAbsolutePath
- uid: CodeJam.IO.IoCodeExceptions.ArgumentRootedOrNotRelativePath*
  commentId: Overload:CodeJam.IO.IoCodeExceptions.ArgumentRootedOrNotRelativePath
  isExternal: false
  name: ArgumentRootedOrNotRelativePath
  nameWithType: IoCodeExceptions.ArgumentRootedOrNotRelativePath
  fullName: CodeJam.IO.IoCodeExceptions.ArgumentRootedOrNotRelativePath
- uid: CodeJam.IO.IoCodeExceptions.ArgumentNotSimpleName*
  commentId: Overload:CodeJam.IO.IoCodeExceptions.ArgumentNotSimpleName
  isExternal: false
  name: ArgumentNotSimpleName
  nameWithType: IoCodeExceptions.ArgumentNotSimpleName
  fullName: CodeJam.IO.IoCodeExceptions.ArgumentNotSimpleName
- uid: CodeJam.IO.IoCodeExceptions.ArgumentNotVolumeOrDirectoryPath*
  commentId: Overload:CodeJam.IO.IoCodeExceptions.ArgumentNotVolumeOrDirectoryPath
  isExternal: false
  name: ArgumentNotVolumeOrDirectoryPath
  nameWithType: IoCodeExceptions.ArgumentNotVolumeOrDirectoryPath
  fullName: CodeJam.IO.IoCodeExceptions.ArgumentNotVolumeOrDirectoryPath
- uid: System.IO.FileNotFoundException
  commentId: T:System.IO.FileNotFoundException
  parent: System.IO
  isExternal: true
  name: FileNotFoundException
  nameWithType: FileNotFoundException
  fullName: System.IO.FileNotFoundException
- uid: CodeJam.IO.IoCodeExceptions.ArgumentDirectoryExistsFileExpected*
  commentId: Overload:CodeJam.IO.IoCodeExceptions.ArgumentDirectoryExistsFileExpected
  isExternal: false
  name: ArgumentDirectoryExistsFileExpected
  nameWithType: IoCodeExceptions.ArgumentDirectoryExistsFileExpected
  fullName: CodeJam.IO.IoCodeExceptions.ArgumentDirectoryExistsFileExpected
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: System.IO.DirectoryNotFoundException
  commentId: T:System.IO.DirectoryNotFoundException
  parent: System.IO
  isExternal: true
  name: DirectoryNotFoundException
  nameWithType: DirectoryNotFoundException
  fullName: System.IO.DirectoryNotFoundException
- uid: CodeJam.IO.IoCodeExceptions.ArgumentFileExistsDirectoryExpected*
  commentId: Overload:CodeJam.IO.IoCodeExceptions.ArgumentFileExistsDirectoryExpected
  isExternal: false
  name: ArgumentFileExistsDirectoryExpected
  nameWithType: IoCodeExceptions.ArgumentFileExistsDirectoryExpected
  fullName: CodeJam.IO.IoCodeExceptions.ArgumentFileExistsDirectoryExpected
- uid: CodeJam.IO.IoCodeExceptions.ArgumentFileNotFound*
  commentId: Overload:CodeJam.IO.IoCodeExceptions.ArgumentFileNotFound
  isExternal: false
  name: ArgumentFileNotFound
  nameWithType: IoCodeExceptions.ArgumentFileNotFound
  fullName: CodeJam.IO.IoCodeExceptions.ArgumentFileNotFound
- uid: CodeJam.IO.IoCodeExceptions.ArgumentDirectoryNotFound*
  commentId: Overload:CodeJam.IO.IoCodeExceptions.ArgumentDirectoryNotFound
  isExternal: false
  name: ArgumentDirectoryNotFound
  nameWithType: IoCodeExceptions.ArgumentDirectoryNotFound
  fullName: CodeJam.IO.IoCodeExceptions.ArgumentDirectoryNotFound
- uid: CodeJam.IO.IoCodeExceptions.IOException(System.String,System.Object[])
  commentId: M:CodeJam.IO.IoCodeExceptions.IOException(System.String,System.Object[])
- uid: CodeJam.IO.IoCodeExceptions.IOException*
  commentId: Overload:CodeJam.IO.IoCodeExceptions.IOException
  isExternal: false
  name: IOException
  nameWithType: IoCodeExceptions.IOException
  fullName: CodeJam.IO.IoCodeExceptions.IOException
- uid: System.Object[]
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.IO.IOException
  commentId: T:System.IO.IOException
  parent: System.IO
  isExternal: true
  name: IOException
  nameWithType: IOException
  fullName: System.IO.IOException
- uid: CodeJam.IO.IoCodeExceptions.FileExists*
  commentId: Overload:CodeJam.IO.IoCodeExceptions.FileExists
  isExternal: false
  name: FileExists
  nameWithType: IoCodeExceptions.FileExists
  fullName: CodeJam.IO.IoCodeExceptions.FileExists
- uid: CodeJam.IO.IoCodeExceptions.DirectoryExists*
  commentId: Overload:CodeJam.IO.IoCodeExceptions.DirectoryExists
  isExternal: false
  name: DirectoryExists
  nameWithType: IoCodeExceptions.DirectoryExists
  fullName: CodeJam.IO.IoCodeExceptions.DirectoryExists
