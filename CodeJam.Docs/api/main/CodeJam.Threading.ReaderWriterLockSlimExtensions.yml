### YamlMime:ManagedReference
items:
- uid: CodeJam.Threading.ReaderWriterLockSlimExtensions
  commentId: T:CodeJam.Threading.ReaderWriterLockSlimExtensions
  id: ReaderWriterLockSlimExtensions
  parent: CodeJam.Threading
  children:
  - CodeJam.Threading.ReaderWriterLockSlimExtensions.GetReadLock(System.Threading.ReaderWriterLockSlim)
  - CodeJam.Threading.ReaderWriterLockSlimExtensions.GetUpgradeableReadLock(System.Threading.ReaderWriterLockSlim)
  - CodeJam.Threading.ReaderWriterLockSlimExtensions.GetWriteLock(System.Threading.ReaderWriterLockSlim)
  langs:
  - csharp
  - vb
  name: ReaderWriterLockSlimExtensions
  nameWithType: ReaderWriterLockSlimExtensions
  fullName: CodeJam.Threading.ReaderWriterLockSlimExtensions
  type: Class
  source:
    remote:
      path: Main/src/Threading/ReaderWriterLockSlimExtensions.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: ReaderWriterLockSlimExtensions
    path: ../Main/src/Threading/ReaderWriterLockSlimExtensions.cs
    startLine: 12
  assemblies:
  - CodeJam
  namespace: CodeJam.Threading
  summary: "\nRepresents the extension methods for <xref href=\"System.Threading.ReaderWriterLockSlim\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static class ReaderWriterLockSlimExtensions
    content.vb: Public Module ReaderWriterLockSlimExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: CodeJam.Threading.ReaderWriterLockSlimExtensions.GetReadLock(System.Threading.ReaderWriterLockSlim)
  commentId: M:CodeJam.Threading.ReaderWriterLockSlimExtensions.GetReadLock(System.Threading.ReaderWriterLockSlim)
  id: GetReadLock(System.Threading.ReaderWriterLockSlim)
  isExtensionMethod: true
  parent: CodeJam.Threading.ReaderWriterLockSlimExtensions
  langs:
  - csharp
  - vb
  name: GetReadLock(ReaderWriterLockSlim)
  nameWithType: ReaderWriterLockSlimExtensions.GetReadLock(ReaderWriterLockSlim)
  fullName: CodeJam.Threading.ReaderWriterLockSlimExtensions.GetReadLock(System.Threading.ReaderWriterLockSlim)
  type: Method
  source:
    remote:
      path: Main/src/Threading/ReaderWriterLockSlimExtensions.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: GetReadLock
    path: ../Main/src/Threading/ReaderWriterLockSlimExtensions.cs
    startLine: 23
  assemblies:
  - CodeJam
  namespace: CodeJam.Threading
  summary: "\nTries to enter the lock in read mode.\n"
  example: []
  syntax:
    content: public static ReaderWriterLockSlimExtensions.ReadLockScope GetReadLock(this ReaderWriterLockSlim readerWriterLock)
    parameters:
    - id: readerWriterLock
      type: System.Threading.ReaderWriterLockSlim
      description: The <xref href="System.Threading.ReaderWriterLockSlim" data-throw-if-not-resolved="false"></xref> instance.
    return:
      type: CodeJam.Threading.ReaderWriterLockSlimExtensions.ReadLockScope
      description: "\nThe <xref href=\"System.IDisposable\" data-throw-if-not-resolved=\"false\"></xref> object that reduce the recursion count for read mode, and exits read mode if the\nresulting count is 0 (zero).\n"
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetReadLock(readerWriterLock As ReaderWriterLockSlim) As ReaderWriterLockSlimExtensions.ReadLockScope
  overload: CodeJam.Threading.ReaderWriterLockSlimExtensions.GetReadLock*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: CodeJam.Threading.ReaderWriterLockSlimExtensions.GetWriteLock(System.Threading.ReaderWriterLockSlim)
  commentId: M:CodeJam.Threading.ReaderWriterLockSlimExtensions.GetWriteLock(System.Threading.ReaderWriterLockSlim)
  id: GetWriteLock(System.Threading.ReaderWriterLockSlim)
  isExtensionMethod: true
  parent: CodeJam.Threading.ReaderWriterLockSlimExtensions
  langs:
  - csharp
  - vb
  name: GetWriteLock(ReaderWriterLockSlim)
  nameWithType: ReaderWriterLockSlimExtensions.GetWriteLock(ReaderWriterLockSlim)
  fullName: CodeJam.Threading.ReaderWriterLockSlimExtensions.GetWriteLock(System.Threading.ReaderWriterLockSlim)
  type: Method
  source:
    remote:
      path: Main/src/Threading/ReaderWriterLockSlimExtensions.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: GetWriteLock
    path: ../Main/src/Threading/ReaderWriterLockSlimExtensions.cs
    startLine: 35
  assemblies:
  - CodeJam
  namespace: CodeJam.Threading
  summary: "\nTries to enter the lock in write mode.\n"
  example: []
  syntax:
    content: public static ReaderWriterLockSlimExtensions.WriteLockScope GetWriteLock(this ReaderWriterLockSlim readerWriterLock)
    parameters:
    - id: readerWriterLock
      type: System.Threading.ReaderWriterLockSlim
      description: The <xref href="System.Threading.ReaderWriterLockSlim" data-throw-if-not-resolved="false"></xref> instance.
    return:
      type: CodeJam.Threading.ReaderWriterLockSlimExtensions.WriteLockScope
      description: "\nThe <xref href=\"System.IDisposable\" data-throw-if-not-resolved=\"false\"></xref> object that reduce the recursion count for write mode, and exits write mode if the\nresulting count is 0 (zero).\n"
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetWriteLock(readerWriterLock As ReaderWriterLockSlim) As ReaderWriterLockSlimExtensions.WriteLockScope
  overload: CodeJam.Threading.ReaderWriterLockSlimExtensions.GetWriteLock*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: CodeJam.Threading.ReaderWriterLockSlimExtensions.GetUpgradeableReadLock(System.Threading.ReaderWriterLockSlim)
  commentId: M:CodeJam.Threading.ReaderWriterLockSlimExtensions.GetUpgradeableReadLock(System.Threading.ReaderWriterLockSlim)
  id: GetUpgradeableReadLock(System.Threading.ReaderWriterLockSlim)
  isExtensionMethod: true
  parent: CodeJam.Threading.ReaderWriterLockSlimExtensions
  langs:
  - csharp
  - vb
  name: GetUpgradeableReadLock(ReaderWriterLockSlim)
  nameWithType: ReaderWriterLockSlimExtensions.GetUpgradeableReadLock(ReaderWriterLockSlim)
  fullName: CodeJam.Threading.ReaderWriterLockSlimExtensions.GetUpgradeableReadLock(System.Threading.ReaderWriterLockSlim)
  type: Method
  source:
    remote:
      path: Main/src/Threading/ReaderWriterLockSlimExtensions.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: GetUpgradeableReadLock
    path: ../Main/src/Threading/ReaderWriterLockSlimExtensions.cs
    startLine: 47
  assemblies:
  - CodeJam
  namespace: CodeJam.Threading
  summary: "\nTries to enter the lock in upgradeable mode.\n"
  example: []
  syntax:
    content: public static ReaderWriterLockSlimExtensions.UpgradeableReadLockScope GetUpgradeableReadLock(this ReaderWriterLockSlim readerWriterLock)
    parameters:
    - id: readerWriterLock
      type: System.Threading.ReaderWriterLockSlim
      description: The <xref href="System.Threading.ReaderWriterLockSlim" data-throw-if-not-resolved="false"></xref> instance.
    return:
      type: CodeJam.Threading.ReaderWriterLockSlimExtensions.UpgradeableReadLockScope
      description: "\nThe <xref href=\"System.IDisposable\" data-throw-if-not-resolved=\"false\"></xref> object that reduce the recursion count for upgradeable mode, and exits upgradeable\nmode if the resulting count is 0 (zero).\n"
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetUpgradeableReadLock(readerWriterLock As ReaderWriterLockSlim) As ReaderWriterLockSlimExtensions.UpgradeableReadLockScope
  overload: CodeJam.Threading.ReaderWriterLockSlimExtensions.GetUpgradeableReadLock*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Threading.ReaderWriterLockSlim
  commentId: T:System.Threading.ReaderWriterLockSlim
  parent: System.Threading
  isExternal: true
  name: ReaderWriterLockSlim
  nameWithType: ReaderWriterLockSlim
  fullName: System.Threading.ReaderWriterLockSlim
- uid: CodeJam.Threading
  commentId: N:CodeJam.Threading
  isExternal: false
  name: CodeJam.Threading
  nameWithType: CodeJam.Threading
  fullName: CodeJam.Threading
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: CodeJam.Threading.ReaderWriterLockSlimExtensions.GetReadLock*
  commentId: Overload:CodeJam.Threading.ReaderWriterLockSlimExtensions.GetReadLock
  isExternal: false
  name: GetReadLock
  nameWithType: ReaderWriterLockSlimExtensions.GetReadLock
  fullName: CodeJam.Threading.ReaderWriterLockSlimExtensions.GetReadLock
- uid: CodeJam.Threading.ReaderWriterLockSlimExtensions.ReadLockScope
  commentId: T:CodeJam.Threading.ReaderWriterLockSlimExtensions.ReadLockScope
  parent: CodeJam.Threading
  isExternal: false
  name: ReaderWriterLockSlimExtensions.ReadLockScope
  nameWithType: ReaderWriterLockSlimExtensions.ReadLockScope
  fullName: CodeJam.Threading.ReaderWriterLockSlimExtensions.ReadLockScope
- uid: CodeJam.Threading.ReaderWriterLockSlimExtensions.GetWriteLock*
  commentId: Overload:CodeJam.Threading.ReaderWriterLockSlimExtensions.GetWriteLock
  isExternal: false
  name: GetWriteLock
  nameWithType: ReaderWriterLockSlimExtensions.GetWriteLock
  fullName: CodeJam.Threading.ReaderWriterLockSlimExtensions.GetWriteLock
- uid: CodeJam.Threading.ReaderWriterLockSlimExtensions.WriteLockScope
  commentId: T:CodeJam.Threading.ReaderWriterLockSlimExtensions.WriteLockScope
  parent: CodeJam.Threading
  isExternal: false
  name: ReaderWriterLockSlimExtensions.WriteLockScope
  nameWithType: ReaderWriterLockSlimExtensions.WriteLockScope
  fullName: CodeJam.Threading.ReaderWriterLockSlimExtensions.WriteLockScope
- uid: CodeJam.Threading.ReaderWriterLockSlimExtensions.GetUpgradeableReadLock*
  commentId: Overload:CodeJam.Threading.ReaderWriterLockSlimExtensions.GetUpgradeableReadLock
  isExternal: false
  name: GetUpgradeableReadLock
  nameWithType: ReaderWriterLockSlimExtensions.GetUpgradeableReadLock
  fullName: CodeJam.Threading.ReaderWriterLockSlimExtensions.GetUpgradeableReadLock
- uid: CodeJam.Threading.ReaderWriterLockSlimExtensions.UpgradeableReadLockScope
  commentId: T:CodeJam.Threading.ReaderWriterLockSlimExtensions.UpgradeableReadLockScope
  parent: CodeJam.Threading
  isExternal: false
  name: ReaderWriterLockSlimExtensions.UpgradeableReadLockScope
  nameWithType: ReaderWriterLockSlimExtensions.UpgradeableReadLockScope
  fullName: CodeJam.Threading.ReaderWriterLockSlimExtensions.UpgradeableReadLockScope
