### YamlMime:ManagedReference
items:
- uid: CodeJam.ExceptionExtensions
  commentId: T:CodeJam.ExceptionExtensions
  id: ExceptionExtensions
  parent: CodeJam
  children:
  - CodeJam.ExceptionExtensions.ToDiagnosticString(System.Exception)
  - CodeJam.ExceptionExtensions.ToDiagnosticString(System.Exception,System.Text.StringBuilder)
  langs:
  - csharp
  - vb
  name: ExceptionExtensions
  nameWithType: ExceptionExtensions
  fullName: CodeJam.ExceptionExtensions
  type: Class
  source:
    remote:
      path: Main/src/ExceptionExtensions.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: ExceptionExtensions
    path: ../Main/src/ExceptionExtensions.cs
    startLine: 13
  assemblies:
  - CodeJam
  namespace: CodeJam
  summary: "\nThe <xref href=\"System.Exception\" data-throw-if-not-resolved=\"false\"></xref> class extensions.\n"
  example: []
  syntax:
    content: public static class ExceptionExtensions
    content.vb: Public Module ExceptionExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: CodeJam.ExceptionExtensions.ToDiagnosticString(System.Exception,System.Text.StringBuilder)
  commentId: M:CodeJam.ExceptionExtensions.ToDiagnosticString(System.Exception,System.Text.StringBuilder)
  id: ToDiagnosticString(System.Exception,System.Text.StringBuilder)
  isExtensionMethod: true
  parent: CodeJam.ExceptionExtensions
  langs:
  - csharp
  - vb
  name: ToDiagnosticString(Exception, StringBuilder)
  nameWithType: ExceptionExtensions.ToDiagnosticString(Exception, StringBuilder)
  fullName: CodeJam.ExceptionExtensions.ToDiagnosticString(System.Exception, System.Text.StringBuilder)
  type: Method
  source:
    remote:
      path: Main/src/ExceptionExtensions.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: ToDiagnosticString
    path: ../Main/src/ExceptionExtensions.cs
    startLine: 22
  assemblies:
  - CodeJam
  namespace: CodeJam
  summary: "\nReturns detailed exception text.\n"
  example: []
  syntax:
    content: public static StringBuilder ToDiagnosticString(this Exception exception, StringBuilder stringBuilder)
    parameters:
    - id: exception
      type: System.Exception
      description: Exception to process.
    - id: stringBuilder
      type: System.Text.StringBuilder
      description: <xref href="System.Text.StringBuilder" data-throw-if-not-resolved="false"></xref> instance.
    return:
      type: System.Text.StringBuilder
      description: Detailed exception text.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToDiagnosticString(exception As Exception, stringBuilder As StringBuilder) As StringBuilder
  overload: CodeJam.ExceptionExtensions.ToDiagnosticString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: CodeJam.ExceptionExtensions.ToDiagnosticString(System.Exception)
  commentId: M:CodeJam.ExceptionExtensions.ToDiagnosticString(System.Exception)
  id: ToDiagnosticString(System.Exception)
  isExtensionMethod: true
  parent: CodeJam.ExceptionExtensions
  langs:
  - csharp
  - vb
  name: ToDiagnosticString(Exception)
  nameWithType: ExceptionExtensions.ToDiagnosticString(Exception)
  fullName: CodeJam.ExceptionExtensions.ToDiagnosticString(System.Exception)
  type: Method
  source:
    remote:
      path: Main/src/ExceptionExtensions.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: ToDiagnosticString
    path: ../Main/src/ExceptionExtensions.cs
    startLine: 90
  assemblies:
  - CodeJam
  namespace: CodeJam
  summary: "\nReturns detailed exception text.\n"
  example: []
  syntax:
    content: public static string ToDiagnosticString(this Exception exception)
    parameters:
    - id: exception
      type: System.Exception
      description: Exception to process.
    return:
      type: System.String
      description: Detailed exception text.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToDiagnosticString(exception As Exception) As String
  overload: CodeJam.ExceptionExtensions.ToDiagnosticString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: CodeJam
  commentId: N:CodeJam
  isExternal: false
  name: CodeJam
  nameWithType: CodeJam
  fullName: CodeJam
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Text.StringBuilder
  commentId: T:System.Text.StringBuilder
  parent: System.Text
  isExternal: true
  name: StringBuilder
  nameWithType: StringBuilder
  fullName: System.Text.StringBuilder
- uid: CodeJam.ExceptionExtensions.ToDiagnosticString*
  commentId: Overload:CodeJam.ExceptionExtensions.ToDiagnosticString
  isExternal: false
  name: ToDiagnosticString
  nameWithType: ExceptionExtensions.ToDiagnosticString
  fullName: CodeJam.ExceptionExtensions.ToDiagnosticString
- uid: System.Text
  commentId: N:System.Text
  isExternal: false
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
