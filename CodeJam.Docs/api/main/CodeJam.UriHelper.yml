### YamlMime:ManagedReference
items:
- uid: CodeJam.UriHelper
  commentId: T:CodeJam.UriHelper
  id: UriHelper
  parent: CodeJam
  children:
  - CodeJam.UriHelper.Combine(System.String,System.String)
  - CodeJam.UriHelper.Combine(System.Uri,System.String)
  - CodeJam.UriHelper.Combine(System.Uri,System.Uri)
  langs:
  - csharp
  - vb
  name: UriHelper
  nameWithType: UriHelper
  fullName: CodeJam.UriHelper
  type: Class
  source:
    remote:
      path: Main/src/UriHelper.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: UriHelper
    path: ../Main/src/UriHelper.cs
    startLine: 9
  assemblies:
  - CodeJam
  namespace: CodeJam
  summary: "\nHelper methods for <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public static class UriHelper
    content.vb: Public Module UriHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: CodeJam.UriHelper.Combine(System.Uri,System.Uri)
  commentId: M:CodeJam.UriHelper.Combine(System.Uri,System.Uri)
  id: Combine(System.Uri,System.Uri)
  isExtensionMethod: true
  parent: CodeJam.UriHelper
  langs:
  - csharp
  - vb
  name: Combine(Uri, Uri)
  nameWithType: UriHelper.Combine(Uri, Uri)
  fullName: CodeJam.UriHelper.Combine(System.Uri, System.Uri)
  type: Method
  source:
    remote:
      path: Main/src/UriHelper.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: Combine
    path: ../Main/src/UriHelper.cs
    startLine: 18
  assemblies:
  - CodeJam
  namespace: CodeJam
  summary: "\nCombine two uris.\n"
  example: []
  syntax:
    content: public static Uri Combine(this Uri baseUri, Uri relativeUri)
    parameters:
    - id: baseUri
      type: System.Uri
      description: Base uri
    - id: relativeUri
      type: System.Uri
      description: Relative uri
    return:
      type: System.Uri
      description: Combined uri.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Combine(baseUri As Uri, relativeUri As Uri) As Uri
  overload: CodeJam.UriHelper.Combine*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: CodeJam.UriHelper.Combine(System.Uri,System.String)
  commentId: M:CodeJam.UriHelper.Combine(System.Uri,System.String)
  id: Combine(System.Uri,System.String)
  isExtensionMethod: true
  parent: CodeJam.UriHelper
  langs:
  - csharp
  - vb
  name: Combine(Uri, String)
  nameWithType: UriHelper.Combine(Uri, String)
  fullName: CodeJam.UriHelper.Combine(System.Uri, System.String)
  type: Method
  source:
    remote:
      path: Main/src/UriHelper.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: Combine
    path: ../Main/src/UriHelper.cs
    startLine: 27
  assemblies:
  - CodeJam
  namespace: CodeJam
  summary: "\nCombine two uris.\n"
  example: []
  syntax:
    content: public static Uri Combine(this Uri baseUri, string relativeUri)
    parameters:
    - id: baseUri
      type: System.Uri
      description: Base uri
    - id: relativeUri
      type: System.String
      description: Relative uri
    return:
      type: System.Uri
      description: Combined uri.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Combine(baseUri As Uri, relativeUri As String) As Uri
  overload: CodeJam.UriHelper.Combine*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: CodeJam.UriHelper.Combine(System.String,System.String)
  commentId: M:CodeJam.UriHelper.Combine(System.String,System.String)
  id: Combine(System.String,System.String)
  parent: CodeJam.UriHelper
  langs:
  - csharp
  - vb
  name: Combine(String, String)
  nameWithType: UriHelper.Combine(String, String)
  fullName: CodeJam.UriHelper.Combine(System.String, System.String)
  type: Method
  source:
    remote:
      path: Main/src/UriHelper.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: Combine
    path: ../Main/src/UriHelper.cs
    startLine: 36
  assemblies:
  - CodeJam
  namespace: CodeJam
  summary: "\nCombine two uris.\n"
  example: []
  syntax:
    content: public static Uri Combine(string baseUri, string relativeUri)
    parameters:
    - id: baseUri
      type: System.String
      description: Base uri
    - id: relativeUri
      type: System.String
      description: Relative uri
    return:
      type: System.Uri
      description: Combined uri.
    content.vb: Public Shared Function Combine(baseUri As String, relativeUri As String) As Uri
  overload: CodeJam.UriHelper.Combine*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: CodeJam
  commentId: N:CodeJam
  isExternal: false
  name: CodeJam
  nameWithType: CodeJam
  fullName: CodeJam
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: CodeJam.UriHelper.Combine*
  commentId: Overload:CodeJam.UriHelper.Combine
  isExternal: false
  name: Combine
  nameWithType: UriHelper.Combine
  fullName: CodeJam.UriHelper.Combine
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
