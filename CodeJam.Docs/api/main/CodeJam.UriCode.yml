### YamlMime:ManagedReference
items:
- uid: CodeJam.UriCode
  commentId: T:CodeJam.UriCode
  id: UriCode
  parent: CodeJam
  children:
  - CodeJam.UriCode.IsWellFormedAbsoluteUri(System.String,System.String)
  - CodeJam.UriCode.IsWellFormedRelativeUri(System.String,System.String)
  - CodeJam.UriCode.IsWellFormedUri(System.String,System.String)
  langs:
  - csharp
  - vb
  name: UriCode
  nameWithType: UriCode
  fullName: CodeJam.UriCode
  type: Class
  source:
    remote:
      path: Main/src/Assertions/UriCode.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: UriCode
    path: ../Main/src/Assertions/UriCode.cs
    startLine: 11
  assemblies:
  - CodeJam
  namespace: CodeJam
  summary: URI assertions class.
  example: []
  syntax:
    content: public static class UriCode
    content.vb: Public Module UriCode
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: CodeJam.UriCode.IsWellFormedUri(System.String,System.String)
  commentId: M:CodeJam.UriCode.IsWellFormedUri(System.String,System.String)
  id: IsWellFormedUri(System.String,System.String)
  parent: CodeJam.UriCode
  langs:
  - csharp
  - vb
  name: IsWellFormedUri(String, String)
  nameWithType: UriCode.IsWellFormedUri(String, String)
  fullName: CodeJam.UriCode.IsWellFormedUri(System.String, System.String)
  type: Method
  source:
    remote:
      path: Main/src/Assertions/UriCode.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: IsWellFormedUri
    path: ../Main/src/Assertions/UriCode.cs
    startLine: 17
  assemblies:
  - CodeJam
  namespace: CodeJam
  summary: Asserts that specified URI is well-formed absolute or relative URI.
  example: []
  syntax:
    content: public static void IsWellFormedUri(string uri, string argName)
    parameters:
    - id: uri
      type: System.String
      description: The URI.
    - id: argName
      type: System.String
      description: Name of the argument.
    content.vb: Public Shared Sub IsWellFormedUri(uri As String, argName As String)
  overload: CodeJam.UriCode.IsWellFormedUri*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: CodeJam.UriCode.IsWellFormedAbsoluteUri(System.String,System.String)
  commentId: M:CodeJam.UriCode.IsWellFormedAbsoluteUri(System.String,System.String)
  id: IsWellFormedAbsoluteUri(System.String,System.String)
  parent: CodeJam.UriCode
  langs:
  - csharp
  - vb
  name: IsWellFormedAbsoluteUri(String, String)
  nameWithType: UriCode.IsWellFormedAbsoluteUri(String, String)
  fullName: CodeJam.UriCode.IsWellFormedAbsoluteUri(System.String, System.String)
  type: Method
  source:
    remote:
      path: Main/src/Assertions/UriCode.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: IsWellFormedAbsoluteUri
    path: ../Main/src/Assertions/UriCode.cs
    startLine: 31
  assemblies:
  - CodeJam
  namespace: CodeJam
  summary: Asserts that specified URI is well-formed absolute URI.
  example: []
  syntax:
    content: public static void IsWellFormedAbsoluteUri(string uri, string argName)
    parameters:
    - id: uri
      type: System.String
      description: The URI.
    - id: argName
      type: System.String
      description: Name of the argument.
    content.vb: Public Shared Sub IsWellFormedAbsoluteUri(uri As String, argName As String)
  overload: CodeJam.UriCode.IsWellFormedAbsoluteUri*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: CodeJam.UriCode.IsWellFormedRelativeUri(System.String,System.String)
  commentId: M:CodeJam.UriCode.IsWellFormedRelativeUri(System.String,System.String)
  id: IsWellFormedRelativeUri(System.String,System.String)
  parent: CodeJam.UriCode
  langs:
  - csharp
  - vb
  name: IsWellFormedRelativeUri(String, String)
  nameWithType: UriCode.IsWellFormedRelativeUri(String, String)
  fullName: CodeJam.UriCode.IsWellFormedRelativeUri(System.String, System.String)
  type: Method
  source:
    remote:
      path: Main/src/Assertions/UriCode.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: IsWellFormedRelativeUri
    path: ../Main/src/Assertions/UriCode.cs
    startLine: 45
  assemblies:
  - CodeJam
  namespace: CodeJam
  summary: Asserts that specified URI is well-formed relative URI.
  example: []
  syntax:
    content: public static void IsWellFormedRelativeUri(string uri, string argName)
    parameters:
    - id: uri
      type: System.String
      description: The URI.
    - id: argName
      type: System.String
      description: Name of the argument.
    content.vb: Public Shared Sub IsWellFormedRelativeUri(uri As String, argName As String)
  overload: CodeJam.UriCode.IsWellFormedRelativeUri*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: CodeJam
  commentId: N:CodeJam
  isExternal: false
  name: CodeJam
  nameWithType: CodeJam
  fullName: CodeJam
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: CodeJam.UriCode.IsWellFormedUri*
  commentId: Overload:CodeJam.UriCode.IsWellFormedUri
  isExternal: false
  name: IsWellFormedUri
  nameWithType: UriCode.IsWellFormedUri
  fullName: CodeJam.UriCode.IsWellFormedUri
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: CodeJam.UriCode.IsWellFormedAbsoluteUri*
  commentId: Overload:CodeJam.UriCode.IsWellFormedAbsoluteUri
  isExternal: false
  name: IsWellFormedAbsoluteUri
  nameWithType: UriCode.IsWellFormedAbsoluteUri
  fullName: CodeJam.UriCode.IsWellFormedAbsoluteUri
- uid: CodeJam.UriCode.IsWellFormedRelativeUri*
  commentId: Overload:CodeJam.UriCode.IsWellFormedRelativeUri
  isExternal: false
  name: IsWellFormedRelativeUri
  nameWithType: UriCode.IsWellFormedRelativeUri
  fullName: CodeJam.UriCode.IsWellFormedRelativeUri
