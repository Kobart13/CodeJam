### YamlMime:ManagedReference
items:
- uid: CodeJam.TableData.DataLine
  commentId: T:CodeJam.TableData.DataLine
  id: DataLine
  parent: CodeJam.TableData
  children:
  - CodeJam.TableData.DataLine.#ctor(System.Int32,System.String[])
  - CodeJam.TableData.DataLine.LineNum
  - CodeJam.TableData.DataLine.ToString
  - CodeJam.TableData.DataLine.Values
  langs:
  - csharp
  - vb
  name: DataLine
  nameWithType: DataLine
  fullName: CodeJam.TableData.DataLine
  type: Struct
  source:
    remote:
      path: Blocks/src/TableData/DataLine.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: DataLine
    path: ../Blocks/src/TableData/DataLine.cs
    startLine: 11
  assemblies:
  - CodeJam.Blocks
  namespace: CodeJam.TableData
  summary: "\nLine of data.\n"
  example: []
  syntax:
    content: public struct DataLine
    content.vb: Public Structure DataLine
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  extensionMethods:
  - CodeJam.TableData.DataLine.CodeJam.Mapping.Map.DeepCopy``1
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: CodeJam.TableData.DataLine.#ctor(System.Int32,System.String[])
  commentId: M:CodeJam.TableData.DataLine.#ctor(System.Int32,System.String[])
  id: '#ctor(System.Int32,System.String[])'
  parent: CodeJam.TableData.DataLine
  langs:
  - csharp
  - vb
  name: DataLine(Int32, String[])
  nameWithType: DataLine.DataLine(Int32, String[])
  fullName: CodeJam.TableData.DataLine.DataLine(System.Int32, System.String[])
  type: Constructor
  source:
    remote:
      path: Blocks/src/TableData/DataLine.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: .ctor
    path: ../Blocks/src/TableData/DataLine.cs
    startLine: 19
  assemblies:
  - CodeJam.Blocks
  namespace: CodeJam.TableData
  summary: "\nInitializes a new instance of the <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public DataLine(int lineNum, string[] values)
    parameters:
    - id: lineNum
      type: System.Int32
      description: The line number.
    - id: values
      type: System.String[]
      description: Line values.
    content.vb: Public Sub New(lineNum As Integer, values As String())
  overload: CodeJam.TableData.DataLine.#ctor*
  nameWithType.vb: DataLine.DataLine(Int32, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: CodeJam.TableData.DataLine.DataLine(System.Int32, System.String())
  name.vb: DataLine(Int32, String())
- uid: CodeJam.TableData.DataLine.LineNum
  commentId: P:CodeJam.TableData.DataLine.LineNum
  id: LineNum
  parent: CodeJam.TableData.DataLine
  langs:
  - csharp
  - vb
  name: LineNum
  nameWithType: DataLine.LineNum
  fullName: CodeJam.TableData.DataLine.LineNum
  type: Property
  source:
    remote:
      path: Blocks/src/TableData/DataLine.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: LineNum
    path: ../Blocks/src/TableData/DataLine.cs
    startLine: 28
  assemblies:
  - CodeJam.Blocks
  namespace: CodeJam.TableData
  summary: "\nLine number.\n"
  example: []
  syntax:
    content: public int LineNum { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property LineNum As Integer
  overload: CodeJam.TableData.DataLine.LineNum*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CodeJam.TableData.DataLine.Values
  commentId: P:CodeJam.TableData.DataLine.Values
  id: Values
  parent: CodeJam.TableData.DataLine
  langs:
  - csharp
  - vb
  name: Values
  nameWithType: DataLine.Values
  fullName: CodeJam.TableData.DataLine.Values
  type: Property
  source:
    remote:
      path: Blocks/src/TableData/DataLine.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: Values
    path: ../Blocks/src/TableData/DataLine.cs
    startLine: 33
  assemblies:
  - CodeJam.Blocks
  namespace: CodeJam.TableData
  summary: "\nLine values.\n"
  example: []
  syntax:
    content: public string[] Values { get; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public ReadOnly Property Values As String()
  overload: CodeJam.TableData.DataLine.Values*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CodeJam.TableData.DataLine.ToString
  commentId: M:CodeJam.TableData.DataLine.ToString
  id: ToString
  parent: CodeJam.TableData.DataLine
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: DataLine.ToString()
  fullName: CodeJam.TableData.DataLine.ToString()
  type: Method
  source:
    remote:
      path: Blocks/src/TableData/DataLine.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: ToString
    path: ../Blocks/src/TableData/DataLine.cs
    startLine: 40
  assemblies:
  - CodeJam.Blocks
  namespace: CodeJam.TableData
  summary: Returns the fully qualified type name of this instance.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> containing a fully qualified type name.
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: CodeJam.TableData.DataLine.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: CodeJam.TableData
  commentId: N:CodeJam.TableData
  isExternal: false
  name: CodeJam.TableData
  nameWithType: CodeJam.TableData
  fullName: CodeJam.TableData
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: CodeJam.TableData.DataLine.CodeJam.Mapping.Map.DeepCopy``1
  commentId: M:CodeJam.Mapping.Map.DeepCopy``1(``0)
  parent: CodeJam.Mapping.Map
  definition: CodeJam.Mapping.Map.DeepCopy``1(``0)
  name: DeepCopy<DataLine>()
  nameWithType: Map.DeepCopy<DataLine>()
  fullName: CodeJam.Mapping.Map.DeepCopy<CodeJam.TableData.DataLine>()
  nameWithType.vb: Map.DeepCopy(Of DataLine)()
  fullName.vb: CodeJam.Mapping.Map.DeepCopy(Of CodeJam.TableData.DataLine)()
  name.vb: DeepCopy(Of DataLine)()
  spec.csharp:
  - uid: CodeJam.Mapping.Map.DeepCopy``1
    name: DeepCopy<DataLine>
    nameWithType: Map.DeepCopy<DataLine>
    fullName: CodeJam.Mapping.Map.DeepCopy<CodeJam.TableData.DataLine>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CodeJam.Mapping.Map.DeepCopy``1
    name: DeepCopy(Of DataLine)
    nameWithType: Map.DeepCopy(Of DataLine)
    fullName: CodeJam.Mapping.Map.DeepCopy(Of CodeJam.TableData.DataLine)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: CodeJam.Mapping.Map.DeepCopy``1(``0)
  commentId: M:CodeJam.Mapping.Map.DeepCopy``1(``0)
  isExternal: false
  name: DeepCopy<T>(T)
  nameWithType: Map.DeepCopy<T>(T)
  fullName: CodeJam.Mapping.Map.DeepCopy<T>(T)
  nameWithType.vb: Map.DeepCopy(Of T)(T)
  fullName.vb: CodeJam.Mapping.Map.DeepCopy(Of T)(T)
  name.vb: DeepCopy(Of T)(T)
  spec.csharp:
  - uid: CodeJam.Mapping.Map.DeepCopy``1(``0)
    name: DeepCopy<T>
    nameWithType: Map.DeepCopy<T>
    fullName: CodeJam.Mapping.Map.DeepCopy<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CodeJam.Mapping.Map.DeepCopy``1(``0)
    name: DeepCopy(Of T)
    nameWithType: Map.DeepCopy(Of T)
    fullName: CodeJam.Mapping.Map.DeepCopy(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: CodeJam.Mapping.Map
  commentId: T:CodeJam.Mapping.Map
  parent: CodeJam.Mapping
  isExternal: false
  name: Map
  nameWithType: Map
  fullName: CodeJam.Mapping.Map
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: CodeJam.Mapping
  commentId: N:CodeJam.Mapping
  isExternal: false
  name: CodeJam.Mapping
  nameWithType: CodeJam.Mapping
  fullName: CodeJam.Mapping
- uid: CodeJam.TableData.DataLine.#ctor*
  commentId: Overload:CodeJam.TableData.DataLine.#ctor
  isExternal: false
  name: DataLine
  nameWithType: DataLine.DataLine
  fullName: CodeJam.TableData.DataLine.DataLine
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: CodeJam.TableData.DataLine.LineNum*
  commentId: Overload:CodeJam.TableData.DataLine.LineNum
  isExternal: false
  name: LineNum
  nameWithType: DataLine.LineNum
  fullName: CodeJam.TableData.DataLine.LineNum
- uid: CodeJam.TableData.DataLine.Values*
  commentId: Overload:CodeJam.TableData.DataLine.Values
  isExternal: false
  name: Values
  nameWithType: DataLine.Values
  fullName: CodeJam.TableData.DataLine.Values
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: CodeJam.TableData.DataLine.ToString*
  commentId: Overload:CodeJam.TableData.DataLine.ToString
  isExternal: false
  name: ToString
  nameWithType: DataLine.ToString
  fullName: CodeJam.TableData.DataLine.ToString
