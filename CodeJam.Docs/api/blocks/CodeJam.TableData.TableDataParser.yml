### YamlMime:ManagedReference
items:
- uid: CodeJam.TableData.TableDataParser
  commentId: T:CodeJam.TableData.TableDataParser
  id: TableDataParser
  parent: CodeJam.TableData
  children:
  - CodeJam.TableData.TableDataParser.Parse(CodeJam.TableData.Parser,System.IO.TextReader)
  - CodeJam.TableData.TableDataParser.Parse(CodeJam.TableData.Parser,System.String)
  langs:
  - csharp
  - vb
  name: TableDataParser
  nameWithType: TableDataParser
  fullName: CodeJam.TableData.TableDataParser
  type: Class
  source:
    remote:
      path: Blocks/src/TableData/TableDataParser.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: TableDataParser
    path: ../Blocks/src/TableData/TableDataParser.cs
    startLine: 11
  assemblies:
  - CodeJam.Blocks
  namespace: CodeJam.TableData
  summary: "\nContains methods for table data parsing.\n"
  example: []
  syntax:
    content: public static class TableDataParser
    content.vb: Public Module TableDataParser
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: CodeJam.TableData.TableDataParser.Parse(CodeJam.TableData.Parser,System.String)
  commentId: M:CodeJam.TableData.TableDataParser.Parse(CodeJam.TableData.Parser,System.String)
  id: Parse(CodeJam.TableData.Parser,System.String)
  isExtensionMethod: true
  parent: CodeJam.TableData.TableDataParser
  langs:
  - csharp
  - vb
  name: Parse(Parser, String)
  nameWithType: TableDataParser.Parse(Parser, String)
  fullName: CodeJam.TableData.TableDataParser.Parse(CodeJam.TableData.Parser, System.String)
  type: Method
  source:
    remote:
      path: Blocks/src/TableData/TableDataParser.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: Parse
    path: ../Blocks/src/TableData/TableDataParser.cs
    startLine: 20
  assemblies:
  - CodeJam.Blocks
  namespace: CodeJam.TableData
  summary: "\nParses table data.\n"
  example: []
  syntax:
    content: public static IEnumerable<DataLine> Parse(this Parser parser, string text)
    parameters:
    - id: parser
      type: CodeJam.TableData.Parser
      description: Instance of specific parser.
    - id: text
      type: System.String
      description: Text to parse
    return:
      type: System.Collections.Generic.IEnumerable{CodeJam.TableData.DataLine}
      description: Enumeration of <xref href="CodeJam.TableData.DataLine" data-throw-if-not-resolved="false"></xref> contained parsed data.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Parse(parser As Parser, text As String) As IEnumerable(Of DataLine)
  overload: CodeJam.TableData.TableDataParser.Parse*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: CodeJam.TableData.TableDataParser.Parse(CodeJam.TableData.Parser,System.IO.TextReader)
  commentId: M:CodeJam.TableData.TableDataParser.Parse(CodeJam.TableData.Parser,System.IO.TextReader)
  id: Parse(CodeJam.TableData.Parser,System.IO.TextReader)
  isExtensionMethod: true
  parent: CodeJam.TableData.TableDataParser
  langs:
  - csharp
  - vb
  name: Parse(Parser, TextReader)
  nameWithType: TableDataParser.Parse(Parser, TextReader)
  fullName: CodeJam.TableData.TableDataParser.Parse(CodeJam.TableData.Parser, System.IO.TextReader)
  type: Method
  source:
    remote:
      path: Blocks/src/TableData/TableDataParser.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: Parse
    path: ../Blocks/src/TableData/TableDataParser.cs
    startLine: 35
  assemblies:
  - CodeJam.Blocks
  namespace: CodeJam.TableData
  summary: "\nParses table data.\n"
  example: []
  syntax:
    content: public static IEnumerable<DataLine> Parse(this Parser parser, TextReader reader)
    parameters:
    - id: parser
      type: CodeJam.TableData.Parser
      description: Instance of specific parser.
    - id: reader
      type: System.IO.TextReader
      description: Text to parse
    return:
      type: System.Collections.Generic.IEnumerable{CodeJam.TableData.DataLine}
      description: Enumeration of <xref href="CodeJam.TableData.DataLine" data-throw-if-not-resolved="false"></xref> contained parsed data.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Parse(parser As Parser, reader As TextReader) As IEnumerable(Of DataLine)
  overload: CodeJam.TableData.TableDataParser.Parse*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: CodeJam.TableData
  commentId: N:CodeJam.TableData
  isExternal: false
  name: CodeJam.TableData
  nameWithType: CodeJam.TableData
  fullName: CodeJam.TableData
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: CodeJam.TableData.DataLine
  commentId: T:CodeJam.TableData.DataLine
  isExternal: false
  name: DataLine
  nameWithType: DataLine
  fullName: CodeJam.TableData.DataLine
- uid: CodeJam.TableData.TableDataParser.Parse*
  commentId: Overload:CodeJam.TableData.TableDataParser.Parse
  isExternal: false
  name: Parse
  nameWithType: TableDataParser.Parse
  fullName: CodeJam.TableData.TableDataParser.Parse
- uid: CodeJam.TableData.Parser
  commentId: T:CodeJam.TableData.Parser
  parent: CodeJam.TableData
  isExternal: false
  name: Parser
  nameWithType: Parser
  fullName: CodeJam.TableData.Parser
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{CodeJam.TableData.DataLine}
  commentId: T:System.Collections.Generic.IEnumerable{CodeJam.TableData.DataLine}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<DataLine>
  nameWithType: IEnumerable<DataLine>
  fullName: System.Collections.Generic.IEnumerable<CodeJam.TableData.DataLine>
  nameWithType.vb: IEnumerable(Of DataLine)
  fullName.vb: System.Collections.Generic.IEnumerable(Of CodeJam.TableData.DataLine)
  name.vb: IEnumerable(Of DataLine)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CodeJam.TableData.DataLine
    name: DataLine
    nameWithType: DataLine
    fullName: CodeJam.TableData.DataLine
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CodeJam.TableData.DataLine
    name: DataLine
    nameWithType: DataLine
    fullName: CodeJam.TableData.DataLine
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.IO.TextReader
  commentId: T:System.IO.TextReader
  parent: System.IO
  isExternal: true
  name: TextReader
  nameWithType: TextReader
  fullName: System.IO.TextReader
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
