### YamlMime:ManagedReference
items:
- uid: CodeJam.PerfTests.Running.Core.RunStateKey
  commentId: T:CodeJam.PerfTests.Running.Core.RunStateKey
  id: RunStateKey
  parent: CodeJam.PerfTests.Running.Core
  children:
  - CodeJam.PerfTests.Running.Core.RunStateKey.#ctor(System.Boolean)
  - CodeJam.PerfTests.Running.Core.RunStateKey.ClearBeforeEachRun
  langs:
  - csharp
  - vb
  name: RunStateKey
  nameWithType: RunStateKey
  fullName: CodeJam.PerfTests.Running.Core.RunStateKey
  type: Class
  source:
    remote:
      path: PerfTests/src/[L2_CompetitionCore]/Running.Core/[RunState]/RunStateKey.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: RunStateKey
    path: ../PerfTests/src/[L2_CompetitionCore]/Running.Core/[RunState]/RunStateKey.cs
    startLine: 7
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Running.Core
  summary: "\nBase class for state slot\n"
  example: []
  syntax:
    content: public abstract class RunStateKey
    content.vb: Public MustInherit Class RunStateKey
  inheritance:
  - System.Object
  derivedClasses:
  - CodeJam.PerfTests.Running.Core.RunState`1
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: CodeJam.PerfTests.Running.Core.RunStateKey.#ctor(System.Boolean)
  commentId: M:CodeJam.PerfTests.Running.Core.RunStateKey.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: CodeJam.PerfTests.Running.Core.RunStateKey
  langs:
  - csharp
  - vb
  name: RunStateKey(Boolean)
  nameWithType: RunStateKey.RunStateKey(Boolean)
  fullName: CodeJam.PerfTests.Running.Core.RunStateKey.RunStateKey(System.Boolean)
  type: Constructor
  source:
    remote:
      path: PerfTests/src/[L2_CompetitionCore]/Running.Core/[RunState]/RunStateKey.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: .ctor
    path: ../PerfTests/src/[L2_CompetitionCore]/Running.Core/[RunState]/RunStateKey.cs
    startLine: 11
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Running.Core
  summary: Initializes a new instance of the <xref href="CodeJam.PerfTests.Running.Core.RunStateKey" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: protected RunStateKey(bool clearBeforeEachRun)
    parameters:
    - id: clearBeforeEachRun
      type: System.Boolean
      description: if set to <code>true</code> the value of the slot is cleaned on each run.
    content.vb: Protected Sub New(clearBeforeEachRun As Boolean)
  overload: CodeJam.PerfTests.Running.Core.RunStateKey.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: CodeJam.PerfTests.Running.Core.RunStateKey.ClearBeforeEachRun
  commentId: P:CodeJam.PerfTests.Running.Core.RunStateKey.ClearBeforeEachRun
  id: ClearBeforeEachRun
  parent: CodeJam.PerfTests.Running.Core.RunStateKey
  langs:
  - csharp
  - vb
  name: ClearBeforeEachRun
  nameWithType: RunStateKey.ClearBeforeEachRun
  fullName: CodeJam.PerfTests.Running.Core.RunStateKey.ClearBeforeEachRun
  type: Property
  source:
    remote:
      path: PerfTests/src/[L2_CompetitionCore]/Running.Core/[RunState]/RunStateKey.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: ClearBeforeEachRun
    path: ../PerfTests/src/[L2_CompetitionCore]/Running.Core/[RunState]/RunStateKey.cs
    startLine: 18
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Running.Core
  summary: Gets a value indicating whether  the value of the slot is cleaned on each run.
  example: []
  syntax:
    content: public bool ClearBeforeEachRun { get; }
    parameters: []
    return:
      type: System.Boolean
      description: <code>true</code> if  the value of the slot is cleaned on each run; otherwise, <code>false</code>.
    content.vb: Public ReadOnly Property ClearBeforeEachRun As Boolean
  overload: CodeJam.PerfTests.Running.Core.RunStateKey.ClearBeforeEachRun*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: CodeJam.PerfTests.Running.Core
  commentId: N:CodeJam.PerfTests.Running.Core
  isExternal: false
  name: CodeJam.PerfTests.Running.Core
  nameWithType: CodeJam.PerfTests.Running.Core
  fullName: CodeJam.PerfTests.Running.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: CodeJam.PerfTests.Running.Core.RunStateKey
  commentId: T:CodeJam.PerfTests.Running.Core.RunStateKey
  parent: CodeJam.PerfTests.Running.Core
  isExternal: false
  name: RunStateKey
  nameWithType: RunStateKey
  fullName: CodeJam.PerfTests.Running.Core.RunStateKey
- uid: CodeJam.PerfTests.Running.Core.RunStateKey.#ctor*
  commentId: Overload:CodeJam.PerfTests.Running.Core.RunStateKey.#ctor
  isExternal: false
  name: RunStateKey
  nameWithType: RunStateKey.RunStateKey
  fullName: CodeJam.PerfTests.Running.Core.RunStateKey.RunStateKey
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: CodeJam.PerfTests.Running.Core.RunStateKey.ClearBeforeEachRun*
  commentId: Overload:CodeJam.PerfTests.Running.Core.RunStateKey.ClearBeforeEachRun
  isExternal: false
  name: ClearBeforeEachRun
  nameWithType: RunStateKey.ClearBeforeEachRun
  fullName: CodeJam.PerfTests.Running.Core.RunStateKey.ClearBeforeEachRun
