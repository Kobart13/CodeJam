### YamlMime:ManagedReference
items:
- uid: BenchmarkDotNet.Helpers.BenchmarkHelpers
  commentId: T:BenchmarkDotNet.Helpers.BenchmarkHelpers
  id: BenchmarkHelpers
  parent: BenchmarkDotNet.Helpers
  children:
  - BenchmarkDotNet.Helpers.BenchmarkHelpers.AsReadOnly(BenchmarkDotNet.Configs.IConfig)
  - BenchmarkDotNet.Helpers.BenchmarkHelpers.DeterminesBehavior(BenchmarkDotNet.Characteristics.Characteristic,System.Boolean)
  - BenchmarkDotNet.Helpers.BenchmarkHelpers.GetBenchmarkTypes(System.Reflection.Assembly)
  - BenchmarkDotNet.Helpers.BenchmarkHelpers.GetExecutionOrderBenchmarks(BenchmarkDotNet.Reports.Summary)
  - BenchmarkDotNet.Helpers.BenchmarkHelpers.GetSummaryOrderBenchmarks(BenchmarkDotNet.Reports.Summary)
  - BenchmarkDotNet.Helpers.BenchmarkHelpers.SetAffinity(System.Diagnostics.Process,System.IntPtr,BenchmarkDotNet.Loggers.ILogger)
  - BenchmarkDotNet.Helpers.BenchmarkHelpers.SetPriority(System.Diagnostics.Process,System.Diagnostics.ProcessPriorityClass,BenchmarkDotNet.Loggers.ILogger)
  - BenchmarkDotNet.Helpers.BenchmarkHelpers.SetPriority(System.Threading.Thread,System.Threading.ThreadPriority,BenchmarkDotNet.Loggers.ILogger)
  - BenchmarkDotNet.Helpers.BenchmarkHelpers.SetupHighestPriorityScope(System.Nullable{System.IntPtr},BenchmarkDotNet.Loggers.ILogger)
  - BenchmarkDotNet.Helpers.BenchmarkHelpers.TotalNanoseconds(System.TimeSpan)
  - BenchmarkDotNet.Helpers.BenchmarkHelpers.TryGetBaseline(BenchmarkDotNet.Reports.Summary,BenchmarkDotNet.Running.Benchmark)
  langs:
  - csharp
  - vb
  name: BenchmarkHelpers
  nameWithType: BenchmarkHelpers
  fullName: BenchmarkDotNet.Helpers.BenchmarkHelpers
  type: Class
  source:
    remote:
      path: PerfTests/src/[L0_PortToBenchmerkDotNet]/Helpers/BenchmarkHelpers.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: BenchmarkHelpers
    path: ../PerfTests/src/[L0_PortToBenchmerkDotNet]/Helpers/BenchmarkHelpers.cs
    startLine: 28
  assemblies:
  - CodeJam.PerfTests
  namespace: BenchmarkDotNet.Helpers
  summary: "\nHelper methods for benchmark infrastructure.\n"
  example: []
  syntax:
    content: public static class BenchmarkHelpers
    content.vb: Public Module BenchmarkHelpers
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: BenchmarkDotNet.Helpers.BenchmarkHelpers.GetBenchmarkTypes(System.Reflection.Assembly)
  commentId: M:BenchmarkDotNet.Helpers.BenchmarkHelpers.GetBenchmarkTypes(System.Reflection.Assembly)
  id: GetBenchmarkTypes(System.Reflection.Assembly)
  parent: BenchmarkDotNet.Helpers.BenchmarkHelpers
  langs:
  - csharp
  - vb
  name: GetBenchmarkTypes(Assembly)
  nameWithType: BenchmarkHelpers.GetBenchmarkTypes(Assembly)
  fullName: BenchmarkDotNet.Helpers.BenchmarkHelpers.GetBenchmarkTypes(System.Reflection.Assembly)
  type: Method
  source:
    remote:
      path: PerfTests/src/[L0_PortToBenchmerkDotNet]/Helpers/BenchmarkHelpers.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: GetBenchmarkTypes
    path: ../PerfTests/src/[L0_PortToBenchmerkDotNet]/Helpers/BenchmarkHelpers.cs
    startLine: 36
  assemblies:
  - CodeJam.PerfTests
  namespace: BenchmarkDotNet.Helpers
  summary: Returns benchmark types from the assembly.
  example: []
  syntax:
    content: public static Type[] GetBenchmarkTypes(Assembly assembly)
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: The assembly to get benchmarks from.
    return:
      type: System.Type[]
      description: Benchmark types from the assembly
    content.vb: Public Shared Function GetBenchmarkTypes(assembly As Assembly) As Type()
  overload: BenchmarkDotNet.Helpers.BenchmarkHelpers.GetBenchmarkTypes*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BenchmarkDotNet.Helpers.BenchmarkHelpers.AsReadOnly(BenchmarkDotNet.Configs.IConfig)
  commentId: M:BenchmarkDotNet.Helpers.BenchmarkHelpers.AsReadOnly(BenchmarkDotNet.Configs.IConfig)
  id: AsReadOnly(BenchmarkDotNet.Configs.IConfig)
  isExtensionMethod: true
  parent: BenchmarkDotNet.Helpers.BenchmarkHelpers
  langs:
  - csharp
  - vb
  name: AsReadOnly(IConfig)
  nameWithType: BenchmarkHelpers.AsReadOnly(IConfig)
  fullName: BenchmarkDotNet.Helpers.BenchmarkHelpers.AsReadOnly(BenchmarkDotNet.Configs.IConfig)
  type: Method
  source:
    remote:
      path: PerfTests/src/[L0_PortToBenchmerkDotNet]/Helpers/BenchmarkHelpers.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: AsReadOnly
    path: ../PerfTests/src/[L0_PortToBenchmerkDotNet]/Helpers/BenchmarkHelpers.cs
    startLine: 53
  assemblies:
  - CodeJam.PerfTests
  namespace: BenchmarkDotNet.Helpers
  summary: Creates read-only wrapper for the config.
  example: []
  syntax:
    content: public static IConfig AsReadOnly(this IConfig config)
    parameters:
    - id: config
      type: BenchmarkDotNet.Configs.IConfig
      description: The config to wrap.
    return:
      type: BenchmarkDotNet.Configs.IConfig
      description: Read-only wrapper for the config.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AsReadOnly(config As IConfig) As IConfig
  overload: BenchmarkDotNet.Helpers.BenchmarkHelpers.AsReadOnly*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BenchmarkDotNet.Helpers.BenchmarkHelpers.GetExecutionOrderBenchmarks(BenchmarkDotNet.Reports.Summary)
  commentId: M:BenchmarkDotNet.Helpers.BenchmarkHelpers.GetExecutionOrderBenchmarks(BenchmarkDotNet.Reports.Summary)
  id: GetExecutionOrderBenchmarks(BenchmarkDotNet.Reports.Summary)
  isExtensionMethod: true
  parent: BenchmarkDotNet.Helpers.BenchmarkHelpers
  langs:
  - csharp
  - vb
  name: GetExecutionOrderBenchmarks(Summary)
  nameWithType: BenchmarkHelpers.GetExecutionOrderBenchmarks(Summary)
  fullName: BenchmarkDotNet.Helpers.BenchmarkHelpers.GetExecutionOrderBenchmarks(BenchmarkDotNet.Reports.Summary)
  type: Method
  source:
    remote:
      path: PerfTests/src/[L0_PortToBenchmerkDotNet]/Helpers/BenchmarkHelpers.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: GetExecutionOrderBenchmarks
    path: ../PerfTests/src/[L0_PortToBenchmerkDotNet]/Helpers/BenchmarkHelpers.cs
    startLine: 59
  assemblies:
  - CodeJam.PerfTests
  namespace: BenchmarkDotNet.Helpers
  summary: Returns benchmarks for the summary sorted by execution order.
  example: []
  syntax:
    content: public static IEnumerable<Benchmark> GetExecutionOrderBenchmarks(this Summary summary)
    parameters:
    - id: summary
      type: BenchmarkDotNet.Reports.Summary
      description: Summary for the run.
    return:
      type: System.Collections.Generic.IEnumerable{BenchmarkDotNet.Running.Benchmark}
      description: Benchmarks for the summary.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetExecutionOrderBenchmarks(summary As Summary) As IEnumerable(Of Benchmark)
  overload: BenchmarkDotNet.Helpers.BenchmarkHelpers.GetExecutionOrderBenchmarks*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BenchmarkDotNet.Helpers.BenchmarkHelpers.GetSummaryOrderBenchmarks(BenchmarkDotNet.Reports.Summary)
  commentId: M:BenchmarkDotNet.Helpers.BenchmarkHelpers.GetSummaryOrderBenchmarks(BenchmarkDotNet.Reports.Summary)
  id: GetSummaryOrderBenchmarks(BenchmarkDotNet.Reports.Summary)
  isExtensionMethod: true
  parent: BenchmarkDotNet.Helpers.BenchmarkHelpers
  langs:
  - csharp
  - vb
  name: GetSummaryOrderBenchmarks(Summary)
  nameWithType: BenchmarkHelpers.GetSummaryOrderBenchmarks(Summary)
  fullName: BenchmarkDotNet.Helpers.BenchmarkHelpers.GetSummaryOrderBenchmarks(BenchmarkDotNet.Reports.Summary)
  type: Method
  source:
    remote:
      path: PerfTests/src/[L0_PortToBenchmerkDotNet]/Helpers/BenchmarkHelpers.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: GetSummaryOrderBenchmarks
    path: ../PerfTests/src/[L0_PortToBenchmerkDotNet]/Helpers/BenchmarkHelpers.cs
    startLine: 68
  assemblies:
  - CodeJam.PerfTests
  namespace: BenchmarkDotNet.Helpers
  summary: Returns benchmarks for the summary sorted by display order.
  example: []
  syntax:
    content: public static IEnumerable<Benchmark> GetSummaryOrderBenchmarks(this Summary summary)
    parameters:
    - id: summary
      type: BenchmarkDotNet.Reports.Summary
      description: Summary for the run.
    return:
      type: System.Collections.Generic.IEnumerable{BenchmarkDotNet.Running.Benchmark}
      description: Benchmarks for the summary.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetSummaryOrderBenchmarks(summary As Summary) As IEnumerable(Of Benchmark)
  overload: BenchmarkDotNet.Helpers.BenchmarkHelpers.GetSummaryOrderBenchmarks*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BenchmarkDotNet.Helpers.BenchmarkHelpers.TryGetBaseline(BenchmarkDotNet.Reports.Summary,BenchmarkDotNet.Running.Benchmark)
  commentId: M:BenchmarkDotNet.Helpers.BenchmarkHelpers.TryGetBaseline(BenchmarkDotNet.Reports.Summary,BenchmarkDotNet.Running.Benchmark)
  id: TryGetBaseline(BenchmarkDotNet.Reports.Summary,BenchmarkDotNet.Running.Benchmark)
  isExtensionMethod: true
  parent: BenchmarkDotNet.Helpers.BenchmarkHelpers
  langs:
  - csharp
  - vb
  name: TryGetBaseline(Summary, Benchmark)
  nameWithType: BenchmarkHelpers.TryGetBaseline(Summary, Benchmark)
  fullName: BenchmarkDotNet.Helpers.BenchmarkHelpers.TryGetBaseline(BenchmarkDotNet.Reports.Summary, BenchmarkDotNet.Running.Benchmark)
  type: Method
  source:
    remote:
      path: PerfTests/src/[L0_PortToBenchmerkDotNet]/Helpers/BenchmarkHelpers.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: TryGetBaseline
    path: ../PerfTests/src/[L0_PortToBenchmerkDotNet]/Helpers/BenchmarkHelpers.cs
    startLine: 78
  assemblies:
  - CodeJam.PerfTests
  namespace: BenchmarkDotNet.Helpers
  summary: Returns the baseline for the benchmark.
  example: []
  syntax:
    content: public static Benchmark TryGetBaseline(this Summary summary, Benchmark benchmark)
    parameters:
    - id: summary
      type: BenchmarkDotNet.Reports.Summary
      description: Summary for the run.
    - id: benchmark
      type: BenchmarkDotNet.Running.Benchmark
      description: The benchmark.
    return:
      type: BenchmarkDotNet.Running.Benchmark
      description: Baseline for the benchmark
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function TryGetBaseline(summary As Summary, benchmark As Benchmark) As Benchmark
  overload: BenchmarkDotNet.Helpers.BenchmarkHelpers.TryGetBaseline*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BenchmarkDotNet.Helpers.BenchmarkHelpers.DeterminesBehavior(BenchmarkDotNet.Characteristics.Characteristic,System.Boolean)
  commentId: M:BenchmarkDotNet.Helpers.BenchmarkHelpers.DeterminesBehavior(BenchmarkDotNet.Characteristics.Characteristic,System.Boolean)
  id: DeterminesBehavior(BenchmarkDotNet.Characteristics.Characteristic,System.Boolean)
  isExtensionMethod: true
  parent: BenchmarkDotNet.Helpers.BenchmarkHelpers
  langs:
  - csharp
  - vb
  name: DeterminesBehavior(Characteristic, Boolean)
  nameWithType: BenchmarkHelpers.DeterminesBehavior(Characteristic, Boolean)
  fullName: BenchmarkDotNet.Helpers.BenchmarkHelpers.DeterminesBehavior(BenchmarkDotNet.Characteristics.Characteristic, System.Boolean)
  type: Method
  source:
    remote:
      path: PerfTests/src/[L0_PortToBenchmerkDotNet]/Helpers/BenchmarkHelpers.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: DeterminesBehavior
    path: ../PerfTests/src/[L0_PortToBenchmerkDotNet]/Helpers/BenchmarkHelpers.cs
    startLine: 95
  assemblies:
  - CodeJam.PerfTests
  namespace: BenchmarkDotNet.Helpers
  summary: "\nDetermines whether the characteristic has influence on job execution.\n"
  example: []
  syntax:
    content: public static bool DeterminesBehavior(this Characteristic characteristic, bool includeIgnoreOnApply = false)
    parameters:
    - id: characteristic
      type: BenchmarkDotNet.Characteristics.Characteristic
      description: The characteristic.
    - id: includeIgnoreOnApply
      type: System.Boolean
      description: Include ignorable.
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the characteristic has influence on job execution.\n"
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeterminesBehavior(characteristic As Characteristic, includeIgnoreOnApply As Boolean = False) As Boolean
  overload: BenchmarkDotNet.Helpers.BenchmarkHelpers.DeterminesBehavior*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BenchmarkDotNet.Helpers.BenchmarkHelpers.TotalNanoseconds(System.TimeSpan)
  commentId: M:BenchmarkDotNet.Helpers.BenchmarkHelpers.TotalNanoseconds(System.TimeSpan)
  id: TotalNanoseconds(System.TimeSpan)
  isExtensionMethod: true
  parent: BenchmarkDotNet.Helpers.BenchmarkHelpers
  langs:
  - csharp
  - vb
  name: TotalNanoseconds(TimeSpan)
  nameWithType: BenchmarkHelpers.TotalNanoseconds(TimeSpan)
  fullName: BenchmarkDotNet.Helpers.BenchmarkHelpers.TotalNanoseconds(System.TimeSpan)
  type: Method
  source:
    remote:
      path: PerfTests/src/[L0_PortToBenchmerkDotNet]/Helpers/BenchmarkHelpers.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: TotalNanoseconds
    path: ../PerfTests/src/[L0_PortToBenchmerkDotNet]/Helpers/BenchmarkHelpers.cs
    startLine: 101
  assemblies:
  - CodeJam.PerfTests
  namespace: BenchmarkDotNet.Helpers
  summary: Gets the value of the current TimeSpan structure expressed in nanoseconds.
  example: []
  syntax:
    content: public static double TotalNanoseconds(this TimeSpan timeSpan)
    parameters:
    - id: timeSpan
      type: System.TimeSpan
      description: The timespan.
    return:
      type: System.Double
      description: The total number of nanoseconds represented by this instance.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function TotalNanoseconds(timeSpan As TimeSpan) As Double
  overload: BenchmarkDotNet.Helpers.BenchmarkHelpers.TotalNanoseconds*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BenchmarkDotNet.Helpers.BenchmarkHelpers.SetPriority(System.Threading.Thread,System.Threading.ThreadPriority,BenchmarkDotNet.Loggers.ILogger)
  commentId: M:BenchmarkDotNet.Helpers.BenchmarkHelpers.SetPriority(System.Threading.Thread,System.Threading.ThreadPriority,BenchmarkDotNet.Loggers.ILogger)
  id: SetPriority(System.Threading.Thread,System.Threading.ThreadPriority,BenchmarkDotNet.Loggers.ILogger)
  isExtensionMethod: true
  parent: BenchmarkDotNet.Helpers.BenchmarkHelpers
  langs:
  - csharp
  - vb
  name: SetPriority(Thread, ThreadPriority, ILogger)
  nameWithType: BenchmarkHelpers.SetPriority(Thread, ThreadPriority, ILogger)
  fullName: BenchmarkDotNet.Helpers.BenchmarkHelpers.SetPriority(System.Threading.Thread, System.Threading.ThreadPriority, BenchmarkDotNet.Loggers.ILogger)
  type: Method
  source:
    remote:
      path: PerfTests/src/[L0_PortToBenchmerkDotNet]/Helpers/BenchmarkHelpers.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: SetPriority
    path: ../PerfTests/src/[L0_PortToBenchmerkDotNet]/Helpers/BenchmarkHelpers.cs
    startLine: 109
  assemblies:
  - CodeJam.PerfTests
  namespace: BenchmarkDotNet.Helpers
  summary: Changes the priority of the thread.
  example: []
  syntax:
    content: public static bool SetPriority(this Thread thread, ThreadPriority priority, ILogger logger)
    parameters:
    - id: thread
      type: System.Threading.Thread
      description: The target thread.
    - id: priority
      type: System.Threading.ThreadPriority
      description: The priority.
    - id: logger
      type: BenchmarkDotNet.Loggers.ILogger
      description: The logger.
    return:
      type: System.Boolean
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetPriority(thread As Thread, priority As ThreadPriority, logger As ILogger) As Boolean
  overload: BenchmarkDotNet.Helpers.BenchmarkHelpers.SetPriority*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BenchmarkDotNet.Helpers.BenchmarkHelpers.SetPriority(System.Diagnostics.Process,System.Diagnostics.ProcessPriorityClass,BenchmarkDotNet.Loggers.ILogger)
  commentId: M:BenchmarkDotNet.Helpers.BenchmarkHelpers.SetPriority(System.Diagnostics.Process,System.Diagnostics.ProcessPriorityClass,BenchmarkDotNet.Loggers.ILogger)
  id: SetPriority(System.Diagnostics.Process,System.Diagnostics.ProcessPriorityClass,BenchmarkDotNet.Loggers.ILogger)
  isExtensionMethod: true
  parent: BenchmarkDotNet.Helpers.BenchmarkHelpers
  langs:
  - csharp
  - vb
  name: SetPriority(Process, ProcessPriorityClass, ILogger)
  nameWithType: BenchmarkHelpers.SetPriority(Process, ProcessPriorityClass, ILogger)
  fullName: BenchmarkDotNet.Helpers.BenchmarkHelpers.SetPriority(System.Diagnostics.Process, System.Diagnostics.ProcessPriorityClass, BenchmarkDotNet.Loggers.ILogger)
  type: Method
  source:
    remote:
      path: PerfTests/src/[L0_PortToBenchmerkDotNet]/Helpers/BenchmarkHelpers.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: SetPriority
    path: ../PerfTests/src/[L0_PortToBenchmerkDotNet]/Helpers/BenchmarkHelpers.cs
    startLine: 136
  assemblies:
  - CodeJam.PerfTests
  namespace: BenchmarkDotNet.Helpers
  summary: Changes the priority of the process.
  example: []
  syntax:
    content: public static bool SetPriority(this Process process, ProcessPriorityClass priority, ILogger logger)
    parameters:
    - id: process
      type: System.Diagnostics.Process
      description: The target process.
    - id: priority
      type: System.Diagnostics.ProcessPriorityClass
      description: The priority.
    - id: logger
      type: BenchmarkDotNet.Loggers.ILogger
      description: The logger.
    return:
      type: System.Boolean
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetPriority(process As Process, priority As ProcessPriorityClass, logger As ILogger) As Boolean
  overload: BenchmarkDotNet.Helpers.BenchmarkHelpers.SetPriority*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BenchmarkDotNet.Helpers.BenchmarkHelpers.SetAffinity(System.Diagnostics.Process,System.IntPtr,BenchmarkDotNet.Loggers.ILogger)
  commentId: M:BenchmarkDotNet.Helpers.BenchmarkHelpers.SetAffinity(System.Diagnostics.Process,System.IntPtr,BenchmarkDotNet.Loggers.ILogger)
  id: SetAffinity(System.Diagnostics.Process,System.IntPtr,BenchmarkDotNet.Loggers.ILogger)
  isExtensionMethod: true
  parent: BenchmarkDotNet.Helpers.BenchmarkHelpers
  langs:
  - csharp
  - vb
  name: SetAffinity(Process, IntPtr, ILogger)
  nameWithType: BenchmarkHelpers.SetAffinity(Process, IntPtr, ILogger)
  fullName: BenchmarkDotNet.Helpers.BenchmarkHelpers.SetAffinity(System.Diagnostics.Process, System.IntPtr, BenchmarkDotNet.Loggers.ILogger)
  type: Method
  source:
    remote:
      path: PerfTests/src/[L0_PortToBenchmerkDotNet]/Helpers/BenchmarkHelpers.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: SetAffinity
    path: ../PerfTests/src/[L0_PortToBenchmerkDotNet]/Helpers/BenchmarkHelpers.cs
    startLine: 163
  assemblies:
  - CodeJam.PerfTests
  namespace: BenchmarkDotNet.Helpers
  summary: Changes the cpu affinity of the process.
  example: []
  syntax:
    content: public static bool SetAffinity(this Process process, IntPtr processorAffinity, ILogger logger)
    parameters:
    - id: process
      type: System.Diagnostics.Process
      description: The target process.
    - id: processorAffinity
      type: System.IntPtr
      description: The processor affinity.
    - id: logger
      type: BenchmarkDotNet.Loggers.ILogger
      description: The logger.
    return:
      type: System.Boolean
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetAffinity(process As Process, processorAffinity As IntPtr, logger As ILogger) As Boolean
  overload: BenchmarkDotNet.Helpers.BenchmarkHelpers.SetAffinity*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BenchmarkDotNet.Helpers.BenchmarkHelpers.SetupHighestPriorityScope(System.Nullable{System.IntPtr},BenchmarkDotNet.Loggers.ILogger)
  commentId: M:BenchmarkDotNet.Helpers.BenchmarkHelpers.SetupHighestPriorityScope(System.Nullable{System.IntPtr},BenchmarkDotNet.Loggers.ILogger)
  id: SetupHighestPriorityScope(System.Nullable{System.IntPtr},BenchmarkDotNet.Loggers.ILogger)
  parent: BenchmarkDotNet.Helpers.BenchmarkHelpers
  langs:
  - csharp
  - vb
  name: SetupHighestPriorityScope(Nullable<IntPtr>, ILogger)
  nameWithType: BenchmarkHelpers.SetupHighestPriorityScope(Nullable<IntPtr>, ILogger)
  fullName: BenchmarkDotNet.Helpers.BenchmarkHelpers.SetupHighestPriorityScope(System.Nullable<System.IntPtr>, BenchmarkDotNet.Loggers.ILogger)
  type: Method
  source:
    remote:
      path: PerfTests/src/[L0_PortToBenchmerkDotNet]/Helpers/BenchmarkHelpers.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: SetupHighestPriorityScope
    path: ../PerfTests/src/[L0_PortToBenchmerkDotNet]/Helpers/BenchmarkHelpers.cs
    startLine: 190
  assemblies:
  - CodeJam.PerfTests
  namespace: BenchmarkDotNet.Helpers
  summary: Sets highest possible priority and Changes the cpu affinity of the process.
  example: []
  syntax:
    content: public static IDisposable SetupHighestPriorityScope(IntPtr? processorAffinity, ILogger logger)
    parameters:
    - id: processorAffinity
      type: System.Nullable{System.IntPtr}
      description: The processor affinity.
    - id: logger
      type: BenchmarkDotNet.Loggers.ILogger
      description: The logger.
    return:
      type: System.IDisposable
    content.vb: Public Shared Function SetupHighestPriorityScope(processorAffinity As IntPtr?, logger As ILogger) As IDisposable
  overload: BenchmarkDotNet.Helpers.BenchmarkHelpers.SetupHighestPriorityScope*
  nameWithType.vb: BenchmarkHelpers.SetupHighestPriorityScope(Nullable(Of IntPtr), ILogger)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: BenchmarkDotNet.Helpers.BenchmarkHelpers.SetupHighestPriorityScope(System.Nullable(Of System.IntPtr), BenchmarkDotNet.Loggers.ILogger)
  name.vb: SetupHighestPriorityScope(Nullable(Of IntPtr), ILogger)
references:
- uid: BenchmarkDotNet.Helpers
  commentId: N:BenchmarkDotNet.Helpers
  isExternal: false
  name: BenchmarkDotNet.Helpers
  nameWithType: BenchmarkDotNet.Helpers
  fullName: BenchmarkDotNet.Helpers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: BenchmarkDotNet.Helpers.BenchmarkHelpers.GetBenchmarkTypes*
  commentId: Overload:BenchmarkDotNet.Helpers.BenchmarkHelpers.GetBenchmarkTypes
  isExternal: false
  name: GetBenchmarkTypes
  nameWithType: BenchmarkHelpers.GetBenchmarkTypes
  fullName: BenchmarkDotNet.Helpers.BenchmarkHelpers.GetBenchmarkTypes
- uid: System.Reflection.Assembly
  commentId: T:System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Type[]
  name: Type[]
  nameWithType: Type[]
  fullName: System.Type[]
  nameWithType.vb: Type()
  fullName.vb: System.Type()
  name.vb: Type()
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: false
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: BenchmarkDotNet.Helpers.BenchmarkHelpers.AsReadOnly*
  commentId: Overload:BenchmarkDotNet.Helpers.BenchmarkHelpers.AsReadOnly
  isExternal: false
  name: AsReadOnly
  nameWithType: BenchmarkHelpers.AsReadOnly
  fullName: BenchmarkDotNet.Helpers.BenchmarkHelpers.AsReadOnly
- uid: BenchmarkDotNet.Configs.IConfig
  commentId: T:BenchmarkDotNet.Configs.IConfig
  parent: BenchmarkDotNet.Configs
  isExternal: true
  name: IConfig
  nameWithType: IConfig
  fullName: BenchmarkDotNet.Configs.IConfig
- uid: BenchmarkDotNet.Configs
  commentId: N:BenchmarkDotNet.Configs
  isExternal: false
  name: BenchmarkDotNet.Configs
  nameWithType: BenchmarkDotNet.Configs
  fullName: BenchmarkDotNet.Configs
- uid: BenchmarkDotNet.Helpers.BenchmarkHelpers.GetExecutionOrderBenchmarks*
  commentId: Overload:BenchmarkDotNet.Helpers.BenchmarkHelpers.GetExecutionOrderBenchmarks
  isExternal: false
  name: GetExecutionOrderBenchmarks
  nameWithType: BenchmarkHelpers.GetExecutionOrderBenchmarks
  fullName: BenchmarkDotNet.Helpers.BenchmarkHelpers.GetExecutionOrderBenchmarks
- uid: BenchmarkDotNet.Reports.Summary
  commentId: T:BenchmarkDotNet.Reports.Summary
  parent: BenchmarkDotNet.Reports
  isExternal: true
  name: Summary
  nameWithType: Summary
  fullName: BenchmarkDotNet.Reports.Summary
- uid: System.Collections.Generic.IEnumerable{BenchmarkDotNet.Running.Benchmark}
  commentId: T:System.Collections.Generic.IEnumerable{BenchmarkDotNet.Running.Benchmark}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Benchmark>
  nameWithType: IEnumerable<Benchmark>
  fullName: System.Collections.Generic.IEnumerable<BenchmarkDotNet.Running.Benchmark>
  nameWithType.vb: IEnumerable(Of Benchmark)
  fullName.vb: System.Collections.Generic.IEnumerable(Of BenchmarkDotNet.Running.Benchmark)
  name.vb: IEnumerable(Of Benchmark)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BenchmarkDotNet.Running.Benchmark
    name: Benchmark
    nameWithType: Benchmark
    fullName: BenchmarkDotNet.Running.Benchmark
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BenchmarkDotNet.Running.Benchmark
    name: Benchmark
    nameWithType: Benchmark
    fullName: BenchmarkDotNet.Running.Benchmark
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BenchmarkDotNet.Reports
  commentId: N:BenchmarkDotNet.Reports
  isExternal: false
  name: BenchmarkDotNet.Reports
  nameWithType: BenchmarkDotNet.Reports
  fullName: BenchmarkDotNet.Reports
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: BenchmarkDotNet.Helpers.BenchmarkHelpers.GetSummaryOrderBenchmarks*
  commentId: Overload:BenchmarkDotNet.Helpers.BenchmarkHelpers.GetSummaryOrderBenchmarks
  isExternal: false
  name: GetSummaryOrderBenchmarks
  nameWithType: BenchmarkHelpers.GetSummaryOrderBenchmarks
  fullName: BenchmarkDotNet.Helpers.BenchmarkHelpers.GetSummaryOrderBenchmarks
- uid: BenchmarkDotNet.Helpers.BenchmarkHelpers.TryGetBaseline*
  commentId: Overload:BenchmarkDotNet.Helpers.BenchmarkHelpers.TryGetBaseline
  isExternal: false
  name: TryGetBaseline
  nameWithType: BenchmarkHelpers.TryGetBaseline
  fullName: BenchmarkDotNet.Helpers.BenchmarkHelpers.TryGetBaseline
- uid: BenchmarkDotNet.Running.Benchmark
  commentId: T:BenchmarkDotNet.Running.Benchmark
  parent: BenchmarkDotNet.Running
  isExternal: true
  name: Benchmark
  nameWithType: Benchmark
  fullName: BenchmarkDotNet.Running.Benchmark
- uid: BenchmarkDotNet.Running
  commentId: N:BenchmarkDotNet.Running
  isExternal: false
  name: BenchmarkDotNet.Running
  nameWithType: BenchmarkDotNet.Running
  fullName: BenchmarkDotNet.Running
- uid: BenchmarkDotNet.Helpers.BenchmarkHelpers.DeterminesBehavior*
  commentId: Overload:BenchmarkDotNet.Helpers.BenchmarkHelpers.DeterminesBehavior
  isExternal: false
  name: DeterminesBehavior
  nameWithType: BenchmarkHelpers.DeterminesBehavior
  fullName: BenchmarkDotNet.Helpers.BenchmarkHelpers.DeterminesBehavior
- uid: BenchmarkDotNet.Characteristics.Characteristic
  commentId: T:BenchmarkDotNet.Characteristics.Characteristic
  parent: BenchmarkDotNet.Characteristics
  isExternal: true
  name: Characteristic
  nameWithType: Characteristic
  fullName: BenchmarkDotNet.Characteristics.Characteristic
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: BenchmarkDotNet.Characteristics
  commentId: N:BenchmarkDotNet.Characteristics
  isExternal: false
  name: BenchmarkDotNet.Characteristics
  nameWithType: BenchmarkDotNet.Characteristics
  fullName: BenchmarkDotNet.Characteristics
- uid: BenchmarkDotNet.Helpers.BenchmarkHelpers.TotalNanoseconds*
  commentId: Overload:BenchmarkDotNet.Helpers.BenchmarkHelpers.TotalNanoseconds
  isExternal: false
  name: TotalNanoseconds
  nameWithType: BenchmarkHelpers.TotalNanoseconds
  fullName: BenchmarkDotNet.Helpers.BenchmarkHelpers.TotalNanoseconds
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: BenchmarkDotNet.Helpers.BenchmarkHelpers.SetPriority*
  commentId: Overload:BenchmarkDotNet.Helpers.BenchmarkHelpers.SetPriority
  isExternal: false
  name: SetPriority
  nameWithType: BenchmarkHelpers.SetPriority
  fullName: BenchmarkDotNet.Helpers.BenchmarkHelpers.SetPriority
- uid: System.Threading.Thread
  commentId: T:System.Threading.Thread
  parent: System.Threading
  isExternal: true
  name: Thread
  nameWithType: Thread
  fullName: System.Threading.Thread
- uid: System.Threading.ThreadPriority
  commentId: T:System.Threading.ThreadPriority
  parent: System.Threading
  isExternal: true
  name: ThreadPriority
  nameWithType: ThreadPriority
  fullName: System.Threading.ThreadPriority
- uid: BenchmarkDotNet.Loggers.ILogger
  commentId: T:BenchmarkDotNet.Loggers.ILogger
  parent: BenchmarkDotNet.Loggers
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: BenchmarkDotNet.Loggers.ILogger
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: BenchmarkDotNet.Loggers
  commentId: N:BenchmarkDotNet.Loggers
  isExternal: false
  name: BenchmarkDotNet.Loggers
  nameWithType: BenchmarkDotNet.Loggers
  fullName: BenchmarkDotNet.Loggers
- uid: System.Diagnostics.Process
  commentId: T:System.Diagnostics.Process
  parent: System.Diagnostics
  isExternal: true
  name: Process
  nameWithType: Process
  fullName: System.Diagnostics.Process
- uid: System.Diagnostics.ProcessPriorityClass
  commentId: T:System.Diagnostics.ProcessPriorityClass
  parent: System.Diagnostics
  isExternal: true
  name: ProcessPriorityClass
  nameWithType: ProcessPriorityClass
  fullName: System.Diagnostics.ProcessPriorityClass
- uid: System.Diagnostics
  commentId: N:System.Diagnostics
  isExternal: false
  name: System.Diagnostics
  nameWithType: System.Diagnostics
  fullName: System.Diagnostics
- uid: BenchmarkDotNet.Helpers.BenchmarkHelpers.SetAffinity*
  commentId: Overload:BenchmarkDotNet.Helpers.BenchmarkHelpers.SetAffinity
  isExternal: false
  name: SetAffinity
  nameWithType: BenchmarkHelpers.SetAffinity
  fullName: BenchmarkDotNet.Helpers.BenchmarkHelpers.SetAffinity
- uid: System.IntPtr
  commentId: T:System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: BenchmarkDotNet.Helpers.BenchmarkHelpers.SetupHighestPriorityScope*
  commentId: Overload:BenchmarkDotNet.Helpers.BenchmarkHelpers.SetupHighestPriorityScope
  isExternal: false
  name: SetupHighestPriorityScope
  nameWithType: BenchmarkHelpers.SetupHighestPriorityScope
  fullName: BenchmarkDotNet.Helpers.BenchmarkHelpers.SetupHighestPriorityScope
- uid: System.Nullable{System.IntPtr}
  commentId: T:System.Nullable{System.IntPtr}
  parent: System
  definition: System.Nullable`1
  name: Nullable<IntPtr>
  nameWithType: Nullable<IntPtr>
  fullName: System.Nullable<System.IntPtr>
  nameWithType.vb: Nullable(Of IntPtr)
  fullName.vb: System.Nullable(Of System.IntPtr)
  name.vb: Nullable(Of IntPtr)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IntPtr
    name: IntPtr
    nameWithType: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IntPtr
    name: IntPtr
    nameWithType: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
