### YamlMime:ManagedReference
items:
- uid: CodeJam.PerfTests.Metrics.MetricInfo
  commentId: T:CodeJam.PerfTests.Metrics.MetricInfo
  id: MetricInfo
  parent: CodeJam.PerfTests.Metrics
  children:
  - CodeJam.PerfTests.Metrics.MetricInfo.AnnotateInPlace
  - CodeJam.PerfTests.Metrics.MetricInfo.AttributeType
  - CodeJam.PerfTests.Metrics.MetricInfo.Category
  - CodeJam.PerfTests.Metrics.MetricInfo.DisplayName
  - CodeJam.PerfTests.Metrics.MetricInfo.FromAttribute``1
  - CodeJam.PerfTests.Metrics.MetricInfo.GetColumnProvider
  - CodeJam.PerfTests.Metrics.MetricInfo.GetColumnProvider(CodeJam.PerfTests.Metrics.MetricValueColumns)
  - CodeJam.PerfTests.Metrics.MetricInfo.GetDiagnosers
  - CodeJam.PerfTests.Metrics.MetricInfo.IsPrimaryMetric
  - CodeJam.PerfTests.Metrics.MetricInfo.IsRelative
  - CodeJam.PerfTests.Metrics.MetricInfo.MetricColumns
  - CodeJam.PerfTests.Metrics.MetricInfo.MetricUnits
  - CodeJam.PerfTests.Metrics.MetricInfo.PrimaryMetric
  - CodeJam.PerfTests.Metrics.MetricInfo.SingleValueMode
  - CodeJam.PerfTests.Metrics.MetricInfo.ToString
  - CodeJam.PerfTests.Metrics.MetricInfo.ValuesProvider
  langs:
  - csharp
  - vb
  name: MetricInfo
  nameWithType: MetricInfo
  fullName: CodeJam.PerfTests.Metrics.MetricInfo
  type: Class
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/MetricInfo.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: MetricInfo
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/MetricInfo.cs
    startLine: 20
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: "\nMetric description.\n"
  remarks: "\nInstances of this type are cached to enable equality by reference semantic.\nDO NOT expose API that enables creation of multiple instances of the same metric.\n"
  example: []
  syntax:
    content: public class MetricInfo
    content.vb: Public Class MetricInfo
  inheritance:
  - System.Object
  derivedClasses:
  - CodeJam.PerfTests.Metrics.MetricInfo`1
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CodeJam.PerfTests.Metrics.MetricInfo.FromAttribute``1
  commentId: M:CodeJam.PerfTests.Metrics.MetricInfo.FromAttribute``1
  id: FromAttribute``1
  parent: CodeJam.PerfTests.Metrics.MetricInfo
  langs:
  - csharp
  - vb
  name: FromAttribute<TAttribute>()
  nameWithType: MetricInfo.FromAttribute<TAttribute>()
  fullName: CodeJam.PerfTests.Metrics.MetricInfo.FromAttribute<TAttribute>()
  type: Method
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/MetricInfo.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: FromAttribute
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/MetricInfo.cs
    startLine: 35
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: Creates instance of the <xref href="CodeJam.PerfTests.Metrics.MetricInfo%601" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: 'public static MetricInfo<TAttribute> FromAttribute<TAttribute>()where TAttribute : Attribute, IStoredMetricValue'
    typeParameters:
    - id: TAttribute
      description: "\nType of the attribute used for metric annotation.\nShould implement <xref href=\"CodeJam.PerfTests.Metrics.IMetricAttribute%601\" data-throw-if-not-resolved=\"false\"></xref> or\n<xref href=\"CodeJam.PerfTests.Metrics.IMetricAttribute%602\" data-throw-if-not-resolved=\"false\"></xref>;\nyou can use <xref href=\"CodeJam.PerfTests.Metrics.MetricAttributeBase\" data-throw-if-not-resolved=\"false\"></xref> as a base implementation.\n"
    return:
      type: CodeJam.PerfTests.Metrics.MetricInfo{{TAttribute}}
      description: Instance of the <xref href="CodeJam.PerfTests.Metrics.MetricInfo%601" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function FromAttribute(Of TAttribute As {Attribute, IStoredMetricValue}) As MetricInfo(Of TAttribute)
  overload: CodeJam.PerfTests.Metrics.MetricInfo.FromAttribute*
  nameWithType.vb: MetricInfo.FromAttribute(Of TAttribute)()
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: CodeJam.PerfTests.Metrics.MetricInfo.FromAttribute(Of TAttribute)()
  name.vb: FromAttribute(Of TAttribute)()
- uid: CodeJam.PerfTests.Metrics.MetricInfo.PrimaryMetric
  commentId: F:CodeJam.PerfTests.Metrics.MetricInfo.PrimaryMetric
  id: PrimaryMetric
  parent: CodeJam.PerfTests.Metrics.MetricInfo
  langs:
  - csharp
  - vb
  name: PrimaryMetric
  nameWithType: MetricInfo.PrimaryMetric
  fullName: CodeJam.PerfTests.Metrics.MetricInfo.PrimaryMetric
  type: Field
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/MetricInfo.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: PrimaryMetric
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/MetricInfo.cs
    startLine: 41
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: The primary metric.
  example: []
  syntax:
    content: public static readonly MetricInfo<CompetitionBenchmarkAttribute> PrimaryMetric
    return:
      type: CodeJam.PerfTests.Metrics.MetricInfo{CodeJam.PerfTests.CompetitionBenchmarkAttribute}
    content.vb: Public Shared ReadOnly PrimaryMetric As MetricInfo(Of CompetitionBenchmarkAttribute)
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: CodeJam.PerfTests.Metrics.MetricInfo.DisplayName
  commentId: P:CodeJam.PerfTests.Metrics.MetricInfo.DisplayName
  id: DisplayName
  parent: CodeJam.PerfTests.Metrics.MetricInfo
  langs:
  - csharp
  - vb
  name: DisplayName
  nameWithType: MetricInfo.DisplayName
  fullName: CodeJam.PerfTests.Metrics.MetricInfo.DisplayName
  type: Property
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/MetricInfo.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: DisplayName
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/MetricInfo.cs
    startLine: 119
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: Gets display name of the metric.
  example: []
  syntax:
    content: public string DisplayName { get; }
    parameters: []
    return:
      type: System.String
      description: The display name of the metric.
    content.vb: Public ReadOnly Property DisplayName As String
  overload: CodeJam.PerfTests.Metrics.MetricInfo.DisplayName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CodeJam.PerfTests.Metrics.MetricInfo.AttributeType
  commentId: P:CodeJam.PerfTests.Metrics.MetricInfo.AttributeType
  id: AttributeType
  parent: CodeJam.PerfTests.Metrics.MetricInfo
  langs:
  - csharp
  - vb
  name: AttributeType
  nameWithType: MetricInfo.AttributeType
  fullName: CodeJam.PerfTests.Metrics.MetricInfo.AttributeType
  type: Property
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/MetricInfo.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: AttributeType
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/MetricInfo.cs
    startLine: 124
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: Gets type of the metric attribute.
  example: []
  syntax:
    content: public Type AttributeType { get; }
    parameters: []
    return:
      type: System.Type
      description: The type of the metric attribute.
    content.vb: Public ReadOnly Property AttributeType As Type
  overload: CodeJam.PerfTests.Metrics.MetricInfo.AttributeType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CodeJam.PerfTests.Metrics.MetricInfo.MetricUnits
  commentId: P:CodeJam.PerfTests.Metrics.MetricInfo.MetricUnits
  id: MetricUnits
  parent: CodeJam.PerfTests.Metrics.MetricInfo
  langs:
  - csharp
  - vb
  name: MetricUnits
  nameWithType: MetricInfo.MetricUnits
  fullName: CodeJam.PerfTests.Metrics.MetricInfo.MetricUnits
  type: Property
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/MetricInfo.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: MetricUnits
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/MetricInfo.cs
    startLine: 129
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: Gets metric measurement scale.
  example: []
  syntax:
    content: public MetricUnitScale MetricUnits { get; }
    parameters: []
    return:
      type: CodeJam.PerfTests.Metrics.MetricUnitScale
      description: The metric measurement scale.
    content.vb: Public ReadOnly Property MetricUnits As MetricUnitScale
  overload: CodeJam.PerfTests.Metrics.MetricInfo.MetricUnits*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CodeJam.PerfTests.Metrics.MetricInfo.ValuesProvider
  commentId: P:CodeJam.PerfTests.Metrics.MetricInfo.ValuesProvider
  id: ValuesProvider
  parent: CodeJam.PerfTests.Metrics.MetricInfo
  langs:
  - csharp
  - vb
  name: ValuesProvider
  nameWithType: MetricInfo.ValuesProvider
  fullName: CodeJam.PerfTests.Metrics.MetricInfo.ValuesProvider
  type: Property
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/MetricInfo.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: ValuesProvider
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/MetricInfo.cs
    startLine: 134
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: Gets metric values provider.
  example: []
  syntax:
    content: public IMetricValuesProvider ValuesProvider { get; }
    parameters: []
    return:
      type: CodeJam.PerfTests.Metrics.IMetricValuesProvider
      description: The metric values provider.
    content.vb: Public ReadOnly Property ValuesProvider As IMetricValuesProvider
  overload: CodeJam.PerfTests.Metrics.MetricInfo.ValuesProvider*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CodeJam.PerfTests.Metrics.MetricInfo.IsPrimaryMetric
  commentId: P:CodeJam.PerfTests.Metrics.MetricInfo.IsPrimaryMetric
  id: IsPrimaryMetric
  parent: CodeJam.PerfTests.Metrics.MetricInfo
  langs:
  - csharp
  - vb
  name: IsPrimaryMetric
  nameWithType: MetricInfo.IsPrimaryMetric
  fullName: CodeJam.PerfTests.Metrics.MetricInfo.IsPrimaryMetric
  type: Property
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/MetricInfo.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: IsPrimaryMetric
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/MetricInfo.cs
    startLine: 144
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: "\nGets a value indicating whether this instance is a primary metric\n(a metric for <xref href=\"CodeJam.PerfTests.CompetitionBenchmarkAttribute\" data-throw-if-not-resolved=\"false\"></xref>).\n"
  example: []
  syntax:
    content: public bool IsPrimaryMetric { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if this instance is primary metric; otherwise, <code>false</code>.\n"
    content.vb: Public ReadOnly Property IsPrimaryMetric As Boolean
  overload: CodeJam.PerfTests.Metrics.MetricInfo.IsPrimaryMetric*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CodeJam.PerfTests.Metrics.MetricInfo.IsRelative
  commentId: P:CodeJam.PerfTests.Metrics.MetricInfo.IsRelative
  id: IsRelative
  parent: CodeJam.PerfTests.Metrics.MetricInfo
  langs:
  - csharp
  - vb
  name: IsRelative
  nameWithType: MetricInfo.IsRelative
  fullName: CodeJam.PerfTests.Metrics.MetricInfo.IsRelative
  type: Property
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/MetricInfo.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: IsRelative
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/MetricInfo.cs
    startLine: 148
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: Gets a value indicating whether the metric is relative.
  example: []
  syntax:
    content: public bool IsRelative { get; }
    parameters: []
    return:
      type: System.Boolean
      description: '<code>true</code> if the metric is relative; otherwise, <code>false</code>. '
    content.vb: Public ReadOnly Property IsRelative As Boolean
  overload: CodeJam.PerfTests.Metrics.MetricInfo.IsRelative*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CodeJam.PerfTests.Metrics.MetricInfo.Category
  commentId: P:CodeJam.PerfTests.Metrics.MetricInfo.Category
  id: Category
  parent: CodeJam.PerfTests.Metrics.MetricInfo
  langs:
  - csharp
  - vb
  name: Category
  nameWithType: MetricInfo.Category
  fullName: CodeJam.PerfTests.Metrics.MetricInfo.Category
  type: Property
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/MetricInfo.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: Category
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/MetricInfo.cs
    startLine: 152
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: Gets category of the metric.
  example: []
  syntax:
    content: public string Category { get; }
    parameters: []
    return:
      type: System.String
      description: The category of the metric.
    content.vb: Public ReadOnly Property Category As String
  overload: CodeJam.PerfTests.Metrics.MetricInfo.Category*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CodeJam.PerfTests.Metrics.MetricInfo.AnnotateInPlace
  commentId: P:CodeJam.PerfTests.Metrics.MetricInfo.AnnotateInPlace
  id: AnnotateInPlace
  parent: CodeJam.PerfTests.Metrics.MetricInfo
  langs:
  - csharp
  - vb
  name: AnnotateInPlace
  nameWithType: MetricInfo.AnnotateInPlace
  fullName: CodeJam.PerfTests.Metrics.MetricInfo.AnnotateInPlace
  type: Property
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/MetricInfo.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: AnnotateInPlace
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/MetricInfo.cs
    startLine: 161
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: "\nGets in-place annotation mode (all in-place attributes for same category will be placed at the same line).\n"
  example: []
  syntax:
    content: public bool AnnotateInPlace { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the in-place annotation mode is enabled; otherwise, <code>false</code>.\n"
    content.vb: Public ReadOnly Property AnnotateInPlace As Boolean
  overload: CodeJam.PerfTests.Metrics.MetricInfo.AnnotateInPlace*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CodeJam.PerfTests.Metrics.MetricInfo.SingleValueMode
  commentId: P:CodeJam.PerfTests.Metrics.MetricInfo.SingleValueMode
  id: SingleValueMode
  parent: CodeJam.PerfTests.Metrics.MetricInfo
  langs:
  - csharp
  - vb
  name: SingleValueMode
  nameWithType: MetricInfo.SingleValueMode
  fullName: CodeJam.PerfTests.Metrics.MetricInfo.SingleValueMode
  type: Property
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/MetricInfo.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: SingleValueMode
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/MetricInfo.cs
    startLine: 165
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: Gets single value treatment mode.
  example: []
  syntax:
    content: public MetricSingleValueMode SingleValueMode { get; }
    parameters: []
    return:
      type: CodeJam.PerfTests.Metrics.MetricSingleValueMode
      description: The single value treatment mode.
    content.vb: Public ReadOnly Property SingleValueMode As MetricSingleValueMode
  overload: CodeJam.PerfTests.Metrics.MetricInfo.SingleValueMode*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CodeJam.PerfTests.Metrics.MetricInfo.MetricColumns
  commentId: P:CodeJam.PerfTests.Metrics.MetricInfo.MetricColumns
  id: MetricColumns
  parent: CodeJam.PerfTests.Metrics.MetricInfo
  langs:
  - csharp
  - vb
  name: MetricColumns
  nameWithType: MetricInfo.MetricColumns
  fullName: CodeJam.PerfTests.Metrics.MetricInfo.MetricColumns
  type: Property
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/MetricInfo.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: MetricColumns
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/MetricInfo.cs
    startLine: 169
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: Gets columns to include into summary output.
  example: []
  syntax:
    content: public MetricValueColumns MetricColumns { get; }
    parameters: []
    return:
      type: CodeJam.PerfTests.Metrics.MetricValueColumns
      description: The columns to include into summary output.
    content.vb: Public ReadOnly Property MetricColumns As MetricValueColumns
  overload: CodeJam.PerfTests.Metrics.MetricInfo.MetricColumns*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CodeJam.PerfTests.Metrics.MetricInfo.GetColumnProvider
  commentId: M:CodeJam.PerfTests.Metrics.MetricInfo.GetColumnProvider
  id: GetColumnProvider
  parent: CodeJam.PerfTests.Metrics.MetricInfo
  langs:
  - csharp
  - vb
  name: GetColumnProvider()
  nameWithType: MetricInfo.GetColumnProvider()
  fullName: CodeJam.PerfTests.Metrics.MetricInfo.GetColumnProvider()
  type: Method
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/MetricInfo.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: GetColumnProvider
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/MetricInfo.cs
    startLine: 174
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: Gets column provider for the metric values.
  example: []
  syntax:
    content: public IColumnProvider GetColumnProvider()
    return:
      type: BenchmarkDotNet.Columns.IColumnProvider
      description: Column provider for the metric values
    content.vb: Public Function GetColumnProvider As IColumnProvider
  overload: CodeJam.PerfTests.Metrics.MetricInfo.GetColumnProvider*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CodeJam.PerfTests.Metrics.MetricInfo.GetColumnProvider(CodeJam.PerfTests.Metrics.MetricValueColumns)
  commentId: M:CodeJam.PerfTests.Metrics.MetricInfo.GetColumnProvider(CodeJam.PerfTests.Metrics.MetricValueColumns)
  id: GetColumnProvider(CodeJam.PerfTests.Metrics.MetricValueColumns)
  parent: CodeJam.PerfTests.Metrics.MetricInfo
  langs:
  - csharp
  - vb
  name: GetColumnProvider(MetricValueColumns)
  nameWithType: MetricInfo.GetColumnProvider(MetricValueColumns)
  fullName: CodeJam.PerfTests.Metrics.MetricInfo.GetColumnProvider(CodeJam.PerfTests.Metrics.MetricValueColumns)
  type: Method
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/MetricInfo.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: GetColumnProvider
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/MetricInfo.cs
    startLine: 180
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: Gets column provider for the metric values.
  example: []
  syntax:
    content: public IColumnProvider GetColumnProvider(MetricValueColumns columns)
    parameters:
    - id: columns
      type: CodeJam.PerfTests.Metrics.MetricValueColumns
      description: The columns to include.
    return:
      type: BenchmarkDotNet.Columns.IColumnProvider
      description: Column provider for the metric values
    content.vb: Public Function GetColumnProvider(columns As MetricValueColumns) As IColumnProvider
  overload: CodeJam.PerfTests.Metrics.MetricInfo.GetColumnProvider*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CodeJam.PerfTests.Metrics.MetricInfo.GetDiagnosers
  commentId: M:CodeJam.PerfTests.Metrics.MetricInfo.GetDiagnosers
  id: GetDiagnosers
  parent: CodeJam.PerfTests.Metrics.MetricInfo
  langs:
  - csharp
  - vb
  name: GetDiagnosers()
  nameWithType: MetricInfo.GetDiagnosers()
  fullName: CodeJam.PerfTests.Metrics.MetricInfo.GetDiagnosers()
  type: Method
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/MetricInfo.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: GetDiagnosers
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/MetricInfo.cs
    startLine: 185
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: Gets diagnosers for the metric values.
  example: []
  syntax:
    content: public IDiagnoser[] GetDiagnosers()
    return:
      type: BenchmarkDotNet.Diagnosers.IDiagnoser[]
      description: Diagnosers for the metric values
    content.vb: Public Function GetDiagnosers As IDiagnoser()
  overload: CodeJam.PerfTests.Metrics.MetricInfo.GetDiagnosers*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CodeJam.PerfTests.Metrics.MetricInfo.ToString
  commentId: M:CodeJam.PerfTests.Metrics.MetricInfo.ToString
  id: ToString
  parent: CodeJam.PerfTests.Metrics.MetricInfo
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: MetricInfo.ToString()
  fullName: CodeJam.PerfTests.Metrics.MetricInfo.ToString()
  type: Method
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/MetricInfo.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: ToString
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/MetricInfo.cs
    startLine: 190
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: Returns a <xref href="System.String" data-throw-if-not-resolved="false"></xref> that represents this instance.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> that represents this instance.
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: CodeJam.PerfTests.Metrics.MetricInfo.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: CodeJam.PerfTests.Metrics
  commentId: N:CodeJam.PerfTests.Metrics
  isExternal: false
  name: CodeJam.PerfTests.Metrics
  nameWithType: CodeJam.PerfTests.Metrics
  fullName: CodeJam.PerfTests.Metrics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: CodeJam.PerfTests.Metrics.MetricInfo`1
  commentId: T:CodeJam.PerfTests.Metrics.MetricInfo`1
  isExternal: false
  name: MetricInfo<TAttribute>
  nameWithType: MetricInfo<TAttribute>
  fullName: CodeJam.PerfTests.Metrics.MetricInfo<TAttribute>
  nameWithType.vb: MetricInfo(Of TAttribute)
  fullName.vb: CodeJam.PerfTests.Metrics.MetricInfo(Of TAttribute)
  name.vb: MetricInfo(Of TAttribute)
  spec.csharp:
  - uid: CodeJam.PerfTests.Metrics.MetricInfo`1
    name: MetricInfo
    nameWithType: MetricInfo
    fullName: CodeJam.PerfTests.Metrics.MetricInfo
  - name: <
    nameWithType: <
    fullName: <
  - name: TAttribute
    nameWithType: TAttribute
    fullName: TAttribute
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: CodeJam.PerfTests.Metrics.MetricInfo`1
    name: MetricInfo
    nameWithType: MetricInfo
    fullName: CodeJam.PerfTests.Metrics.MetricInfo
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAttribute
    nameWithType: TAttribute
    fullName: TAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: CodeJam.PerfTests.Metrics.IMetricAttribute`1
  commentId: T:CodeJam.PerfTests.Metrics.IMetricAttribute`1
  isExternal: false
  name: IMetricAttribute<TMetricProvider>
  nameWithType: IMetricAttribute<TMetricProvider>
  fullName: CodeJam.PerfTests.Metrics.IMetricAttribute<TMetricProvider>
  nameWithType.vb: IMetricAttribute(Of TMetricProvider)
  fullName.vb: CodeJam.PerfTests.Metrics.IMetricAttribute(Of TMetricProvider)
  name.vb: IMetricAttribute(Of TMetricProvider)
  spec.csharp:
  - uid: CodeJam.PerfTests.Metrics.IMetricAttribute`1
    name: IMetricAttribute
    nameWithType: IMetricAttribute
    fullName: CodeJam.PerfTests.Metrics.IMetricAttribute
  - name: <
    nameWithType: <
    fullName: <
  - name: TMetricProvider
    nameWithType: TMetricProvider
    fullName: TMetricProvider
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: CodeJam.PerfTests.Metrics.IMetricAttribute`1
    name: IMetricAttribute
    nameWithType: IMetricAttribute
    fullName: CodeJam.PerfTests.Metrics.IMetricAttribute
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TMetricProvider
    nameWithType: TMetricProvider
    fullName: TMetricProvider
  - name: )
    nameWithType: )
    fullName: )
- uid: CodeJam.PerfTests.Metrics.IMetricAttribute`2
  commentId: T:CodeJam.PerfTests.Metrics.IMetricAttribute`2
  isExternal: false
  name: IMetricAttribute<TMetricProvider, TUnitOfMeasurement>
  nameWithType: IMetricAttribute<TMetricProvider, TUnitOfMeasurement>
  fullName: CodeJam.PerfTests.Metrics.IMetricAttribute<TMetricProvider, TUnitOfMeasurement>
  nameWithType.vb: IMetricAttribute(Of TMetricProvider, TUnitOfMeasurement)
  fullName.vb: CodeJam.PerfTests.Metrics.IMetricAttribute(Of TMetricProvider, TUnitOfMeasurement)
  name.vb: IMetricAttribute(Of TMetricProvider, TUnitOfMeasurement)
  spec.csharp:
  - uid: CodeJam.PerfTests.Metrics.IMetricAttribute`2
    name: IMetricAttribute
    nameWithType: IMetricAttribute
    fullName: CodeJam.PerfTests.Metrics.IMetricAttribute
  - name: <
    nameWithType: <
    fullName: <
  - name: TMetricProvider
    nameWithType: TMetricProvider
    fullName: TMetricProvider
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUnitOfMeasurement
    nameWithType: TUnitOfMeasurement
    fullName: TUnitOfMeasurement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: CodeJam.PerfTests.Metrics.IMetricAttribute`2
    name: IMetricAttribute
    nameWithType: IMetricAttribute
    fullName: CodeJam.PerfTests.Metrics.IMetricAttribute
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TMetricProvider
    nameWithType: TMetricProvider
    fullName: TMetricProvider
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUnitOfMeasurement
    nameWithType: TUnitOfMeasurement
    fullName: TUnitOfMeasurement
  - name: )
    nameWithType: )
    fullName: )
- uid: CodeJam.PerfTests.Metrics.MetricAttributeBase
  commentId: T:CodeJam.PerfTests.Metrics.MetricAttributeBase
  parent: CodeJam.PerfTests.Metrics
  isExternal: false
  name: MetricAttributeBase
  nameWithType: MetricAttributeBase
  fullName: CodeJam.PerfTests.Metrics.MetricAttributeBase
- uid: CodeJam.PerfTests.Metrics.MetricInfo.FromAttribute*
  commentId: Overload:CodeJam.PerfTests.Metrics.MetricInfo.FromAttribute
  isExternal: false
  name: FromAttribute
  nameWithType: MetricInfo.FromAttribute
  fullName: CodeJam.PerfTests.Metrics.MetricInfo.FromAttribute
- uid: CodeJam.PerfTests.Metrics.MetricInfo{{TAttribute}}
  commentId: T:CodeJam.PerfTests.Metrics.MetricInfo{``0}
  parent: CodeJam.PerfTests.Metrics
  definition: CodeJam.PerfTests.Metrics.MetricInfo`1
  name: MetricInfo<TAttribute>
  nameWithType: MetricInfo<TAttribute>
  fullName: CodeJam.PerfTests.Metrics.MetricInfo<TAttribute>
  nameWithType.vb: MetricInfo(Of TAttribute)
  fullName.vb: CodeJam.PerfTests.Metrics.MetricInfo(Of TAttribute)
  name.vb: MetricInfo(Of TAttribute)
  spec.csharp:
  - uid: CodeJam.PerfTests.Metrics.MetricInfo`1
    name: MetricInfo
    nameWithType: MetricInfo
    fullName: CodeJam.PerfTests.Metrics.MetricInfo
  - name: <
    nameWithType: <
    fullName: <
  - name: TAttribute
    nameWithType: TAttribute
    fullName: TAttribute
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: CodeJam.PerfTests.Metrics.MetricInfo`1
    name: MetricInfo
    nameWithType: MetricInfo
    fullName: CodeJam.PerfTests.Metrics.MetricInfo
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAttribute
    nameWithType: TAttribute
    fullName: TAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: CodeJam.PerfTests.Metrics.MetricInfo{CodeJam.PerfTests.CompetitionBenchmarkAttribute}
  commentId: T:CodeJam.PerfTests.Metrics.MetricInfo{CodeJam.PerfTests.CompetitionBenchmarkAttribute}
  parent: CodeJam.PerfTests.Metrics
  definition: CodeJam.PerfTests.Metrics.MetricInfo`1
  name: MetricInfo<CompetitionBenchmarkAttribute>
  nameWithType: MetricInfo<CompetitionBenchmarkAttribute>
  fullName: CodeJam.PerfTests.Metrics.MetricInfo<CodeJam.PerfTests.CompetitionBenchmarkAttribute>
  nameWithType.vb: MetricInfo(Of CompetitionBenchmarkAttribute)
  fullName.vb: CodeJam.PerfTests.Metrics.MetricInfo(Of CodeJam.PerfTests.CompetitionBenchmarkAttribute)
  name.vb: MetricInfo(Of CompetitionBenchmarkAttribute)
  spec.csharp:
  - uid: CodeJam.PerfTests.Metrics.MetricInfo`1
    name: MetricInfo
    nameWithType: MetricInfo
    fullName: CodeJam.PerfTests.Metrics.MetricInfo
  - name: <
    nameWithType: <
    fullName: <
  - uid: CodeJam.PerfTests.CompetitionBenchmarkAttribute
    name: CompetitionBenchmarkAttribute
    nameWithType: CompetitionBenchmarkAttribute
    fullName: CodeJam.PerfTests.CompetitionBenchmarkAttribute
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: CodeJam.PerfTests.Metrics.MetricInfo`1
    name: MetricInfo
    nameWithType: MetricInfo
    fullName: CodeJam.PerfTests.Metrics.MetricInfo
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CodeJam.PerfTests.CompetitionBenchmarkAttribute
    name: CompetitionBenchmarkAttribute
    nameWithType: CompetitionBenchmarkAttribute
    fullName: CodeJam.PerfTests.CompetitionBenchmarkAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: CodeJam.PerfTests.Metrics.MetricInfo.DisplayName*
  commentId: Overload:CodeJam.PerfTests.Metrics.MetricInfo.DisplayName
  isExternal: false
  name: DisplayName
  nameWithType: MetricInfo.DisplayName
  fullName: CodeJam.PerfTests.Metrics.MetricInfo.DisplayName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: CodeJam.PerfTests.Metrics.MetricInfo.AttributeType*
  commentId: Overload:CodeJam.PerfTests.Metrics.MetricInfo.AttributeType
  isExternal: false
  name: AttributeType
  nameWithType: MetricInfo.AttributeType
  fullName: CodeJam.PerfTests.Metrics.MetricInfo.AttributeType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: CodeJam.PerfTests.Metrics.MetricInfo.MetricUnits*
  commentId: Overload:CodeJam.PerfTests.Metrics.MetricInfo.MetricUnits
  isExternal: false
  name: MetricUnits
  nameWithType: MetricInfo.MetricUnits
  fullName: CodeJam.PerfTests.Metrics.MetricInfo.MetricUnits
- uid: CodeJam.PerfTests.Metrics.MetricUnitScale
  commentId: T:CodeJam.PerfTests.Metrics.MetricUnitScale
  parent: CodeJam.PerfTests.Metrics
  isExternal: false
  name: MetricUnitScale
  nameWithType: MetricUnitScale
  fullName: CodeJam.PerfTests.Metrics.MetricUnitScale
- uid: CodeJam.PerfTests.Metrics.MetricInfo.ValuesProvider*
  commentId: Overload:CodeJam.PerfTests.Metrics.MetricInfo.ValuesProvider
  isExternal: false
  name: ValuesProvider
  nameWithType: MetricInfo.ValuesProvider
  fullName: CodeJam.PerfTests.Metrics.MetricInfo.ValuesProvider
- uid: CodeJam.PerfTests.Metrics.IMetricValuesProvider
  commentId: T:CodeJam.PerfTests.Metrics.IMetricValuesProvider
  parent: CodeJam.PerfTests.Metrics
  isExternal: false
  name: IMetricValuesProvider
  nameWithType: IMetricValuesProvider
  fullName: CodeJam.PerfTests.Metrics.IMetricValuesProvider
- uid: CodeJam.PerfTests.CompetitionBenchmarkAttribute
  commentId: T:CodeJam.PerfTests.CompetitionBenchmarkAttribute
  parent: CodeJam.PerfTests
  isExternal: false
  name: CompetitionBenchmarkAttribute
  nameWithType: CompetitionBenchmarkAttribute
  fullName: CodeJam.PerfTests.CompetitionBenchmarkAttribute
- uid: CodeJam.PerfTests.Metrics.MetricInfo.IsPrimaryMetric*
  commentId: Overload:CodeJam.PerfTests.Metrics.MetricInfo.IsPrimaryMetric
  isExternal: false
  name: IsPrimaryMetric
  nameWithType: MetricInfo.IsPrimaryMetric
  fullName: CodeJam.PerfTests.Metrics.MetricInfo.IsPrimaryMetric
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: CodeJam.PerfTests
  commentId: N:CodeJam.PerfTests
  isExternal: false
  name: CodeJam.PerfTests
  nameWithType: CodeJam.PerfTests
  fullName: CodeJam.PerfTests
- uid: CodeJam.PerfTests.Metrics.MetricInfo.IsRelative*
  commentId: Overload:CodeJam.PerfTests.Metrics.MetricInfo.IsRelative
  isExternal: false
  name: IsRelative
  nameWithType: MetricInfo.IsRelative
  fullName: CodeJam.PerfTests.Metrics.MetricInfo.IsRelative
- uid: CodeJam.PerfTests.Metrics.MetricInfo.Category*
  commentId: Overload:CodeJam.PerfTests.Metrics.MetricInfo.Category
  isExternal: false
  name: Category
  nameWithType: MetricInfo.Category
  fullName: CodeJam.PerfTests.Metrics.MetricInfo.Category
- uid: CodeJam.PerfTests.Metrics.MetricInfo.AnnotateInPlace*
  commentId: Overload:CodeJam.PerfTests.Metrics.MetricInfo.AnnotateInPlace
  isExternal: false
  name: AnnotateInPlace
  nameWithType: MetricInfo.AnnotateInPlace
  fullName: CodeJam.PerfTests.Metrics.MetricInfo.AnnotateInPlace
- uid: CodeJam.PerfTests.Metrics.MetricInfo.SingleValueMode*
  commentId: Overload:CodeJam.PerfTests.Metrics.MetricInfo.SingleValueMode
  isExternal: false
  name: SingleValueMode
  nameWithType: MetricInfo.SingleValueMode
  fullName: CodeJam.PerfTests.Metrics.MetricInfo.SingleValueMode
- uid: CodeJam.PerfTests.Metrics.MetricSingleValueMode
  commentId: T:CodeJam.PerfTests.Metrics.MetricSingleValueMode
  parent: CodeJam.PerfTests.Metrics
  isExternal: false
  name: MetricSingleValueMode
  nameWithType: MetricSingleValueMode
  fullName: CodeJam.PerfTests.Metrics.MetricSingleValueMode
- uid: CodeJam.PerfTests.Metrics.MetricInfo.MetricColumns*
  commentId: Overload:CodeJam.PerfTests.Metrics.MetricInfo.MetricColumns
  isExternal: false
  name: MetricColumns
  nameWithType: MetricInfo.MetricColumns
  fullName: CodeJam.PerfTests.Metrics.MetricInfo.MetricColumns
- uid: CodeJam.PerfTests.Metrics.MetricValueColumns
  commentId: T:CodeJam.PerfTests.Metrics.MetricValueColumns
  parent: CodeJam.PerfTests.Metrics
  isExternal: false
  name: MetricValueColumns
  nameWithType: MetricValueColumns
  fullName: CodeJam.PerfTests.Metrics.MetricValueColumns
- uid: CodeJam.PerfTests.Metrics.MetricInfo.GetColumnProvider*
  commentId: Overload:CodeJam.PerfTests.Metrics.MetricInfo.GetColumnProvider
  isExternal: false
  name: GetColumnProvider
  nameWithType: MetricInfo.GetColumnProvider
  fullName: CodeJam.PerfTests.Metrics.MetricInfo.GetColumnProvider
- uid: BenchmarkDotNet.Columns.IColumnProvider
  commentId: T:BenchmarkDotNet.Columns.IColumnProvider
  parent: BenchmarkDotNet.Columns
  isExternal: true
  name: IColumnProvider
  nameWithType: IColumnProvider
  fullName: BenchmarkDotNet.Columns.IColumnProvider
- uid: BenchmarkDotNet.Columns
  commentId: N:BenchmarkDotNet.Columns
  isExternal: false
  name: BenchmarkDotNet.Columns
  nameWithType: BenchmarkDotNet.Columns
  fullName: BenchmarkDotNet.Columns
- uid: CodeJam.PerfTests.Metrics.MetricInfo.GetDiagnosers*
  commentId: Overload:CodeJam.PerfTests.Metrics.MetricInfo.GetDiagnosers
  isExternal: false
  name: GetDiagnosers
  nameWithType: MetricInfo.GetDiagnosers
  fullName: CodeJam.PerfTests.Metrics.MetricInfo.GetDiagnosers
- uid: BenchmarkDotNet.Diagnosers.IDiagnoser[]
  name: IDiagnoser[]
  nameWithType: IDiagnoser[]
  fullName: BenchmarkDotNet.Diagnosers.IDiagnoser[]
  nameWithType.vb: IDiagnoser()
  fullName.vb: BenchmarkDotNet.Diagnosers.IDiagnoser()
  name.vb: IDiagnoser()
  spec.csharp:
  - uid: BenchmarkDotNet.Diagnosers.IDiagnoser
    name: IDiagnoser
    nameWithType: IDiagnoser
    fullName: BenchmarkDotNet.Diagnosers.IDiagnoser
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: BenchmarkDotNet.Diagnosers.IDiagnoser
    name: IDiagnoser
    nameWithType: IDiagnoser
    fullName: BenchmarkDotNet.Diagnosers.IDiagnoser
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: CodeJam.PerfTests.Metrics.MetricInfo.ToString*
  commentId: Overload:CodeJam.PerfTests.Metrics.MetricInfo.ToString
  isExternal: false
  name: ToString
  nameWithType: MetricInfo.ToString
  fullName: CodeJam.PerfTests.Metrics.MetricInfo.ToString
