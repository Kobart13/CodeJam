### YamlMime:ManagedReference
items:
- uid: BenchmarkDotNet.Helpers.AttributeValue`1
  commentId: T:BenchmarkDotNet.Helpers.AttributeValue`1
  id: AttributeValue`1
  parent: BenchmarkDotNet.Helpers
  children:
  - BenchmarkDotNet.Helpers.AttributeValue`1.#ctor(System.Func{`0})
  - BenchmarkDotNet.Helpers.AttributeValue`1.#ctor(System.Type,System.String)
  - BenchmarkDotNet.Helpers.AttributeValue`1.Value
  langs:
  - csharp
  - vb
  name: AttributeValue<T>
  nameWithType: AttributeValue<T>
  fullName: BenchmarkDotNet.Helpers.AttributeValue<T>
  type: Class
  source:
    remote:
      path: PerfTests/src/[L0_PortToBenchmerkDotNet]/Helpers/AttributeValue.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: AttributeValue
    path: ../PerfTests/src/[L0_PortToBenchmerkDotNet]/Helpers/AttributeValue.cs
    startLine: 12
  assemblies:
  - CodeJam.PerfTests
  namespace: BenchmarkDotNet.Helpers
  summary: "\nHelper type for value provider attributes such as <xref href=\"BenchmarkDotNet.Configs.IConfigSource\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      public sealed class AttributeValue<T>
          where T : class
    typeParameters:
    - id: T
      description: Type of value. It&apos;s re Use interface if possible.
    content.vb: Public NotInheritable Class AttributeValue(Of T As Class)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: AttributeValue(Of T)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  fullName.vb: BenchmarkDotNet.Helpers.AttributeValue(Of T)
  name.vb: AttributeValue(Of T)
- uid: BenchmarkDotNet.Helpers.AttributeValue`1.#ctor(System.Type,System.String)
  commentId: M:BenchmarkDotNet.Helpers.AttributeValue`1.#ctor(System.Type,System.String)
  id: '#ctor(System.Type,System.String)'
  parent: BenchmarkDotNet.Helpers.AttributeValue`1
  langs:
  - csharp
  - vb
  name: AttributeValue(Type, String)
  nameWithType: AttributeValue<T>.AttributeValue(Type, String)
  fullName: BenchmarkDotNet.Helpers.AttributeValue<T>.AttributeValue(System.Type, System.String)
  type: Constructor
  source:
    remote:
      path: PerfTests/src/[L0_PortToBenchmerkDotNet]/Helpers/AttributeValue.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: .ctor
    path: ../PerfTests/src/[L0_PortToBenchmerkDotNet]/Helpers/AttributeValue.cs
    startLine: 21
  assemblies:
  - CodeJam.PerfTests
  namespace: BenchmarkDotNet.Helpers
  summary: Initializes a new instance of the <xref href="BenchmarkDotNet.Helpers.AttributeValue%601" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public AttributeValue(Type valueType, string argName)
    parameters:
    - id: valueType
      type: System.Type
      description: Type of the value. Should have a public parameterless constructor.
    - id: argName
      type: System.String
      description: Name of the argument. Passed to ArgumentException if arg validation failed.
    content.vb: Public Sub New(valueType As Type, argName As String)
  overload: BenchmarkDotNet.Helpers.AttributeValue`1.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code data-dev-comment-type="paramref" class="paramref">valueType</code> is <code>null</code>.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code data-dev-comment-type="paramref" class="paramref">valueType</code> does not implement <code data-dev-comment-type="typeparamref" class="typeparamref">T</code>.
  nameWithType.vb: AttributeValue(Of T).AttributeValue(Type, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BenchmarkDotNet.Helpers.AttributeValue(Of T).AttributeValue(System.Type, System.String)
- uid: BenchmarkDotNet.Helpers.AttributeValue`1.#ctor(System.Func{`0})
  commentId: M:BenchmarkDotNet.Helpers.AttributeValue`1.#ctor(System.Func{`0})
  id: '#ctor(System.Func{`0})'
  parent: BenchmarkDotNet.Helpers.AttributeValue`1
  langs:
  - csharp
  - vb
  name: AttributeValue(Func<T>)
  nameWithType: AttributeValue<T>.AttributeValue(Func<T>)
  fullName: BenchmarkDotNet.Helpers.AttributeValue<T>.AttributeValue(System.Func<T>)
  type: Constructor
  source:
    remote:
      path: PerfTests/src/[L0_PortToBenchmerkDotNet]/Helpers/AttributeValue.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: .ctor
    path: ../PerfTests/src/[L0_PortToBenchmerkDotNet]/Helpers/AttributeValue.cs
    startLine: 36
  assemblies:
  - CodeJam.PerfTests
  namespace: BenchmarkDotNet.Helpers
  summary: Initializes a new instance of the <xref href="BenchmarkDotNet.Helpers.AttributeValue%601" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public AttributeValue(Func<T> valueFactory)
    parameters:
    - id: valueFactory
      type: System.Func{{T}}
      description: The value factory.
    content.vb: Public Sub New(valueFactory As Func(Of T))
  overload: BenchmarkDotNet.Helpers.AttributeValue`1.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code data-dev-comment-type="paramref" class="paramref">valueFactory</code> is <code>null</code>.
  nameWithType.vb: AttributeValue(Of T).AttributeValue(Func(Of T))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BenchmarkDotNet.Helpers.AttributeValue(Of T).AttributeValue(System.Func(Of T))
  name.vb: AttributeValue(Func(Of T))
- uid: BenchmarkDotNet.Helpers.AttributeValue`1.Value
  commentId: P:BenchmarkDotNet.Helpers.AttributeValue`1.Value
  id: Value
  parent: BenchmarkDotNet.Helpers.AttributeValue`1
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: AttributeValue<T>.Value
  fullName: BenchmarkDotNet.Helpers.AttributeValue<T>.Value
  type: Property
  source:
    remote:
      path: PerfTests/src/[L0_PortToBenchmerkDotNet]/Helpers/AttributeValue.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: Value
    path: ../PerfTests/src/[L0_PortToBenchmerkDotNet]/Helpers/AttributeValue.cs
    startLine: 48
  assemblies:
  - CodeJam.PerfTests
  namespace: BenchmarkDotNet.Helpers
  summary: The value provided by the attribute.
  example: []
  syntax:
    content: public T Value { get; }
    parameters: []
    return:
      type: '{T}'
      description: The value provided by the attribute.
    content.vb: Public ReadOnly Property Value As T
  overload: BenchmarkDotNet.Helpers.AttributeValue`1.Value*
  nameWithType.vb: AttributeValue(Of T).Value
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: BenchmarkDotNet.Helpers.AttributeValue(Of T).Value
references:
- uid: BenchmarkDotNet.Configs.IConfigSource
  commentId: T:BenchmarkDotNet.Configs.IConfigSource
- uid: BenchmarkDotNet.Helpers
  commentId: N:BenchmarkDotNet.Helpers
  isExternal: false
  name: BenchmarkDotNet.Helpers
  nameWithType: BenchmarkDotNet.Helpers
  fullName: BenchmarkDotNet.Helpers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: BenchmarkDotNet.Helpers.AttributeValue`1
  commentId: T:BenchmarkDotNet.Helpers.AttributeValue`1
  isExternal: false
  name: AttributeValue<T>
  nameWithType: AttributeValue<T>
  fullName: BenchmarkDotNet.Helpers.AttributeValue<T>
  nameWithType.vb: AttributeValue(Of T)
  fullName.vb: BenchmarkDotNet.Helpers.AttributeValue(Of T)
  name.vb: AttributeValue(Of T)
  spec.csharp:
  - uid: BenchmarkDotNet.Helpers.AttributeValue`1
    name: AttributeValue
    nameWithType: AttributeValue
    fullName: BenchmarkDotNet.Helpers.AttributeValue
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BenchmarkDotNet.Helpers.AttributeValue`1
    name: AttributeValue
    nameWithType: AttributeValue
    fullName: BenchmarkDotNet.Helpers.AttributeValue
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: BenchmarkDotNet.Helpers.AttributeValue`1.#ctor*
  commentId: Overload:BenchmarkDotNet.Helpers.AttributeValue`1.#ctor
  isExternal: false
  name: AttributeValue
  nameWithType: AttributeValue<T>.AttributeValue
  fullName: BenchmarkDotNet.Helpers.AttributeValue<T>.AttributeValue
  nameWithType.vb: AttributeValue(Of T).AttributeValue
  fullName.vb: BenchmarkDotNet.Helpers.AttributeValue(Of T).AttributeValue
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Func{{T}}
  commentId: T:System.Func{`0}
  parent: System
  definition: System.Func`1
  name: Func<T>
  nameWithType: Func<T>
  fullName: System.Func<T>
  nameWithType.vb: Func(Of T)
  fullName.vb: System.Func(Of T)
  name.vb: Func(Of T)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: BenchmarkDotNet.Helpers.AttributeValue`1.Value*
  commentId: Overload:BenchmarkDotNet.Helpers.AttributeValue`1.Value
  isExternal: false
  name: Value
  nameWithType: AttributeValue<T>.Value
  fullName: BenchmarkDotNet.Helpers.AttributeValue<T>.Value
  nameWithType.vb: AttributeValue(Of T).Value
  fullName.vb: BenchmarkDotNet.Helpers.AttributeValue(Of T).Value
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
