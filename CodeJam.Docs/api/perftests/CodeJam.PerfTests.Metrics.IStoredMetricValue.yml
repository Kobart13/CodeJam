### YamlMime:ManagedReference
items:
- uid: CodeJam.PerfTests.Metrics.IStoredMetricValue
  commentId: T:CodeJam.PerfTests.Metrics.IStoredMetricValue
  id: IStoredMetricValue
  parent: CodeJam.PerfTests.Metrics
  children:
  - CodeJam.PerfTests.Metrics.IStoredMetricValue.Max
  - CodeJam.PerfTests.Metrics.IStoredMetricValue.MetricAttributeType
  - CodeJam.PerfTests.Metrics.IStoredMetricValue.Min
  - CodeJam.PerfTests.Metrics.IStoredMetricValue.UnitOfMeasurement
  langs:
  - csharp
  - vb
  name: IStoredMetricValue
  nameWithType: IStoredMetricValue
  fullName: CodeJam.PerfTests.Metrics.IStoredMetricValue
  type: Interface
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricAttributeBase]/IStoredMetricValue.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: IStoredMetricValue
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricAttributeBase]/IStoredMetricValue.cs
    startLine: 7
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: Base interface for stored metric values.
  example: []
  syntax:
    content: public interface IStoredMetricValue
    content.vb: Public Interface IStoredMetricValue
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: CodeJam.PerfTests.Metrics.IStoredMetricValue.MetricAttributeType
  commentId: P:CodeJam.PerfTests.Metrics.IStoredMetricValue.MetricAttributeType
  id: MetricAttributeType
  parent: CodeJam.PerfTests.Metrics.IStoredMetricValue
  langs:
  - csharp
  - vb
  name: MetricAttributeType
  nameWithType: IStoredMetricValue.MetricAttributeType
  fullName: CodeJam.PerfTests.Metrics.IStoredMetricValue.MetricAttributeType
  type: Property
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricAttributeBase]/IStoredMetricValue.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: MetricAttributeType
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricAttributeBase]/IStoredMetricValue.cs
    startLine: 11
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: Gets type of the attribute used for metric annotation.
  example: []
  syntax:
    content: Type MetricAttributeType { get; }
    parameters: []
    return:
      type: System.Type
      description: The type of the attribute used for metric annotation.
    content.vb: ReadOnly Property MetricAttributeType As Type
  overload: CodeJam.PerfTests.Metrics.IStoredMetricValue.MetricAttributeType*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: CodeJam.PerfTests.Metrics.IStoredMetricValue.Min
  commentId: P:CodeJam.PerfTests.Metrics.IStoredMetricValue.Min
  id: Min
  parent: CodeJam.PerfTests.Metrics.IStoredMetricValue
  langs:
  - csharp
  - vb
  name: Min
  nameWithType: IStoredMetricValue.Min
  fullName: CodeJam.PerfTests.Metrics.IStoredMetricValue.Min
  type: Property
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricAttributeBase]/IStoredMetricValue.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: Min
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricAttributeBase]/IStoredMetricValue.cs
    startLine: 23
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: Gets minimum value.
  example: []
  syntax:
    content: double Min { get; }
    parameters: []
    return:
      type: System.Double
      description: "\nThe minimum value.\nThe <xref href=\"System.Double.NaN\" data-throw-if-not-resolved=\"false\"></xref> marks the value as unset but updateable during the annotation.\nThe <xref href=\"System.Double.NegativeInfinity\" data-throw-if-not-resolved=\"false\"></xref> returned if value is negative infinity (ignored, essentially).\nIMPORTANT: If the <xref href=\"CodeJam.PerfTests.Metrics.IStoredMetricValue.UnitOfMeasurement\" data-throw-if-not-resolved=\"false\"></xref> is not <code>null</code>\nboth <xref href=\"CodeJam.PerfTests.Metrics.IStoredMetricValue.Min\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"CodeJam.PerfTests.Metrics.IStoredMetricValue.Max\" data-throw-if-not-resolved=\"false\"></xref> values are scaled.\nUse the <xref href=\"CodeJam.PerfTests.Metrics.MetricValueHelpers\" data-throw-if-not-resolved=\"false\"></xref> to normalize them.\n"
    content.vb: ReadOnly Property Min As Double
  overload: CodeJam.PerfTests.Metrics.IStoredMetricValue.Min*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: CodeJam.PerfTests.Metrics.IStoredMetricValue.Max
  commentId: P:CodeJam.PerfTests.Metrics.IStoredMetricValue.Max
  id: Max
  parent: CodeJam.PerfTests.Metrics.IStoredMetricValue
  langs:
  - csharp
  - vb
  name: Max
  nameWithType: IStoredMetricValue.Max
  fullName: CodeJam.PerfTests.Metrics.IStoredMetricValue.Max
  type: Property
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricAttributeBase]/IStoredMetricValue.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: Max
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricAttributeBase]/IStoredMetricValue.cs
    startLine: 34
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: Gets maximum value.
  example: []
  syntax:
    content: double Max { get; }
    parameters: []
    return:
      type: System.Double
      description: "\nThe maximum value.\nThe <xref href=\"System.Double.NaN\" data-throw-if-not-resolved=\"false\"></xref> marks the value as unset but updateable during the annotation.\nThe <xref href=\"System.Double.PositiveInfinity\" data-throw-if-not-resolved=\"false\"></xref> returned if value is positive infinity (ignored, essentially).\nIMPORTANT: If the <xref href=\"CodeJam.PerfTests.Metrics.IStoredMetricValue.UnitOfMeasurement\" data-throw-if-not-resolved=\"false\"></xref> is not <code>null</code>\nboth <xref href=\"CodeJam.PerfTests.Metrics.IStoredMetricValue.Min\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"CodeJam.PerfTests.Metrics.IStoredMetricValue.Max\" data-throw-if-not-resolved=\"false\"></xref> values are scaled.\nUse the <xref href=\"CodeJam.PerfTests.Metrics.MetricValueHelpers\" data-throw-if-not-resolved=\"false\"></xref> to normalize them.\n"
    content.vb: ReadOnly Property Max As Double
  overload: CodeJam.PerfTests.Metrics.IStoredMetricValue.Max*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: CodeJam.PerfTests.Metrics.IStoredMetricValue.UnitOfMeasurement
  commentId: P:CodeJam.PerfTests.Metrics.IStoredMetricValue.UnitOfMeasurement
  id: UnitOfMeasurement
  parent: CodeJam.PerfTests.Metrics.IStoredMetricValue
  langs:
  - csharp
  - vb
  name: UnitOfMeasurement
  nameWithType: IStoredMetricValue.UnitOfMeasurement
  fullName: CodeJam.PerfTests.Metrics.IStoredMetricValue.UnitOfMeasurement
  type: Property
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricAttributeBase]/IStoredMetricValue.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: UnitOfMeasurement
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricAttributeBase]/IStoredMetricValue.cs
    startLine: 38
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: Gets enum value for the measurement unit.
  example: []
  syntax:
    content: Enum UnitOfMeasurement { get; }
    parameters: []
    return:
      type: System.Enum
      description: The enum value for the measurement unit.
    content.vb: 'ReadOnly Property UnitOfMeasurement As '
  overload: CodeJam.PerfTests.Metrics.IStoredMetricValue.UnitOfMeasurement*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: CodeJam.PerfTests.Metrics
  commentId: N:CodeJam.PerfTests.Metrics
  isExternal: false
  name: CodeJam.PerfTests.Metrics
  nameWithType: CodeJam.PerfTests.Metrics
  fullName: CodeJam.PerfTests.Metrics
- uid: CodeJam.PerfTests.Metrics.IStoredMetricValue.MetricAttributeType*
  commentId: Overload:CodeJam.PerfTests.Metrics.IStoredMetricValue.MetricAttributeType
  isExternal: false
  name: MetricAttributeType
  nameWithType: IStoredMetricValue.MetricAttributeType
  fullName: CodeJam.PerfTests.Metrics.IStoredMetricValue.MetricAttributeType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Double.NaN
  commentId: F:System.Double.NaN
- uid: CodeJam.PerfTests.Metrics.IStoredMetricValue.UnitOfMeasurement
  commentId: P:CodeJam.PerfTests.Metrics.IStoredMetricValue.UnitOfMeasurement
  parent: CodeJam.PerfTests.Metrics.IStoredMetricValue
  isExternal: false
  name: UnitOfMeasurement
  nameWithType: IStoredMetricValue.UnitOfMeasurement
  fullName: CodeJam.PerfTests.Metrics.IStoredMetricValue.UnitOfMeasurement
- uid: CodeJam.PerfTests.Metrics.IStoredMetricValue.Min
  commentId: P:CodeJam.PerfTests.Metrics.IStoredMetricValue.Min
  parent: CodeJam.PerfTests.Metrics.IStoredMetricValue
  isExternal: false
  name: Min
  nameWithType: IStoredMetricValue.Min
  fullName: CodeJam.PerfTests.Metrics.IStoredMetricValue.Min
- uid: CodeJam.PerfTests.Metrics.IStoredMetricValue.Max
  commentId: P:CodeJam.PerfTests.Metrics.IStoredMetricValue.Max
  parent: CodeJam.PerfTests.Metrics.IStoredMetricValue
  isExternal: false
  name: Max
  nameWithType: IStoredMetricValue.Max
  fullName: CodeJam.PerfTests.Metrics.IStoredMetricValue.Max
- uid: CodeJam.PerfTests.Metrics.MetricValueHelpers
  commentId: T:CodeJam.PerfTests.Metrics.MetricValueHelpers
  parent: CodeJam.PerfTests.Metrics
  isExternal: false
  name: MetricValueHelpers
  nameWithType: MetricValueHelpers
  fullName: CodeJam.PerfTests.Metrics.MetricValueHelpers
- uid: System.Double.NegativeInfinity
  commentId: F:System.Double.NegativeInfinity
- uid: CodeJam.PerfTests.Metrics.IStoredMetricValue.Min*
  commentId: Overload:CodeJam.PerfTests.Metrics.IStoredMetricValue.Min
  isExternal: false
  name: Min
  nameWithType: IStoredMetricValue.Min
  fullName: CodeJam.PerfTests.Metrics.IStoredMetricValue.Min
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: CodeJam.PerfTests.Metrics.IStoredMetricValue
  commentId: T:CodeJam.PerfTests.Metrics.IStoredMetricValue
  parent: CodeJam.PerfTests.Metrics
  isExternal: false
  name: IStoredMetricValue
  nameWithType: IStoredMetricValue
  fullName: CodeJam.PerfTests.Metrics.IStoredMetricValue
- uid: System.Double.PositiveInfinity
  commentId: F:System.Double.PositiveInfinity
- uid: CodeJam.PerfTests.Metrics.IStoredMetricValue.Max*
  commentId: Overload:CodeJam.PerfTests.Metrics.IStoredMetricValue.Max
  isExternal: false
  name: Max
  nameWithType: IStoredMetricValue.Max
  fullName: CodeJam.PerfTests.Metrics.IStoredMetricValue.Max
- uid: CodeJam.PerfTests.Metrics.IStoredMetricValue.UnitOfMeasurement*
  commentId: Overload:CodeJam.PerfTests.Metrics.IStoredMetricValue.UnitOfMeasurement
  isExternal: false
  name: UnitOfMeasurement
  nameWithType: IStoredMetricValue.UnitOfMeasurement
  fullName: CodeJam.PerfTests.Metrics.IStoredMetricValue.UnitOfMeasurement
- uid: System.Enum
  commentId: T:System.Enum
  parent: System
  isExternal: true
  name: Enum
  nameWithType: Enum
  fullName: System.Enum
