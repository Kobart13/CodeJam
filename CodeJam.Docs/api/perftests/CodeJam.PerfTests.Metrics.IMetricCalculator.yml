### YamlMime:ManagedReference
items:
- uid: CodeJam.PerfTests.Metrics.IMetricCalculator
  commentId: T:CodeJam.PerfTests.Metrics.IMetricCalculator
  id: IMetricCalculator
  parent: CodeJam.PerfTests.Metrics
  children:
  - CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetActualValues(System.Double[])
  - CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetLimitValues(System.Double[])
  - CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetMeanValue(System.Double[])
  - CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeActualValues(System.Double[],System.Double[])
  - CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeLimitValues(System.Double[],System.Double[])
  - CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeMeanValue(System.Double[],System.Double[])
  - CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeVariance(System.Double[],System.Double[])
  - CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetVariance(System.Double[])
  langs:
  - csharp
  - vb
  name: IMetricCalculator
  nameWithType: IMetricCalculator
  fullName: CodeJam.PerfTests.Metrics.IMetricCalculator
  type: Interface
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricCalculator]/IMetricCalculator.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: IMetricCalculator
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricCalculator]/IMetricCalculator.cs
    startLine: 9
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: "\nHelper type that allows to reuse statistic calculation logic across different implementations\n"
  example: []
  syntax:
    content: public interface IMetricCalculator
    content.vb: Public Interface IMetricCalculator
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetMeanValue(System.Double[])
  commentId: M:CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetMeanValue(System.Double[])
  id: TryGetMeanValue(System.Double[])
  parent: CodeJam.PerfTests.Metrics.IMetricCalculator
  langs:
  - csharp
  - vb
  name: TryGetMeanValue(Double[])
  nameWithType: IMetricCalculator.TryGetMeanValue(Double[])
  fullName: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetMeanValue(System.Double[])
  type: Method
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricCalculator]/IMetricCalculator.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: TryGetMeanValue
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricCalculator]/IMetricCalculator.cs
    startLine: 14
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: Gets actual value for the set of values.
  example: []
  syntax:
    content: double ? TryGetMeanValue(double[] values)
    parameters:
    - id: values
      type: System.Double[]
      description: Set of values.
    return:
      type: System.Nullable{System.Double}
      description: Actual value for the set of values or <code>null</code> if none.
    content.vb: Function TryGetMeanValue(values As Double()) As Double?
  overload: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetMeanValue*
  nameWithType.vb: IMetricCalculator.TryGetMeanValue(Double())
  fullName.vb: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetMeanValue(System.Double())
  name.vb: TryGetMeanValue(Double())
- uid: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeMeanValue(System.Double[],System.Double[])
  commentId: M:CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeMeanValue(System.Double[],System.Double[])
  id: TryGetRelativeMeanValue(System.Double[],System.Double[])
  parent: CodeJam.PerfTests.Metrics.IMetricCalculator
  langs:
  - csharp
  - vb
  name: TryGetRelativeMeanValue(Double[], Double[])
  nameWithType: IMetricCalculator.TryGetRelativeMeanValue(Double[], Double[])
  fullName: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeMeanValue(System.Double[], System.Double[])
  type: Method
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricCalculator]/IMetricCalculator.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: TryGetRelativeMeanValue
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricCalculator]/IMetricCalculator.cs
    startLine: 21
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: Gets actual value for the set of values (relative metric).
  example: []
  syntax:
    content: double ? TryGetRelativeMeanValue(double[] values, double[] baselineValues)
    parameters:
    - id: values
      type: System.Double[]
      description: Set of values.
    - id: baselineValues
      type: System.Double[]
      description: The baseline values.
    return:
      type: System.Nullable{System.Double}
      description: Actual value for the set of values or <code>null</code> if none.
    content.vb: Function TryGetRelativeMeanValue(values As Double(), baselineValues As Double()) As Double?
  overload: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeMeanValue*
  nameWithType.vb: IMetricCalculator.TryGetRelativeMeanValue(Double(), Double())
  fullName.vb: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeMeanValue(System.Double(), System.Double())
  name.vb: TryGetRelativeMeanValue(Double(), Double())
- uid: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetVariance(System.Double[])
  commentId: M:CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetVariance(System.Double[])
  id: TryGetVariance(System.Double[])
  parent: CodeJam.PerfTests.Metrics.IMetricCalculator
  langs:
  - csharp
  - vb
  name: TryGetVariance(Double[])
  nameWithType: IMetricCalculator.TryGetVariance(Double[])
  fullName: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetVariance(System.Double[])
  type: Method
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricCalculator]/IMetricCalculator.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: TryGetVariance
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricCalculator]/IMetricCalculator.cs
    startLine: 27
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: Gets variance for the set of values.
  example: []
  syntax:
    content: double ? TryGetVariance(double[] values)
    parameters:
    - id: values
      type: System.Double[]
      description: Set of values.
    return:
      type: System.Nullable{System.Double}
      description: Variance for the set of values or <code>null</code> if none.
    content.vb: Function TryGetVariance(values As Double()) As Double?
  overload: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetVariance*
  nameWithType.vb: IMetricCalculator.TryGetVariance(Double())
  fullName.vb: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetVariance(System.Double())
  name.vb: TryGetVariance(Double())
- uid: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeVariance(System.Double[],System.Double[])
  commentId: M:CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeVariance(System.Double[],System.Double[])
  id: TryGetRelativeVariance(System.Double[],System.Double[])
  parent: CodeJam.PerfTests.Metrics.IMetricCalculator
  langs:
  - csharp
  - vb
  name: TryGetRelativeVariance(Double[], Double[])
  nameWithType: IMetricCalculator.TryGetRelativeVariance(Double[], Double[])
  fullName: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeVariance(System.Double[], System.Double[])
  type: Method
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricCalculator]/IMetricCalculator.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: TryGetRelativeVariance
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricCalculator]/IMetricCalculator.cs
    startLine: 34
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: Gets variance for the set of values (relative metric).
  example: []
  syntax:
    content: double ? TryGetRelativeVariance(double[] values, double[] baselineValues)
    parameters:
    - id: values
      type: System.Double[]
      description: Set of values.
    - id: baselineValues
      type: System.Double[]
      description: The baseline values.
    return:
      type: System.Nullable{System.Double}
      description: Variance for the set of values or <code>null</code> if none.
    content.vb: Function TryGetRelativeVariance(values As Double(), baselineValues As Double()) As Double?
  overload: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeVariance*
  nameWithType.vb: IMetricCalculator.TryGetRelativeVariance(Double(), Double())
  fullName.vb: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeVariance(System.Double(), System.Double())
  name.vb: TryGetRelativeVariance(Double(), Double())
- uid: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetActualValues(System.Double[])
  commentId: M:CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetActualValues(System.Double[])
  id: TryGetActualValues(System.Double[])
  parent: CodeJam.PerfTests.Metrics.IMetricCalculator
  langs:
  - csharp
  - vb
  name: TryGetActualValues(Double[])
  nameWithType: IMetricCalculator.TryGetActualValues(Double[])
  fullName: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetActualValues(System.Double[])
  type: Method
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricCalculator]/IMetricCalculator.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: TryGetActualValues
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricCalculator]/IMetricCalculator.cs
    startLine: 40
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: Gets actual values range for the set of values.
  example: []
  syntax:
    content: MetricRange TryGetActualValues(double[] values)
    parameters:
    - id: values
      type: System.Double[]
      description: Set of values.
    return:
      type: CodeJam.PerfTests.Metrics.MetricRange
      description: Actual values range for for the set of values (or empty range if none).
    content.vb: Function TryGetActualValues(values As Double()) As MetricRange
  overload: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetActualValues*
  nameWithType.vb: IMetricCalculator.TryGetActualValues(Double())
  fullName.vb: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetActualValues(System.Double())
  name.vb: TryGetActualValues(Double())
- uid: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeActualValues(System.Double[],System.Double[])
  commentId: M:CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeActualValues(System.Double[],System.Double[])
  id: TryGetRelativeActualValues(System.Double[],System.Double[])
  parent: CodeJam.PerfTests.Metrics.IMetricCalculator
  langs:
  - csharp
  - vb
  name: TryGetRelativeActualValues(Double[], Double[])
  nameWithType: IMetricCalculator.TryGetRelativeActualValues(Double[], Double[])
  fullName: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeActualValues(System.Double[], System.Double[])
  type: Method
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricCalculator]/IMetricCalculator.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: TryGetRelativeActualValues
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricCalculator]/IMetricCalculator.cs
    startLine: 47
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: Gets actual values range for the set of values (relative metric).
  example: []
  syntax:
    content: MetricRange TryGetRelativeActualValues(double[] values, double[] baselineValues)
    parameters:
    - id: values
      type: System.Double[]
      description: Set of values.
    - id: baselineValues
      type: System.Double[]
      description: The baseline values.
    return:
      type: CodeJam.PerfTests.Metrics.MetricRange
      description: Actual values range for the set of values (or empty range if none).
    content.vb: Function TryGetRelativeActualValues(values As Double(), baselineValues As Double()) As MetricRange
  overload: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeActualValues*
  nameWithType.vb: IMetricCalculator.TryGetRelativeActualValues(Double(), Double())
  fullName.vb: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeActualValues(System.Double(), System.Double())
  name.vb: TryGetRelativeActualValues(Double(), Double())
- uid: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetLimitValues(System.Double[])
  commentId: M:CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetLimitValues(System.Double[])
  id: TryGetLimitValues(System.Double[])
  parent: CodeJam.PerfTests.Metrics.IMetricCalculator
  langs:
  - csharp
  - vb
  name: TryGetLimitValues(Double[])
  nameWithType: IMetricCalculator.TryGetLimitValues(Double[])
  fullName: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetLimitValues(System.Double[])
  type: Method
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricCalculator]/IMetricCalculator.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: TryGetLimitValues
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricCalculator]/IMetricCalculator.cs
    startLine: 53
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: Gets expected limits range for the set of values.
  example: []
  syntax:
    content: MetricRange TryGetLimitValues(double[] values)
    parameters:
    - id: values
      type: System.Double[]
      description: Set of values.
    return:
      type: CodeJam.PerfTests.Metrics.MetricRange
      description: Limit values range for the set of values (or empty range if none).
    content.vb: Function TryGetLimitValues(values As Double()) As MetricRange
  overload: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetLimitValues*
  nameWithType.vb: IMetricCalculator.TryGetLimitValues(Double())
  fullName.vb: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetLimitValues(System.Double())
  name.vb: TryGetLimitValues(Double())
- uid: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeLimitValues(System.Double[],System.Double[])
  commentId: M:CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeLimitValues(System.Double[],System.Double[])
  id: TryGetRelativeLimitValues(System.Double[],System.Double[])
  parent: CodeJam.PerfTests.Metrics.IMetricCalculator
  langs:
  - csharp
  - vb
  name: TryGetRelativeLimitValues(Double[], Double[])
  nameWithType: IMetricCalculator.TryGetRelativeLimitValues(Double[], Double[])
  fullName: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeLimitValues(System.Double[], System.Double[])
  type: Method
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricCalculator]/IMetricCalculator.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: TryGetRelativeLimitValues
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricCalculator]/IMetricCalculator.cs
    startLine: 60
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: Gets expected limits range for the set of values (relative metric).
  example: []
  syntax:
    content: MetricRange TryGetRelativeLimitValues(double[] values, double[] baselineValues)
    parameters:
    - id: values
      type: System.Double[]
      description: Set of values.
    - id: baselineValues
      type: System.Double[]
      description: The baseline values.
    return:
      type: CodeJam.PerfTests.Metrics.MetricRange
      description: Limit values range for the set of values (or empty range if none).
    content.vb: Function TryGetRelativeLimitValues(values As Double(), baselineValues As Double()) As MetricRange
  overload: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeLimitValues*
  nameWithType.vb: IMetricCalculator.TryGetRelativeLimitValues(Double(), Double())
  fullName.vb: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeLimitValues(System.Double(), System.Double())
  name.vb: TryGetRelativeLimitValues(Double(), Double())
references:
- uid: CodeJam.PerfTests.Metrics
  commentId: N:CodeJam.PerfTests.Metrics
  isExternal: false
  name: CodeJam.PerfTests.Metrics
  nameWithType: CodeJam.PerfTests.Metrics
  fullName: CodeJam.PerfTests.Metrics
- uid: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetMeanValue*
  commentId: Overload:CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetMeanValue
  isExternal: false
  name: TryGetMeanValue
  nameWithType: IMetricCalculator.TryGetMeanValue
  fullName: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetMeanValue
- uid: System.Double[]
  name: Double[]
  nameWithType: Double[]
  fullName: System.Double[]
  nameWithType.vb: Double()
  fullName.vb: System.Double()
  name.vb: Double()
  spec.csharp:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Nullable{System.Double}
  commentId: T:System.Nullable{System.Double}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Double>
  nameWithType: Nullable<Double>
  fullName: System.Nullable<System.Double>
  nameWithType.vb: Nullable(Of Double)
  fullName.vb: System.Nullable(Of System.Double)
  name.vb: Nullable(Of Double)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeMeanValue*
  commentId: Overload:CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeMeanValue
  isExternal: false
  name: TryGetRelativeMeanValue
  nameWithType: IMetricCalculator.TryGetRelativeMeanValue
  fullName: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeMeanValue
- uid: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetVariance*
  commentId: Overload:CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetVariance
  isExternal: false
  name: TryGetVariance
  nameWithType: IMetricCalculator.TryGetVariance
  fullName: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetVariance
- uid: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeVariance*
  commentId: Overload:CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeVariance
  isExternal: false
  name: TryGetRelativeVariance
  nameWithType: IMetricCalculator.TryGetRelativeVariance
  fullName: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeVariance
- uid: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetActualValues*
  commentId: Overload:CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetActualValues
  isExternal: false
  name: TryGetActualValues
  nameWithType: IMetricCalculator.TryGetActualValues
  fullName: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetActualValues
- uid: CodeJam.PerfTests.Metrics.MetricRange
  commentId: T:CodeJam.PerfTests.Metrics.MetricRange
  parent: CodeJam.PerfTests.Metrics
  isExternal: false
  name: MetricRange
  nameWithType: MetricRange
  fullName: CodeJam.PerfTests.Metrics.MetricRange
- uid: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeActualValues*
  commentId: Overload:CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeActualValues
  isExternal: false
  name: TryGetRelativeActualValues
  nameWithType: IMetricCalculator.TryGetRelativeActualValues
  fullName: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeActualValues
- uid: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetLimitValues*
  commentId: Overload:CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetLimitValues
  isExternal: false
  name: TryGetLimitValues
  nameWithType: IMetricCalculator.TryGetLimitValues
  fullName: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetLimitValues
- uid: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeLimitValues*
  commentId: Overload:CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeLimitValues
  isExternal: false
  name: TryGetRelativeLimitValues
  nameWithType: IMetricCalculator.TryGetRelativeLimitValues
  fullName: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeLimitValues
