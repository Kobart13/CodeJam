### YamlMime:ManagedReference
items:
- uid: BenchmarkDotNet.Configs.ReadOnlyConfig
  commentId: T:BenchmarkDotNet.Configs.ReadOnlyConfig
  id: ReadOnlyConfig
  parent: BenchmarkDotNet.Configs
  children:
  - BenchmarkDotNet.Configs.ReadOnlyConfig.#ctor(BenchmarkDotNet.Configs.IConfig)
  - BenchmarkDotNet.Configs.ReadOnlyConfig.GetAnalysers
  - BenchmarkDotNet.Configs.ReadOnlyConfig.GetColumnProviders
  - BenchmarkDotNet.Configs.ReadOnlyConfig.GetDiagnosers
  - BenchmarkDotNet.Configs.ReadOnlyConfig.GetExporters
  - BenchmarkDotNet.Configs.ReadOnlyConfig.GetFilters
  - BenchmarkDotNet.Configs.ReadOnlyConfig.GetHardwareCounters
  - BenchmarkDotNet.Configs.ReadOnlyConfig.GetJobs
  - BenchmarkDotNet.Configs.ReadOnlyConfig.GetLoggers
  - BenchmarkDotNet.Configs.ReadOnlyConfig.GetOrderProvider
  - BenchmarkDotNet.Configs.ReadOnlyConfig.GetSummaryStyle
  - BenchmarkDotNet.Configs.ReadOnlyConfig.GetValidators
  - BenchmarkDotNet.Configs.ReadOnlyConfig.KeepBenchmarkFiles
  - BenchmarkDotNet.Configs.ReadOnlyConfig.UnionRule
  langs:
  - csharp
  - vb
  name: ReadOnlyConfig
  nameWithType: ReadOnlyConfig
  fullName: BenchmarkDotNet.Configs.ReadOnlyConfig
  type: Class
  source:
    remote:
      path: PerfTests/src/[L0_PortToBenchmerkDotNet]/Configs/ReadOnlyConfig.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: ReadOnlyConfig
    path: ../PerfTests/src/[L0_PortToBenchmerkDotNet]/Configs/ReadOnlyConfig.cs
    startLine: 22
  assemblies:
  - CodeJam.PerfTests
  namespace: BenchmarkDotNet.Configs
  summary: Wrapper class for readonly config.
  example: []
  syntax:
    content: 'public class ReadOnlyConfig : IConfig'
    content.vb: >-
      Public Class ReadOnlyConfig
          Implements IConfig
  seealso:
  - linkId: BenchmarkDotNet.Configs.IConfig
    commentId: T:BenchmarkDotNet.Configs.IConfig
  inheritance:
  - System.Object
  derivedClasses:
  - CodeJam.PerfTests.Configs.ReadOnlyCompetitionConfig
  implements:
  - BenchmarkDotNet.Configs.IConfig
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - BenchmarkDotNet.Configs.IConfig.BenchmarkDotNet.Helpers.BenchmarkHelpers.AsReadOnly
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: BenchmarkDotNet.Configs.ReadOnlyConfig.#ctor(BenchmarkDotNet.Configs.IConfig)
  commentId: M:BenchmarkDotNet.Configs.ReadOnlyConfig.#ctor(BenchmarkDotNet.Configs.IConfig)
  id: '#ctor(BenchmarkDotNet.Configs.IConfig)'
  parent: BenchmarkDotNet.Configs.ReadOnlyConfig
  langs:
  - csharp
  - vb
  name: ReadOnlyConfig(IConfig)
  nameWithType: ReadOnlyConfig.ReadOnlyConfig(IConfig)
  fullName: BenchmarkDotNet.Configs.ReadOnlyConfig.ReadOnlyConfig(BenchmarkDotNet.Configs.IConfig)
  type: Constructor
  source:
    remote:
      path: PerfTests/src/[L0_PortToBenchmerkDotNet]/Configs/ReadOnlyConfig.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: .ctor
    path: ../PerfTests/src/[L0_PortToBenchmerkDotNet]/Configs/ReadOnlyConfig.cs
    startLine: 30
  assemblies:
  - CodeJam.PerfTests
  namespace: BenchmarkDotNet.Configs
  summary: Initializes a new instance of the <xref href="BenchmarkDotNet.Configs.ReadOnlyConfig" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public ReadOnlyConfig(IConfig config)
    parameters:
    - id: config
      type: BenchmarkDotNet.Configs.IConfig
      description: The config to wrap.
    content.vb: Public Sub New(config As IConfig)
  overload: BenchmarkDotNet.Configs.ReadOnlyConfig.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BenchmarkDotNet.Configs.ReadOnlyConfig.GetColumnProviders
  commentId: M:BenchmarkDotNet.Configs.ReadOnlyConfig.GetColumnProviders
  id: GetColumnProviders
  parent: BenchmarkDotNet.Configs.ReadOnlyConfig
  langs:
  - csharp
  - vb
  name: GetColumnProviders()
  nameWithType: ReadOnlyConfig.GetColumnProviders()
  fullName: BenchmarkDotNet.Configs.ReadOnlyConfig.GetColumnProviders()
  type: Method
  source:
    remote:
      path: PerfTests/src/[L0_PortToBenchmerkDotNet]/Configs/ReadOnlyConfig.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: GetColumnProviders
    path: ../PerfTests/src/[L0_PortToBenchmerkDotNet]/Configs/ReadOnlyConfig.cs
    startLine: 42
  assemblies:
  - CodeJam.PerfTests
  namespace: BenchmarkDotNet.Configs
  summary: Get benchmark column providers.
  example: []
  syntax:
    content: public IEnumerable<IColumnProvider> GetColumnProviders()
    return:
      type: System.Collections.Generic.IEnumerable{BenchmarkDotNet.Columns.IColumnProvider}
      description: Benchmark column columns.
    content.vb: Public Function GetColumnProviders As IEnumerable(Of IColumnProvider)
  overload: BenchmarkDotNet.Configs.ReadOnlyConfig.GetColumnProviders*
  implements:
  - BenchmarkDotNet.Configs.IConfig.GetColumnProviders
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BenchmarkDotNet.Configs.ReadOnlyConfig.GetExporters
  commentId: M:BenchmarkDotNet.Configs.ReadOnlyConfig.GetExporters
  id: GetExporters
  parent: BenchmarkDotNet.Configs.ReadOnlyConfig
  langs:
  - csharp
  - vb
  name: GetExporters()
  nameWithType: ReadOnlyConfig.GetExporters()
  fullName: BenchmarkDotNet.Configs.ReadOnlyConfig.GetExporters()
  type: Method
  source:
    remote:
      path: PerfTests/src/[L0_PortToBenchmerkDotNet]/Configs/ReadOnlyConfig.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: GetExporters
    path: ../PerfTests/src/[L0_PortToBenchmerkDotNet]/Configs/ReadOnlyConfig.cs
    startLine: 46
  assemblies:
  - CodeJam.PerfTests
  namespace: BenchmarkDotNet.Configs
  summary: Get benchmark exporters.
  example: []
  syntax:
    content: public IEnumerable<IExporter> GetExporters()
    return:
      type: System.Collections.Generic.IEnumerable{BenchmarkDotNet.Exporters.IExporter}
      description: Benchmark exporters.
    content.vb: Public Function GetExporters As IEnumerable(Of IExporter)
  overload: BenchmarkDotNet.Configs.ReadOnlyConfig.GetExporters*
  implements:
  - BenchmarkDotNet.Configs.IConfig.GetExporters
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BenchmarkDotNet.Configs.ReadOnlyConfig.GetLoggers
  commentId: M:BenchmarkDotNet.Configs.ReadOnlyConfig.GetLoggers
  id: GetLoggers
  parent: BenchmarkDotNet.Configs.ReadOnlyConfig
  langs:
  - csharp
  - vb
  name: GetLoggers()
  nameWithType: ReadOnlyConfig.GetLoggers()
  fullName: BenchmarkDotNet.Configs.ReadOnlyConfig.GetLoggers()
  type: Method
  source:
    remote:
      path: PerfTests/src/[L0_PortToBenchmerkDotNet]/Configs/ReadOnlyConfig.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: GetLoggers
    path: ../PerfTests/src/[L0_PortToBenchmerkDotNet]/Configs/ReadOnlyConfig.cs
    startLine: 50
  assemblies:
  - CodeJam.PerfTests
  namespace: BenchmarkDotNet.Configs
  summary: Get benchmark loggers.
  example: []
  syntax:
    content: public IEnumerable<ILogger> GetLoggers()
    return:
      type: System.Collections.Generic.IEnumerable{BenchmarkDotNet.Loggers.ILogger}
      description: Benchmark loggers.
    content.vb: Public Function GetLoggers As IEnumerable(Of ILogger)
  overload: BenchmarkDotNet.Configs.ReadOnlyConfig.GetLoggers*
  implements:
  - BenchmarkDotNet.Configs.IConfig.GetLoggers
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BenchmarkDotNet.Configs.ReadOnlyConfig.GetDiagnosers
  commentId: M:BenchmarkDotNet.Configs.ReadOnlyConfig.GetDiagnosers
  id: GetDiagnosers
  parent: BenchmarkDotNet.Configs.ReadOnlyConfig
  langs:
  - csharp
  - vb
  name: GetDiagnosers()
  nameWithType: ReadOnlyConfig.GetDiagnosers()
  fullName: BenchmarkDotNet.Configs.ReadOnlyConfig.GetDiagnosers()
  type: Method
  source:
    remote:
      path: PerfTests/src/[L0_PortToBenchmerkDotNet]/Configs/ReadOnlyConfig.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: GetDiagnosers
    path: ../PerfTests/src/[L0_PortToBenchmerkDotNet]/Configs/ReadOnlyConfig.cs
    startLine: 54
  assemblies:
  - CodeJam.PerfTests
  namespace: BenchmarkDotNet.Configs
  summary: Get benchmark diagnosers.
  example: []
  syntax:
    content: public IEnumerable<IDiagnoser> GetDiagnosers()
    return:
      type: System.Collections.Generic.IEnumerable{BenchmarkDotNet.Diagnosers.IDiagnoser}
      description: Benchmark diagnosers.
    content.vb: Public Function GetDiagnosers As IEnumerable(Of IDiagnoser)
  overload: BenchmarkDotNet.Configs.ReadOnlyConfig.GetDiagnosers*
  implements:
  - BenchmarkDotNet.Configs.IConfig.GetDiagnosers
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BenchmarkDotNet.Configs.ReadOnlyConfig.GetAnalysers
  commentId: M:BenchmarkDotNet.Configs.ReadOnlyConfig.GetAnalysers
  id: GetAnalysers
  parent: BenchmarkDotNet.Configs.ReadOnlyConfig
  langs:
  - csharp
  - vb
  name: GetAnalysers()
  nameWithType: ReadOnlyConfig.GetAnalysers()
  fullName: BenchmarkDotNet.Configs.ReadOnlyConfig.GetAnalysers()
  type: Method
  source:
    remote:
      path: PerfTests/src/[L0_PortToBenchmerkDotNet]/Configs/ReadOnlyConfig.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: GetAnalysers
    path: ../PerfTests/src/[L0_PortToBenchmerkDotNet]/Configs/ReadOnlyConfig.cs
    startLine: 58
  assemblies:
  - CodeJam.PerfTests
  namespace: BenchmarkDotNet.Configs
  summary: Get benchmark analysers.
  example: []
  syntax:
    content: public IEnumerable<IAnalyser> GetAnalysers()
    return:
      type: System.Collections.Generic.IEnumerable{BenchmarkDotNet.Analysers.IAnalyser}
      description: Benchmark analysers.
    content.vb: Public Function GetAnalysers As IEnumerable(Of IAnalyser)
  overload: BenchmarkDotNet.Configs.ReadOnlyConfig.GetAnalysers*
  implements:
  - BenchmarkDotNet.Configs.IConfig.GetAnalysers
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BenchmarkDotNet.Configs.ReadOnlyConfig.GetJobs
  commentId: M:BenchmarkDotNet.Configs.ReadOnlyConfig.GetJobs
  id: GetJobs
  parent: BenchmarkDotNet.Configs.ReadOnlyConfig
  langs:
  - csharp
  - vb
  name: GetJobs()
  nameWithType: ReadOnlyConfig.GetJobs()
  fullName: BenchmarkDotNet.Configs.ReadOnlyConfig.GetJobs()
  type: Method
  source:
    remote:
      path: PerfTests/src/[L0_PortToBenchmerkDotNet]/Configs/ReadOnlyConfig.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: GetJobs
    path: ../PerfTests/src/[L0_PortToBenchmerkDotNet]/Configs/ReadOnlyConfig.cs
    startLine: 62
  assemblies:
  - CodeJam.PerfTests
  namespace: BenchmarkDotNet.Configs
  summary: Get benchmark jobs.
  example: []
  syntax:
    content: public IEnumerable<Job> GetJobs()
    return:
      type: System.Collections.Generic.IEnumerable{BenchmarkDotNet.Jobs.Job}
      description: Benchmark jobs.
    content.vb: Public Function GetJobs As IEnumerable(Of Job)
  overload: BenchmarkDotNet.Configs.ReadOnlyConfig.GetJobs*
  implements:
  - BenchmarkDotNet.Configs.IConfig.GetJobs
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BenchmarkDotNet.Configs.ReadOnlyConfig.GetValidators
  commentId: M:BenchmarkDotNet.Configs.ReadOnlyConfig.GetValidators
  id: GetValidators
  parent: BenchmarkDotNet.Configs.ReadOnlyConfig
  langs:
  - csharp
  - vb
  name: GetValidators()
  nameWithType: ReadOnlyConfig.GetValidators()
  fullName: BenchmarkDotNet.Configs.ReadOnlyConfig.GetValidators()
  type: Method
  source:
    remote:
      path: PerfTests/src/[L0_PortToBenchmerkDotNet]/Configs/ReadOnlyConfig.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: GetValidators
    path: ../PerfTests/src/[L0_PortToBenchmerkDotNet]/Configs/ReadOnlyConfig.cs
    startLine: 66
  assemblies:
  - CodeJam.PerfTests
  namespace: BenchmarkDotNet.Configs
  summary: Get benchmark validators.
  example: []
  syntax:
    content: public IEnumerable<IValidator> GetValidators()
    return:
      type: System.Collections.Generic.IEnumerable{BenchmarkDotNet.Validators.IValidator}
      description: Benchmark validators.
    content.vb: Public Function GetValidators As IEnumerable(Of IValidator)
  overload: BenchmarkDotNet.Configs.ReadOnlyConfig.GetValidators*
  implements:
  - BenchmarkDotNet.Configs.IConfig.GetValidators
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BenchmarkDotNet.Configs.ReadOnlyConfig.GetHardwareCounters
  commentId: M:BenchmarkDotNet.Configs.ReadOnlyConfig.GetHardwareCounters
  id: GetHardwareCounters
  parent: BenchmarkDotNet.Configs.ReadOnlyConfig
  langs:
  - csharp
  - vb
  name: GetHardwareCounters()
  nameWithType: ReadOnlyConfig.GetHardwareCounters()
  fullName: BenchmarkDotNet.Configs.ReadOnlyConfig.GetHardwareCounters()
  type: Method
  source:
    remote:
      path: PerfTests/src/[L0_PortToBenchmerkDotNet]/Configs/ReadOnlyConfig.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: GetHardwareCounters
    path: ../PerfTests/src/[L0_PortToBenchmerkDotNet]/Configs/ReadOnlyConfig.cs
    startLine: 70
  assemblies:
  - CodeJam.PerfTests
  namespace: BenchmarkDotNet.Configs
  summary: Gets hardware counters.
  example: []
  syntax:
    content: public IEnumerable<HardwareCounter> GetHardwareCounters()
    return:
      type: System.Collections.Generic.IEnumerable{BenchmarkDotNet.Diagnosers.HardwareCounter}
      description: Hardware counters
    content.vb: Public Function GetHardwareCounters As IEnumerable(Of HardwareCounter)
  overload: BenchmarkDotNet.Configs.ReadOnlyConfig.GetHardwareCounters*
  implements:
  - BenchmarkDotNet.Configs.IConfig.GetHardwareCounters
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BenchmarkDotNet.Configs.ReadOnlyConfig.GetFilters
  commentId: M:BenchmarkDotNet.Configs.ReadOnlyConfig.GetFilters
  id: GetFilters
  parent: BenchmarkDotNet.Configs.ReadOnlyConfig
  langs:
  - csharp
  - vb
  name: GetFilters()
  nameWithType: ReadOnlyConfig.GetFilters()
  fullName: BenchmarkDotNet.Configs.ReadOnlyConfig.GetFilters()
  type: Method
  source:
    remote:
      path: PerfTests/src/[L0_PortToBenchmerkDotNet]/Configs/ReadOnlyConfig.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: GetFilters
    path: ../PerfTests/src/[L0_PortToBenchmerkDotNet]/Configs/ReadOnlyConfig.cs
    startLine: 74
  assemblies:
  - CodeJam.PerfTests
  namespace: BenchmarkDotNet.Configs
  summary: Gets the filters.
  example: []
  syntax:
    content: public IEnumerable<IFilter> GetFilters()
    return:
      type: System.Collections.Generic.IEnumerable{BenchmarkDotNet.Filters.IFilter}
      description: Filters
    content.vb: Public Function GetFilters As IEnumerable(Of IFilter)
  overload: BenchmarkDotNet.Configs.ReadOnlyConfig.GetFilters*
  implements:
  - BenchmarkDotNet.Configs.IConfig.GetFilters
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BenchmarkDotNet.Configs.ReadOnlyConfig.GetOrderProvider
  commentId: M:BenchmarkDotNet.Configs.ReadOnlyConfig.GetOrderProvider
  id: GetOrderProvider
  parent: BenchmarkDotNet.Configs.ReadOnlyConfig
  langs:
  - csharp
  - vb
  name: GetOrderProvider()
  nameWithType: ReadOnlyConfig.GetOrderProvider()
  fullName: BenchmarkDotNet.Configs.ReadOnlyConfig.GetOrderProvider()
  type: Method
  source:
    remote:
      path: PerfTests/src/[L0_PortToBenchmerkDotNet]/Configs/ReadOnlyConfig.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: GetOrderProvider
    path: ../PerfTests/src/[L0_PortToBenchmerkDotNet]/Configs/ReadOnlyConfig.cs
    startLine: 78
  assemblies:
  - CodeJam.PerfTests
  namespace: BenchmarkDotNet.Configs
  summary: Get order provider.
  example: []
  syntax:
    content: public IOrderProvider GetOrderProvider()
    return:
      type: BenchmarkDotNet.Order.IOrderProvider
      description: Order provider.
    content.vb: Public Function GetOrderProvider As IOrderProvider
  overload: BenchmarkDotNet.Configs.ReadOnlyConfig.GetOrderProvider*
  implements:
  - BenchmarkDotNet.Configs.IConfig.GetOrderProvider
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BenchmarkDotNet.Configs.ReadOnlyConfig.GetSummaryStyle
  commentId: M:BenchmarkDotNet.Configs.ReadOnlyConfig.GetSummaryStyle
  id: GetSummaryStyle
  parent: BenchmarkDotNet.Configs.ReadOnlyConfig
  langs:
  - csharp
  - vb
  name: GetSummaryStyle()
  nameWithType: ReadOnlyConfig.GetSummaryStyle()
  fullName: BenchmarkDotNet.Configs.ReadOnlyConfig.GetSummaryStyle()
  type: Method
  source:
    remote:
      path: PerfTests/src/[L0_PortToBenchmerkDotNet]/Configs/ReadOnlyConfig.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: GetSummaryStyle
    path: ../PerfTests/src/[L0_PortToBenchmerkDotNet]/Configs/ReadOnlyConfig.cs
    startLine: 82
  assemblies:
  - CodeJam.PerfTests
  namespace: BenchmarkDotNet.Configs
  summary: Gets summary style.
  example: []
  syntax:
    content: public ISummaryStyle GetSummaryStyle()
    return:
      type: BenchmarkDotNet.Reports.ISummaryStyle
      description: Summary style
    content.vb: Public Function GetSummaryStyle As ISummaryStyle
  overload: BenchmarkDotNet.Configs.ReadOnlyConfig.GetSummaryStyle*
  implements:
  - BenchmarkDotNet.Configs.IConfig.GetSummaryStyle
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BenchmarkDotNet.Configs.ReadOnlyConfig.UnionRule
  commentId: P:BenchmarkDotNet.Configs.ReadOnlyConfig.UnionRule
  id: UnionRule
  parent: BenchmarkDotNet.Configs.ReadOnlyConfig
  langs:
  - csharp
  - vb
  name: UnionRule
  nameWithType: ReadOnlyConfig.UnionRule
  fullName: BenchmarkDotNet.Configs.ReadOnlyConfig.UnionRule
  type: Property
  source:
    remote:
      path: PerfTests/src/[L0_PortToBenchmerkDotNet]/Configs/ReadOnlyConfig.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: UnionRule
    path: ../PerfTests/src/[L0_PortToBenchmerkDotNet]/Configs/ReadOnlyConfig.cs
    startLine: 86
  assemblies:
  - CodeJam.PerfTests
  namespace: BenchmarkDotNet.Configs
  summary: Get union rule.
  example: []
  syntax:
    content: public ConfigUnionRule UnionRule { get; }
    parameters: []
    return:
      type: BenchmarkDotNet.Configs.ConfigUnionRule
      description: Union rule.
    content.vb: Public ReadOnly Property UnionRule As ConfigUnionRule
  overload: BenchmarkDotNet.Configs.ReadOnlyConfig.UnionRule*
  implements:
  - BenchmarkDotNet.Configs.IConfig.UnionRule
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BenchmarkDotNet.Configs.ReadOnlyConfig.KeepBenchmarkFiles
  commentId: P:BenchmarkDotNet.Configs.ReadOnlyConfig.KeepBenchmarkFiles
  id: KeepBenchmarkFiles
  parent: BenchmarkDotNet.Configs.ReadOnlyConfig
  langs:
  - csharp
  - vb
  name: KeepBenchmarkFiles
  nameWithType: ReadOnlyConfig.KeepBenchmarkFiles
  fullName: BenchmarkDotNet.Configs.ReadOnlyConfig.KeepBenchmarkFiles
  type: Property
  source:
    remote:
      path: PerfTests/src/[L0_PortToBenchmerkDotNet]/Configs/ReadOnlyConfig.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: KeepBenchmarkFiles
    path: ../PerfTests/src/[L0_PortToBenchmerkDotNet]/Configs/ReadOnlyConfig.cs
    startLine: 89
  assemblies:
  - CodeJam.PerfTests
  namespace: BenchmarkDotNet.Configs
  summary: Determines if all auto-generated files should be kept or removed after running benchmarks.
  example: []
  syntax:
    content: public bool KeepBenchmarkFiles { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property KeepBenchmarkFiles As Boolean
  overload: BenchmarkDotNet.Configs.ReadOnlyConfig.KeepBenchmarkFiles*
  implements:
  - BenchmarkDotNet.Configs.IConfig.KeepBenchmarkFiles
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: BenchmarkDotNet.Configs.IConfig
  commentId: T:BenchmarkDotNet.Configs.IConfig
  parent: BenchmarkDotNet.Configs
  isExternal: true
  name: IConfig
  nameWithType: IConfig
  fullName: BenchmarkDotNet.Configs.IConfig
- uid: BenchmarkDotNet.Configs
  commentId: N:BenchmarkDotNet.Configs
  isExternal: false
  name: BenchmarkDotNet.Configs
  nameWithType: BenchmarkDotNet.Configs
  fullName: BenchmarkDotNet.Configs
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BenchmarkDotNet.Configs.IConfig.BenchmarkDotNet.Helpers.BenchmarkHelpers.AsReadOnly
  commentId: M:BenchmarkDotNet.Helpers.BenchmarkHelpers.AsReadOnly(BenchmarkDotNet.Configs.IConfig)
  parent: BenchmarkDotNet.Helpers.BenchmarkHelpers
  definition: BenchmarkDotNet.Helpers.BenchmarkHelpers.AsReadOnly(BenchmarkDotNet.Configs.IConfig)
  name: AsReadOnly()
  nameWithType: BenchmarkHelpers.AsReadOnly()
  fullName: BenchmarkDotNet.Helpers.BenchmarkHelpers.AsReadOnly()
  spec.csharp:
  - uid: BenchmarkDotNet.Helpers.BenchmarkHelpers.AsReadOnly
    name: AsReadOnly
    nameWithType: BenchmarkHelpers.AsReadOnly
    fullName: BenchmarkDotNet.Helpers.BenchmarkHelpers.AsReadOnly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BenchmarkDotNet.Helpers.BenchmarkHelpers.AsReadOnly
    name: AsReadOnly
    nameWithType: BenchmarkHelpers.AsReadOnly
    fullName: BenchmarkDotNet.Helpers.BenchmarkHelpers.AsReadOnly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: BenchmarkDotNet.Helpers.BenchmarkHelpers.AsReadOnly(BenchmarkDotNet.Configs.IConfig)
  commentId: M:BenchmarkDotNet.Helpers.BenchmarkHelpers.AsReadOnly(BenchmarkDotNet.Configs.IConfig)
  isExternal: true
  name: AsReadOnly(IConfig)
  nameWithType: BenchmarkHelpers.AsReadOnly(IConfig)
  fullName: BenchmarkDotNet.Helpers.BenchmarkHelpers.AsReadOnly(BenchmarkDotNet.Configs.IConfig)
  spec.csharp:
  - uid: BenchmarkDotNet.Helpers.BenchmarkHelpers.AsReadOnly(BenchmarkDotNet.Configs.IConfig)
    name: AsReadOnly
    nameWithType: BenchmarkHelpers.AsReadOnly
    fullName: BenchmarkDotNet.Helpers.BenchmarkHelpers.AsReadOnly
  - name: (
    nameWithType: (
    fullName: (
  - uid: BenchmarkDotNet.Configs.IConfig
    name: IConfig
    nameWithType: IConfig
    fullName: BenchmarkDotNet.Configs.IConfig
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BenchmarkDotNet.Helpers.BenchmarkHelpers.AsReadOnly(BenchmarkDotNet.Configs.IConfig)
    name: AsReadOnly
    nameWithType: BenchmarkHelpers.AsReadOnly
    fullName: BenchmarkDotNet.Helpers.BenchmarkHelpers.AsReadOnly
  - name: (
    nameWithType: (
    fullName: (
  - uid: BenchmarkDotNet.Configs.IConfig
    name: IConfig
    nameWithType: IConfig
    fullName: BenchmarkDotNet.Configs.IConfig
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BenchmarkDotNet.Helpers.BenchmarkHelpers
  commentId: T:BenchmarkDotNet.Helpers.BenchmarkHelpers
  parent: BenchmarkDotNet.Helpers
  isExternal: false
  name: BenchmarkHelpers
  nameWithType: BenchmarkHelpers
  fullName: BenchmarkDotNet.Helpers.BenchmarkHelpers
- uid: BenchmarkDotNet.Helpers
  commentId: N:BenchmarkDotNet.Helpers
  isExternal: false
  name: BenchmarkDotNet.Helpers
  nameWithType: BenchmarkDotNet.Helpers
  fullName: BenchmarkDotNet.Helpers
- uid: BenchmarkDotNet.Configs.ReadOnlyConfig
  commentId: T:BenchmarkDotNet.Configs.ReadOnlyConfig
  parent: BenchmarkDotNet.Configs
  isExternal: false
  name: ReadOnlyConfig
  nameWithType: ReadOnlyConfig
  fullName: BenchmarkDotNet.Configs.ReadOnlyConfig
- uid: BenchmarkDotNet.Configs.ReadOnlyConfig.#ctor*
  commentId: Overload:BenchmarkDotNet.Configs.ReadOnlyConfig.#ctor
  isExternal: false
  name: ReadOnlyConfig
  nameWithType: ReadOnlyConfig.ReadOnlyConfig
  fullName: BenchmarkDotNet.Configs.ReadOnlyConfig.ReadOnlyConfig
- uid: BenchmarkDotNet.Configs.ReadOnlyConfig.GetColumnProviders*
  commentId: Overload:BenchmarkDotNet.Configs.ReadOnlyConfig.GetColumnProviders
  isExternal: false
  name: GetColumnProviders
  nameWithType: ReadOnlyConfig.GetColumnProviders
  fullName: BenchmarkDotNet.Configs.ReadOnlyConfig.GetColumnProviders
- uid: BenchmarkDotNet.Configs.IConfig.GetColumnProviders
  commentId: M:BenchmarkDotNet.Configs.IConfig.GetColumnProviders
  parent: BenchmarkDotNet.Configs.IConfig
  isExternal: true
  name: GetColumnProviders()
  nameWithType: IConfig.GetColumnProviders()
  fullName: BenchmarkDotNet.Configs.IConfig.GetColumnProviders()
  spec.csharp:
  - uid: BenchmarkDotNet.Configs.IConfig.GetColumnProviders
    name: GetColumnProviders
    nameWithType: IConfig.GetColumnProviders
    fullName: BenchmarkDotNet.Configs.IConfig.GetColumnProviders
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BenchmarkDotNet.Configs.IConfig.GetColumnProviders
    name: GetColumnProviders
    nameWithType: IConfig.GetColumnProviders
    fullName: BenchmarkDotNet.Configs.IConfig.GetColumnProviders
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{BenchmarkDotNet.Columns.IColumnProvider}
  commentId: T:System.Collections.Generic.IEnumerable{BenchmarkDotNet.Columns.IColumnProvider}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IColumnProvider>
  nameWithType: IEnumerable<IColumnProvider>
  fullName: System.Collections.Generic.IEnumerable<BenchmarkDotNet.Columns.IColumnProvider>
  nameWithType.vb: IEnumerable(Of IColumnProvider)
  fullName.vb: System.Collections.Generic.IEnumerable(Of BenchmarkDotNet.Columns.IColumnProvider)
  name.vb: IEnumerable(Of IColumnProvider)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BenchmarkDotNet.Columns.IColumnProvider
    name: IColumnProvider
    nameWithType: IColumnProvider
    fullName: BenchmarkDotNet.Columns.IColumnProvider
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BenchmarkDotNet.Columns.IColumnProvider
    name: IColumnProvider
    nameWithType: IColumnProvider
    fullName: BenchmarkDotNet.Columns.IColumnProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: BenchmarkDotNet.Configs.ReadOnlyConfig.GetExporters*
  commentId: Overload:BenchmarkDotNet.Configs.ReadOnlyConfig.GetExporters
  isExternal: false
  name: GetExporters
  nameWithType: ReadOnlyConfig.GetExporters
  fullName: BenchmarkDotNet.Configs.ReadOnlyConfig.GetExporters
- uid: BenchmarkDotNet.Configs.IConfig.GetExporters
  commentId: M:BenchmarkDotNet.Configs.IConfig.GetExporters
  parent: BenchmarkDotNet.Configs.IConfig
  isExternal: true
  name: GetExporters()
  nameWithType: IConfig.GetExporters()
  fullName: BenchmarkDotNet.Configs.IConfig.GetExporters()
  spec.csharp:
  - uid: BenchmarkDotNet.Configs.IConfig.GetExporters
    name: GetExporters
    nameWithType: IConfig.GetExporters
    fullName: BenchmarkDotNet.Configs.IConfig.GetExporters
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BenchmarkDotNet.Configs.IConfig.GetExporters
    name: GetExporters
    nameWithType: IConfig.GetExporters
    fullName: BenchmarkDotNet.Configs.IConfig.GetExporters
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{BenchmarkDotNet.Exporters.IExporter}
  commentId: T:System.Collections.Generic.IEnumerable{BenchmarkDotNet.Exporters.IExporter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IExporter>
  nameWithType: IEnumerable<IExporter>
  fullName: System.Collections.Generic.IEnumerable<BenchmarkDotNet.Exporters.IExporter>
  nameWithType.vb: IEnumerable(Of IExporter)
  fullName.vb: System.Collections.Generic.IEnumerable(Of BenchmarkDotNet.Exporters.IExporter)
  name.vb: IEnumerable(Of IExporter)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BenchmarkDotNet.Exporters.IExporter
    name: IExporter
    nameWithType: IExporter
    fullName: BenchmarkDotNet.Exporters.IExporter
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BenchmarkDotNet.Exporters.IExporter
    name: IExporter
    nameWithType: IExporter
    fullName: BenchmarkDotNet.Exporters.IExporter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BenchmarkDotNet.Configs.ReadOnlyConfig.GetLoggers*
  commentId: Overload:BenchmarkDotNet.Configs.ReadOnlyConfig.GetLoggers
  isExternal: false
  name: GetLoggers
  nameWithType: ReadOnlyConfig.GetLoggers
  fullName: BenchmarkDotNet.Configs.ReadOnlyConfig.GetLoggers
- uid: BenchmarkDotNet.Configs.IConfig.GetLoggers
  commentId: M:BenchmarkDotNet.Configs.IConfig.GetLoggers
  parent: BenchmarkDotNet.Configs.IConfig
  isExternal: true
  name: GetLoggers()
  nameWithType: IConfig.GetLoggers()
  fullName: BenchmarkDotNet.Configs.IConfig.GetLoggers()
  spec.csharp:
  - uid: BenchmarkDotNet.Configs.IConfig.GetLoggers
    name: GetLoggers
    nameWithType: IConfig.GetLoggers
    fullName: BenchmarkDotNet.Configs.IConfig.GetLoggers
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BenchmarkDotNet.Configs.IConfig.GetLoggers
    name: GetLoggers
    nameWithType: IConfig.GetLoggers
    fullName: BenchmarkDotNet.Configs.IConfig.GetLoggers
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{BenchmarkDotNet.Loggers.ILogger}
  commentId: T:System.Collections.Generic.IEnumerable{BenchmarkDotNet.Loggers.ILogger}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ILogger>
  nameWithType: IEnumerable<ILogger>
  fullName: System.Collections.Generic.IEnumerable<BenchmarkDotNet.Loggers.ILogger>
  nameWithType.vb: IEnumerable(Of ILogger)
  fullName.vb: System.Collections.Generic.IEnumerable(Of BenchmarkDotNet.Loggers.ILogger)
  name.vb: IEnumerable(Of ILogger)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BenchmarkDotNet.Loggers.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: BenchmarkDotNet.Loggers.ILogger
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BenchmarkDotNet.Loggers.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: BenchmarkDotNet.Loggers.ILogger
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BenchmarkDotNet.Configs.ReadOnlyConfig.GetDiagnosers*
  commentId: Overload:BenchmarkDotNet.Configs.ReadOnlyConfig.GetDiagnosers
  isExternal: false
  name: GetDiagnosers
  nameWithType: ReadOnlyConfig.GetDiagnosers
  fullName: BenchmarkDotNet.Configs.ReadOnlyConfig.GetDiagnosers
- uid: BenchmarkDotNet.Configs.IConfig.GetDiagnosers
  commentId: M:BenchmarkDotNet.Configs.IConfig.GetDiagnosers
  parent: BenchmarkDotNet.Configs.IConfig
  isExternal: true
  name: GetDiagnosers()
  nameWithType: IConfig.GetDiagnosers()
  fullName: BenchmarkDotNet.Configs.IConfig.GetDiagnosers()
  spec.csharp:
  - uid: BenchmarkDotNet.Configs.IConfig.GetDiagnosers
    name: GetDiagnosers
    nameWithType: IConfig.GetDiagnosers
    fullName: BenchmarkDotNet.Configs.IConfig.GetDiagnosers
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BenchmarkDotNet.Configs.IConfig.GetDiagnosers
    name: GetDiagnosers
    nameWithType: IConfig.GetDiagnosers
    fullName: BenchmarkDotNet.Configs.IConfig.GetDiagnosers
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{BenchmarkDotNet.Diagnosers.IDiagnoser}
  commentId: T:System.Collections.Generic.IEnumerable{BenchmarkDotNet.Diagnosers.IDiagnoser}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IDiagnoser>
  nameWithType: IEnumerable<IDiagnoser>
  fullName: System.Collections.Generic.IEnumerable<BenchmarkDotNet.Diagnosers.IDiagnoser>
  nameWithType.vb: IEnumerable(Of IDiagnoser)
  fullName.vb: System.Collections.Generic.IEnumerable(Of BenchmarkDotNet.Diagnosers.IDiagnoser)
  name.vb: IEnumerable(Of IDiagnoser)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BenchmarkDotNet.Diagnosers.IDiagnoser
    name: IDiagnoser
    nameWithType: IDiagnoser
    fullName: BenchmarkDotNet.Diagnosers.IDiagnoser
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BenchmarkDotNet.Diagnosers.IDiagnoser
    name: IDiagnoser
    nameWithType: IDiagnoser
    fullName: BenchmarkDotNet.Diagnosers.IDiagnoser
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BenchmarkDotNet.Configs.ReadOnlyConfig.GetAnalysers*
  commentId: Overload:BenchmarkDotNet.Configs.ReadOnlyConfig.GetAnalysers
  isExternal: false
  name: GetAnalysers
  nameWithType: ReadOnlyConfig.GetAnalysers
  fullName: BenchmarkDotNet.Configs.ReadOnlyConfig.GetAnalysers
- uid: BenchmarkDotNet.Configs.IConfig.GetAnalysers
  commentId: M:BenchmarkDotNet.Configs.IConfig.GetAnalysers
  parent: BenchmarkDotNet.Configs.IConfig
  isExternal: true
  name: GetAnalysers()
  nameWithType: IConfig.GetAnalysers()
  fullName: BenchmarkDotNet.Configs.IConfig.GetAnalysers()
  spec.csharp:
  - uid: BenchmarkDotNet.Configs.IConfig.GetAnalysers
    name: GetAnalysers
    nameWithType: IConfig.GetAnalysers
    fullName: BenchmarkDotNet.Configs.IConfig.GetAnalysers
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BenchmarkDotNet.Configs.IConfig.GetAnalysers
    name: GetAnalysers
    nameWithType: IConfig.GetAnalysers
    fullName: BenchmarkDotNet.Configs.IConfig.GetAnalysers
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{BenchmarkDotNet.Analysers.IAnalyser}
  commentId: T:System.Collections.Generic.IEnumerable{BenchmarkDotNet.Analysers.IAnalyser}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IAnalyser>
  nameWithType: IEnumerable<IAnalyser>
  fullName: System.Collections.Generic.IEnumerable<BenchmarkDotNet.Analysers.IAnalyser>
  nameWithType.vb: IEnumerable(Of IAnalyser)
  fullName.vb: System.Collections.Generic.IEnumerable(Of BenchmarkDotNet.Analysers.IAnalyser)
  name.vb: IEnumerable(Of IAnalyser)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BenchmarkDotNet.Analysers.IAnalyser
    name: IAnalyser
    nameWithType: IAnalyser
    fullName: BenchmarkDotNet.Analysers.IAnalyser
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BenchmarkDotNet.Analysers.IAnalyser
    name: IAnalyser
    nameWithType: IAnalyser
    fullName: BenchmarkDotNet.Analysers.IAnalyser
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BenchmarkDotNet.Configs.ReadOnlyConfig.GetJobs*
  commentId: Overload:BenchmarkDotNet.Configs.ReadOnlyConfig.GetJobs
  isExternal: false
  name: GetJobs
  nameWithType: ReadOnlyConfig.GetJobs
  fullName: BenchmarkDotNet.Configs.ReadOnlyConfig.GetJobs
- uid: BenchmarkDotNet.Configs.IConfig.GetJobs
  commentId: M:BenchmarkDotNet.Configs.IConfig.GetJobs
  parent: BenchmarkDotNet.Configs.IConfig
  isExternal: true
  name: GetJobs()
  nameWithType: IConfig.GetJobs()
  fullName: BenchmarkDotNet.Configs.IConfig.GetJobs()
  spec.csharp:
  - uid: BenchmarkDotNet.Configs.IConfig.GetJobs
    name: GetJobs
    nameWithType: IConfig.GetJobs
    fullName: BenchmarkDotNet.Configs.IConfig.GetJobs
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BenchmarkDotNet.Configs.IConfig.GetJobs
    name: GetJobs
    nameWithType: IConfig.GetJobs
    fullName: BenchmarkDotNet.Configs.IConfig.GetJobs
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{BenchmarkDotNet.Jobs.Job}
  commentId: T:System.Collections.Generic.IEnumerable{BenchmarkDotNet.Jobs.Job}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Job>
  nameWithType: IEnumerable<Job>
  fullName: System.Collections.Generic.IEnumerable<BenchmarkDotNet.Jobs.Job>
  nameWithType.vb: IEnumerable(Of Job)
  fullName.vb: System.Collections.Generic.IEnumerable(Of BenchmarkDotNet.Jobs.Job)
  name.vb: IEnumerable(Of Job)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BenchmarkDotNet.Jobs.Job
    name: Job
    nameWithType: Job
    fullName: BenchmarkDotNet.Jobs.Job
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BenchmarkDotNet.Jobs.Job
    name: Job
    nameWithType: Job
    fullName: BenchmarkDotNet.Jobs.Job
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BenchmarkDotNet.Configs.ReadOnlyConfig.GetValidators*
  commentId: Overload:BenchmarkDotNet.Configs.ReadOnlyConfig.GetValidators
  isExternal: false
  name: GetValidators
  nameWithType: ReadOnlyConfig.GetValidators
  fullName: BenchmarkDotNet.Configs.ReadOnlyConfig.GetValidators
- uid: BenchmarkDotNet.Configs.IConfig.GetValidators
  commentId: M:BenchmarkDotNet.Configs.IConfig.GetValidators
  parent: BenchmarkDotNet.Configs.IConfig
  isExternal: true
  name: GetValidators()
  nameWithType: IConfig.GetValidators()
  fullName: BenchmarkDotNet.Configs.IConfig.GetValidators()
  spec.csharp:
  - uid: BenchmarkDotNet.Configs.IConfig.GetValidators
    name: GetValidators
    nameWithType: IConfig.GetValidators
    fullName: BenchmarkDotNet.Configs.IConfig.GetValidators
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BenchmarkDotNet.Configs.IConfig.GetValidators
    name: GetValidators
    nameWithType: IConfig.GetValidators
    fullName: BenchmarkDotNet.Configs.IConfig.GetValidators
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{BenchmarkDotNet.Validators.IValidator}
  commentId: T:System.Collections.Generic.IEnumerable{BenchmarkDotNet.Validators.IValidator}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IValidator>
  nameWithType: IEnumerable<IValidator>
  fullName: System.Collections.Generic.IEnumerable<BenchmarkDotNet.Validators.IValidator>
  nameWithType.vb: IEnumerable(Of IValidator)
  fullName.vb: System.Collections.Generic.IEnumerable(Of BenchmarkDotNet.Validators.IValidator)
  name.vb: IEnumerable(Of IValidator)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BenchmarkDotNet.Validators.IValidator
    name: IValidator
    nameWithType: IValidator
    fullName: BenchmarkDotNet.Validators.IValidator
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BenchmarkDotNet.Validators.IValidator
    name: IValidator
    nameWithType: IValidator
    fullName: BenchmarkDotNet.Validators.IValidator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BenchmarkDotNet.Configs.ReadOnlyConfig.GetHardwareCounters*
  commentId: Overload:BenchmarkDotNet.Configs.ReadOnlyConfig.GetHardwareCounters
  isExternal: false
  name: GetHardwareCounters
  nameWithType: ReadOnlyConfig.GetHardwareCounters
  fullName: BenchmarkDotNet.Configs.ReadOnlyConfig.GetHardwareCounters
- uid: BenchmarkDotNet.Configs.IConfig.GetHardwareCounters
  commentId: M:BenchmarkDotNet.Configs.IConfig.GetHardwareCounters
  parent: BenchmarkDotNet.Configs.IConfig
  isExternal: true
  name: GetHardwareCounters()
  nameWithType: IConfig.GetHardwareCounters()
  fullName: BenchmarkDotNet.Configs.IConfig.GetHardwareCounters()
  spec.csharp:
  - uid: BenchmarkDotNet.Configs.IConfig.GetHardwareCounters
    name: GetHardwareCounters
    nameWithType: IConfig.GetHardwareCounters
    fullName: BenchmarkDotNet.Configs.IConfig.GetHardwareCounters
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BenchmarkDotNet.Configs.IConfig.GetHardwareCounters
    name: GetHardwareCounters
    nameWithType: IConfig.GetHardwareCounters
    fullName: BenchmarkDotNet.Configs.IConfig.GetHardwareCounters
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{BenchmarkDotNet.Diagnosers.HardwareCounter}
  commentId: T:System.Collections.Generic.IEnumerable{BenchmarkDotNet.Diagnosers.HardwareCounter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<HardwareCounter>
  nameWithType: IEnumerable<HardwareCounter>
  fullName: System.Collections.Generic.IEnumerable<BenchmarkDotNet.Diagnosers.HardwareCounter>
  nameWithType.vb: IEnumerable(Of HardwareCounter)
  fullName.vb: System.Collections.Generic.IEnumerable(Of BenchmarkDotNet.Diagnosers.HardwareCounter)
  name.vb: IEnumerable(Of HardwareCounter)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BenchmarkDotNet.Diagnosers.HardwareCounter
    name: HardwareCounter
    nameWithType: HardwareCounter
    fullName: BenchmarkDotNet.Diagnosers.HardwareCounter
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BenchmarkDotNet.Diagnosers.HardwareCounter
    name: HardwareCounter
    nameWithType: HardwareCounter
    fullName: BenchmarkDotNet.Diagnosers.HardwareCounter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BenchmarkDotNet.Configs.ReadOnlyConfig.GetFilters*
  commentId: Overload:BenchmarkDotNet.Configs.ReadOnlyConfig.GetFilters
  isExternal: false
  name: GetFilters
  nameWithType: ReadOnlyConfig.GetFilters
  fullName: BenchmarkDotNet.Configs.ReadOnlyConfig.GetFilters
- uid: BenchmarkDotNet.Configs.IConfig.GetFilters
  commentId: M:BenchmarkDotNet.Configs.IConfig.GetFilters
  parent: BenchmarkDotNet.Configs.IConfig
  isExternal: true
  name: GetFilters()
  nameWithType: IConfig.GetFilters()
  fullName: BenchmarkDotNet.Configs.IConfig.GetFilters()
  spec.csharp:
  - uid: BenchmarkDotNet.Configs.IConfig.GetFilters
    name: GetFilters
    nameWithType: IConfig.GetFilters
    fullName: BenchmarkDotNet.Configs.IConfig.GetFilters
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BenchmarkDotNet.Configs.IConfig.GetFilters
    name: GetFilters
    nameWithType: IConfig.GetFilters
    fullName: BenchmarkDotNet.Configs.IConfig.GetFilters
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{BenchmarkDotNet.Filters.IFilter}
  commentId: T:System.Collections.Generic.IEnumerable{BenchmarkDotNet.Filters.IFilter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IFilter>
  nameWithType: IEnumerable<IFilter>
  fullName: System.Collections.Generic.IEnumerable<BenchmarkDotNet.Filters.IFilter>
  nameWithType.vb: IEnumerable(Of IFilter)
  fullName.vb: System.Collections.Generic.IEnumerable(Of BenchmarkDotNet.Filters.IFilter)
  name.vb: IEnumerable(Of IFilter)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BenchmarkDotNet.Filters.IFilter
    name: IFilter
    nameWithType: IFilter
    fullName: BenchmarkDotNet.Filters.IFilter
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BenchmarkDotNet.Filters.IFilter
    name: IFilter
    nameWithType: IFilter
    fullName: BenchmarkDotNet.Filters.IFilter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BenchmarkDotNet.Configs.ReadOnlyConfig.GetOrderProvider*
  commentId: Overload:BenchmarkDotNet.Configs.ReadOnlyConfig.GetOrderProvider
  isExternal: false
  name: GetOrderProvider
  nameWithType: ReadOnlyConfig.GetOrderProvider
  fullName: BenchmarkDotNet.Configs.ReadOnlyConfig.GetOrderProvider
- uid: BenchmarkDotNet.Configs.IConfig.GetOrderProvider
  commentId: M:BenchmarkDotNet.Configs.IConfig.GetOrderProvider
  parent: BenchmarkDotNet.Configs.IConfig
  isExternal: true
  name: GetOrderProvider()
  nameWithType: IConfig.GetOrderProvider()
  fullName: BenchmarkDotNet.Configs.IConfig.GetOrderProvider()
  spec.csharp:
  - uid: BenchmarkDotNet.Configs.IConfig.GetOrderProvider
    name: GetOrderProvider
    nameWithType: IConfig.GetOrderProvider
    fullName: BenchmarkDotNet.Configs.IConfig.GetOrderProvider
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BenchmarkDotNet.Configs.IConfig.GetOrderProvider
    name: GetOrderProvider
    nameWithType: IConfig.GetOrderProvider
    fullName: BenchmarkDotNet.Configs.IConfig.GetOrderProvider
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BenchmarkDotNet.Order.IOrderProvider
  commentId: T:BenchmarkDotNet.Order.IOrderProvider
  parent: BenchmarkDotNet.Order
  isExternal: true
  name: IOrderProvider
  nameWithType: IOrderProvider
  fullName: BenchmarkDotNet.Order.IOrderProvider
- uid: BenchmarkDotNet.Order
  commentId: N:BenchmarkDotNet.Order
  isExternal: false
  name: BenchmarkDotNet.Order
  nameWithType: BenchmarkDotNet.Order
  fullName: BenchmarkDotNet.Order
- uid: BenchmarkDotNet.Configs.ReadOnlyConfig.GetSummaryStyle*
  commentId: Overload:BenchmarkDotNet.Configs.ReadOnlyConfig.GetSummaryStyle
  isExternal: false
  name: GetSummaryStyle
  nameWithType: ReadOnlyConfig.GetSummaryStyle
  fullName: BenchmarkDotNet.Configs.ReadOnlyConfig.GetSummaryStyle
- uid: BenchmarkDotNet.Configs.IConfig.GetSummaryStyle
  commentId: M:BenchmarkDotNet.Configs.IConfig.GetSummaryStyle
  parent: BenchmarkDotNet.Configs.IConfig
  isExternal: true
  name: GetSummaryStyle()
  nameWithType: IConfig.GetSummaryStyle()
  fullName: BenchmarkDotNet.Configs.IConfig.GetSummaryStyle()
  spec.csharp:
  - uid: BenchmarkDotNet.Configs.IConfig.GetSummaryStyle
    name: GetSummaryStyle
    nameWithType: IConfig.GetSummaryStyle
    fullName: BenchmarkDotNet.Configs.IConfig.GetSummaryStyle
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BenchmarkDotNet.Configs.IConfig.GetSummaryStyle
    name: GetSummaryStyle
    nameWithType: IConfig.GetSummaryStyle
    fullName: BenchmarkDotNet.Configs.IConfig.GetSummaryStyle
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BenchmarkDotNet.Reports.ISummaryStyle
  commentId: T:BenchmarkDotNet.Reports.ISummaryStyle
  parent: BenchmarkDotNet.Reports
  isExternal: true
  name: ISummaryStyle
  nameWithType: ISummaryStyle
  fullName: BenchmarkDotNet.Reports.ISummaryStyle
- uid: BenchmarkDotNet.Reports
  commentId: N:BenchmarkDotNet.Reports
  isExternal: false
  name: BenchmarkDotNet.Reports
  nameWithType: BenchmarkDotNet.Reports
  fullName: BenchmarkDotNet.Reports
- uid: BenchmarkDotNet.Configs.ReadOnlyConfig.UnionRule*
  commentId: Overload:BenchmarkDotNet.Configs.ReadOnlyConfig.UnionRule
  isExternal: false
  name: UnionRule
  nameWithType: ReadOnlyConfig.UnionRule
  fullName: BenchmarkDotNet.Configs.ReadOnlyConfig.UnionRule
- uid: BenchmarkDotNet.Configs.IConfig.UnionRule
  commentId: P:BenchmarkDotNet.Configs.IConfig.UnionRule
  parent: BenchmarkDotNet.Configs.IConfig
  isExternal: true
  name: UnionRule
  nameWithType: IConfig.UnionRule
  fullName: BenchmarkDotNet.Configs.IConfig.UnionRule
- uid: BenchmarkDotNet.Configs.ConfigUnionRule
  commentId: T:BenchmarkDotNet.Configs.ConfigUnionRule
  parent: BenchmarkDotNet.Configs
  isExternal: true
  name: ConfigUnionRule
  nameWithType: ConfigUnionRule
  fullName: BenchmarkDotNet.Configs.ConfigUnionRule
- uid: BenchmarkDotNet.Configs.ReadOnlyConfig.KeepBenchmarkFiles*
  commentId: Overload:BenchmarkDotNet.Configs.ReadOnlyConfig.KeepBenchmarkFiles
  isExternal: false
  name: KeepBenchmarkFiles
  nameWithType: ReadOnlyConfig.KeepBenchmarkFiles
  fullName: BenchmarkDotNet.Configs.ReadOnlyConfig.KeepBenchmarkFiles
- uid: BenchmarkDotNet.Configs.IConfig.KeepBenchmarkFiles
  commentId: P:BenchmarkDotNet.Configs.IConfig.KeepBenchmarkFiles
  parent: BenchmarkDotNet.Configs.IConfig
  isExternal: true
  name: KeepBenchmarkFiles
  nameWithType: IConfig.KeepBenchmarkFiles
  fullName: BenchmarkDotNet.Configs.IConfig.KeepBenchmarkFiles
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
