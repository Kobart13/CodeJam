### YamlMime:ManagedReference
items:
- uid: CodeJam.PerfTests.Metrics.MetricValuesProviderBase
  commentId: T:CodeJam.PerfTests.Metrics.MetricValuesProviderBase
  id: MetricValuesProviderBase
  parent: CodeJam.PerfTests.Metrics
  children:
  - CodeJam.PerfTests.Metrics.MetricValuesProviderBase.#ctor(CodeJam.PerfTests.Metrics.IMetricCalculator,System.Boolean)
  - CodeJam.PerfTests.Metrics.MetricValuesProviderBase.CreateColumnProvider(CodeJam.PerfTests.Metrics.MetricInfo,CodeJam.PerfTests.Metrics.MetricValueColumns)
  - CodeJam.PerfTests.Metrics.MetricValuesProviderBase.GetColumnProvider(CodeJam.PerfTests.Metrics.MetricInfo,CodeJam.PerfTests.Metrics.MetricValueColumns)
  - CodeJam.PerfTests.Metrics.MetricValuesProviderBase.GetColumnProviderOverride(CodeJam.PerfTests.Metrics.MetricInfo,CodeJam.PerfTests.Metrics.MetricValueColumns)
  - CodeJam.PerfTests.Metrics.MetricValuesProviderBase.GetDiagnosers(CodeJam.PerfTests.Metrics.MetricInfo)
  - CodeJam.PerfTests.Metrics.MetricValuesProviderBase.GetDiagnosersOverride(CodeJam.PerfTests.Metrics.MetricInfo)
  - CodeJam.PerfTests.Metrics.MetricValuesProviderBase.GetValuesFromReport(BenchmarkDotNet.Reports.BenchmarkReport,BenchmarkDotNet.Reports.Summary)
  - CodeJam.PerfTests.Metrics.MetricValuesProviderBase.MetricCalculator
  - CodeJam.PerfTests.Metrics.MetricValuesProviderBase.ResultIsRelative
  - CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetActualValues(BenchmarkDotNet.Running.Benchmark,BenchmarkDotNet.Reports.Summary)
  - CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetLimitValues(BenchmarkDotNet.Running.Benchmark,BenchmarkDotNet.Reports.Summary)
  - CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetMeanValue(BenchmarkDotNet.Running.Benchmark,BenchmarkDotNet.Reports.Summary)
  - CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetRelativeValues(BenchmarkDotNet.Running.Benchmark,BenchmarkDotNet.Reports.Summary,System.Double[]@,System.Double[]@)
  - CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetReport(BenchmarkDotNet.Running.Benchmark,BenchmarkDotNet.Reports.Summary,BenchmarkDotNet.Reports.BenchmarkReport@)
  - CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetReports(BenchmarkDotNet.Running.Benchmark,BenchmarkDotNet.Reports.Summary,BenchmarkDotNet.Reports.BenchmarkReport@,BenchmarkDotNet.Reports.BenchmarkReport@)
  - CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetValues(BenchmarkDotNet.Running.Benchmark,BenchmarkDotNet.Reports.Summary,System.Double[]@)
  - CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetVariance(BenchmarkDotNet.Running.Benchmark,BenchmarkDotNet.Reports.Summary)
  langs:
  - csharp
  - vb
  name: MetricValuesProviderBase
  nameWithType: MetricValuesProviderBase
  fullName: CodeJam.PerfTests.Metrics.MetricValuesProviderBase
  type: Class
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricValuesProvider]/MetricValuesProviderBase.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: MetricValuesProviderBase
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricValuesProvider]/MetricValuesProviderBase.cs
    startLine: 21
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: "\nBase implementation of the <xref href=\"CodeJam.PerfTests.Metrics.IMetricValuesProvider\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: 'public abstract class MetricValuesProviderBase : IMetricValuesProvider'
    content.vb: >-
      Public MustInherit Class MetricValuesProviderBase
          Implements IMetricValuesProvider
  seealso:
  - linkId: CodeJam.PerfTests.Metrics.IMetricValuesProvider
    commentId: T:CodeJam.PerfTests.Metrics.IMetricValuesProvider
  inheritance:
  - System.Object
  derivedClasses:
  - CodeJam.PerfTests.Metrics.GcMetricValuesProvider
  - CodeJam.PerfTests.Metrics.TimeMetricValuesProvider
  implements:
  - CodeJam.PerfTests.Metrics.IMetricValuesProvider
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.CreateColumnProvider(CodeJam.PerfTests.Metrics.MetricInfo,CodeJam.PerfTests.Metrics.MetricValueColumns)
  commentId: M:CodeJam.PerfTests.Metrics.MetricValuesProviderBase.CreateColumnProvider(CodeJam.PerfTests.Metrics.MetricInfo,CodeJam.PerfTests.Metrics.MetricValueColumns)
  id: CreateColumnProvider(CodeJam.PerfTests.Metrics.MetricInfo,CodeJam.PerfTests.Metrics.MetricValueColumns)
  parent: CodeJam.PerfTests.Metrics.MetricValuesProviderBase
  langs:
  - csharp
  - vb
  name: CreateColumnProvider(MetricInfo, MetricValueColumns)
  nameWithType: MetricValuesProviderBase.CreateColumnProvider(MetricInfo, MetricValueColumns)
  fullName: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.CreateColumnProvider(CodeJam.PerfTests.Metrics.MetricInfo, CodeJam.PerfTests.Metrics.MetricValueColumns)
  type: Method
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricValuesProvider]/MetricValuesProviderBase.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: CreateColumnProvider
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricValuesProvider]/MetricValuesProviderBase.cs
    startLine: 38
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: Creates the column provider for the metric columns.
  example: []
  syntax:
    content: protected static IColumnProvider CreateColumnProvider(MetricInfo metric, MetricValueColumns columns)
    parameters:
    - id: metric
      type: CodeJam.PerfTests.Metrics.MetricInfo
      description: The metric to get columns for.
    - id: columns
      type: CodeJam.PerfTests.Metrics.MetricValueColumns
      description: The columns to include.
    return:
      type: BenchmarkDotNet.Columns.IColumnProvider
      description: Column provider for the metric columns
    content.vb: Protected Shared Function CreateColumnProvider(metric As MetricInfo, columns As MetricValueColumns) As IColumnProvider
  overload: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.CreateColumnProvider*
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetReport(BenchmarkDotNet.Running.Benchmark,BenchmarkDotNet.Reports.Summary,BenchmarkDotNet.Reports.BenchmarkReport@)
  commentId: M:CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetReport(BenchmarkDotNet.Running.Benchmark,BenchmarkDotNet.Reports.Summary,BenchmarkDotNet.Reports.BenchmarkReport@)
  id: TryGetReport(BenchmarkDotNet.Running.Benchmark,BenchmarkDotNet.Reports.Summary,BenchmarkDotNet.Reports.BenchmarkReport@)
  parent: CodeJam.PerfTests.Metrics.MetricValuesProviderBase
  langs:
  - csharp
  - vb
  name: TryGetReport(Benchmark, Summary, out BenchmarkReport)
  nameWithType: MetricValuesProviderBase.TryGetReport(Benchmark, Summary, out BenchmarkReport)
  fullName: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetReport(BenchmarkDotNet.Running.Benchmark, BenchmarkDotNet.Reports.Summary, out BenchmarkDotNet.Reports.BenchmarkReport)
  type: Method
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricValuesProvider]/MetricValuesProviderBase.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: TryGetReport
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricValuesProvider]/MetricValuesProviderBase.cs
    startLine: 53
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: Gets report for the benchmark.
  example: []
  syntax:
    content: protected static bool TryGetReport(Benchmark benchmark, Summary summary, out BenchmarkReport benchmarkReport)
    parameters:
    - id: benchmark
      type: BenchmarkDotNet.Running.Benchmark
      description: The benchmark.
    - id: summary
      type: BenchmarkDotNet.Reports.Summary
      description: Summary for the run.
    - id: benchmarkReport
      type: BenchmarkDotNet.Reports.BenchmarkReport
      description: The benchmark report.
    return:
      type: System.Boolean
      description: <code>true</code> if benchmark report is available.
    content.vb: Protected Shared Function TryGetReport(benchmark As Benchmark, summary As Summary, ByRef benchmarkReport As BenchmarkReport) As Boolean
  overload: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetReport*
  nameWithType.vb: MetricValuesProviderBase.TryGetReport(Benchmark, Summary, ByRef BenchmarkReport)
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
  fullName.vb: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetReport(BenchmarkDotNet.Running.Benchmark, BenchmarkDotNet.Reports.Summary, ByRef BenchmarkDotNet.Reports.BenchmarkReport)
  name.vb: TryGetReport(Benchmark, Summary, ByRef BenchmarkReport)
- uid: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetReports(BenchmarkDotNet.Running.Benchmark,BenchmarkDotNet.Reports.Summary,BenchmarkDotNet.Reports.BenchmarkReport@,BenchmarkDotNet.Reports.BenchmarkReport@)
  commentId: M:CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetReports(BenchmarkDotNet.Running.Benchmark,BenchmarkDotNet.Reports.Summary,BenchmarkDotNet.Reports.BenchmarkReport@,BenchmarkDotNet.Reports.BenchmarkReport@)
  id: TryGetReports(BenchmarkDotNet.Running.Benchmark,BenchmarkDotNet.Reports.Summary,BenchmarkDotNet.Reports.BenchmarkReport@,BenchmarkDotNet.Reports.BenchmarkReport@)
  parent: CodeJam.PerfTests.Metrics.MetricValuesProviderBase
  langs:
  - csharp
  - vb
  name: TryGetReports(Benchmark, Summary, out BenchmarkReport, out BenchmarkReport)
  nameWithType: MetricValuesProviderBase.TryGetReports(Benchmark, Summary, out BenchmarkReport, out BenchmarkReport)
  fullName: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetReports(BenchmarkDotNet.Running.Benchmark, BenchmarkDotNet.Reports.Summary, out BenchmarkDotNet.Reports.BenchmarkReport, out BenchmarkDotNet.Reports.BenchmarkReport)
  type: Method
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricValuesProvider]/MetricValuesProviderBase.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: TryGetReports
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricValuesProvider]/MetricValuesProviderBase.cs
    startLine: 67
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: Gets reports for the benchmark and the baseline.
  example: []
  syntax:
    content: protected static bool TryGetReports(Benchmark benchmark, Summary summary, out BenchmarkReport benchmarkReport, out BenchmarkReport baselineReport)
    parameters:
    - id: benchmark
      type: BenchmarkDotNet.Running.Benchmark
      description: The benchmark.
    - id: summary
      type: BenchmarkDotNet.Reports.Summary
      description: Summary for the run.
    - id: benchmarkReport
      type: BenchmarkDotNet.Reports.BenchmarkReport
      description: The benchmark report.
    - id: baselineReport
      type: BenchmarkDotNet.Reports.BenchmarkReport
      description: The baseline report.
    return:
      type: System.Boolean
      description: <code>true</code> if both benchmark and baseline reports are available.
    content.vb: Protected Shared Function TryGetReports(benchmark As Benchmark, summary As Summary, ByRef benchmarkReport As BenchmarkReport, ByRef baselineReport As BenchmarkReport) As Boolean
  overload: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetReports*
  nameWithType.vb: MetricValuesProviderBase.TryGetReports(Benchmark, Summary, ByRef BenchmarkReport, ByRef BenchmarkReport)
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
  fullName.vb: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetReports(BenchmarkDotNet.Running.Benchmark, BenchmarkDotNet.Reports.Summary, ByRef BenchmarkDotNet.Reports.BenchmarkReport, ByRef BenchmarkDotNet.Reports.BenchmarkReport)
  name.vb: TryGetReports(Benchmark, Summary, ByRef BenchmarkReport, ByRef BenchmarkReport)
- uid: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.#ctor(CodeJam.PerfTests.Metrics.IMetricCalculator,System.Boolean)
  commentId: M:CodeJam.PerfTests.Metrics.MetricValuesProviderBase.#ctor(CodeJam.PerfTests.Metrics.IMetricCalculator,System.Boolean)
  id: '#ctor(CodeJam.PerfTests.Metrics.IMetricCalculator,System.Boolean)'
  parent: CodeJam.PerfTests.Metrics.MetricValuesProviderBase
  langs:
  - csharp
  - vb
  name: MetricValuesProviderBase(IMetricCalculator, Boolean)
  nameWithType: MetricValuesProviderBase.MetricValuesProviderBase(IMetricCalculator, Boolean)
  fullName: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.MetricValuesProviderBase(CodeJam.PerfTests.Metrics.IMetricCalculator, System.Boolean)
  type: Constructor
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricValuesProvider]/MetricValuesProviderBase.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: .ctor
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricValuesProvider]/MetricValuesProviderBase.cs
    startLine: 94
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: Initializes a new instance of the <xref href="CodeJam.PerfTests.Metrics.MetricValuesProviderBase" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: protected MetricValuesProviderBase(IMetricCalculator calculator, bool resultIsRelative)
    parameters:
    - id: calculator
      type: CodeJam.PerfTests.Metrics.IMetricCalculator
      description: The metric calculator.
    - id: resultIsRelative
      type: System.Boolean
      description: <code>true</code> if the metric is relative.
    content.vb: Protected Sub New(calculator As IMetricCalculator, resultIsRelative As Boolean)
  overload: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.MetricCalculator
  commentId: P:CodeJam.PerfTests.Metrics.MetricValuesProviderBase.MetricCalculator
  id: MetricCalculator
  parent: CodeJam.PerfTests.Metrics.MetricValuesProviderBase
  langs:
  - csharp
  - vb
  name: MetricCalculator
  nameWithType: MetricValuesProviderBase.MetricCalculator
  fullName: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.MetricCalculator
  type: Property
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricValuesProvider]/MetricValuesProviderBase.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: MetricCalculator
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricValuesProvider]/MetricValuesProviderBase.cs
    startLine: 104
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: Gets the metric calculator.
  example: []
  syntax:
    content: protected IMetricCalculator MetricCalculator { get; }
    parameters: []
    return:
      type: CodeJam.PerfTests.Metrics.IMetricCalculator
      description: The metric calculator.
    content.vb: Protected ReadOnly Property MetricCalculator As IMetricCalculator
  overload: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.MetricCalculator*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.ResultIsRelative
  commentId: P:CodeJam.PerfTests.Metrics.MetricValuesProviderBase.ResultIsRelative
  id: ResultIsRelative
  parent: CodeJam.PerfTests.Metrics.MetricValuesProviderBase
  langs:
  - csharp
  - vb
  name: ResultIsRelative
  nameWithType: MetricValuesProviderBase.ResultIsRelative
  fullName: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.ResultIsRelative
  type: Property
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricValuesProvider]/MetricValuesProviderBase.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: ResultIsRelative
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricValuesProvider]/MetricValuesProviderBase.cs
    startLine: 109
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: Gets a value indicating whether this instance is relative metric provider.
  example: []
  syntax:
    content: public bool ResultIsRelative { get; }
    parameters: []
    return:
      type: System.Boolean
      description: '<code>true</code> if this instance is relative metric provider; otherwise, <code>false</code>. '
    content.vb: Public ReadOnly Property ResultIsRelative As Boolean
  overload: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.ResultIsRelative*
  implements:
  - CodeJam.PerfTests.Metrics.IMetricValuesProvider.ResultIsRelative
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetMeanValue(BenchmarkDotNet.Running.Benchmark,BenchmarkDotNet.Reports.Summary)
  commentId: M:CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetMeanValue(BenchmarkDotNet.Running.Benchmark,BenchmarkDotNet.Reports.Summary)
  id: TryGetMeanValue(BenchmarkDotNet.Running.Benchmark,BenchmarkDotNet.Reports.Summary)
  parent: CodeJam.PerfTests.Metrics.MetricValuesProviderBase
  langs:
  - csharp
  - vb
  name: TryGetMeanValue(Benchmark, Summary)
  nameWithType: MetricValuesProviderBase.TryGetMeanValue(Benchmark, Summary)
  fullName: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetMeanValue(BenchmarkDotNet.Running.Benchmark, BenchmarkDotNet.Reports.Summary)
  type: Method
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricValuesProvider]/MetricValuesProviderBase.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: TryGetMeanValue
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricValuesProvider]/MetricValuesProviderBase.cs
    startLine: 117
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: Gets actual value for the benchmark (averaged).
  example: []
  syntax:
    content: public double ? TryGetMeanValue(Benchmark benchmark, Summary summary)
    parameters:
    - id: benchmark
      type: BenchmarkDotNet.Running.Benchmark
      description: The benchmark.
    - id: summary
      type: BenchmarkDotNet.Reports.Summary
      description: Summary for the run.
    return:
      type: System.Nullable{System.Double}
      description: Actual value for the benchmark or <code>null</code> if none.
    content.vb: Public Function TryGetMeanValue(benchmark As Benchmark, summary As Summary) As Double?
  overload: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetMeanValue*
  implements:
  - CodeJam.PerfTests.Metrics.IMetricValuesProvider.TryGetMeanValue(BenchmarkDotNet.Running.Benchmark,BenchmarkDotNet.Reports.Summary)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetVariance(BenchmarkDotNet.Running.Benchmark,BenchmarkDotNet.Reports.Summary)
  commentId: M:CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetVariance(BenchmarkDotNet.Running.Benchmark,BenchmarkDotNet.Reports.Summary)
  id: TryGetVariance(BenchmarkDotNet.Running.Benchmark,BenchmarkDotNet.Reports.Summary)
  parent: CodeJam.PerfTests.Metrics.MetricValuesProviderBase
  langs:
  - csharp
  - vb
  name: TryGetVariance(Benchmark, Summary)
  nameWithType: MetricValuesProviderBase.TryGetVariance(Benchmark, Summary)
  fullName: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetVariance(BenchmarkDotNet.Running.Benchmark, BenchmarkDotNet.Reports.Summary)
  type: Method
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricValuesProvider]/MetricValuesProviderBase.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: TryGetVariance
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricValuesProvider]/MetricValuesProviderBase.cs
    startLine: 138
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: Gets metric that describes variance of the value for the benchmark.
  example: []
  syntax:
    content: public double ? TryGetVariance(Benchmark benchmark, Summary summary)
    parameters:
    - id: benchmark
      type: BenchmarkDotNet.Running.Benchmark
      description: The benchmark.
    - id: summary
      type: BenchmarkDotNet.Reports.Summary
      description: Summary for the run.
    return:
      type: System.Nullable{System.Double}
      description: Metric that describes variance for the benchmark or <code>null</code> if none.
    content.vb: Public Function TryGetVariance(benchmark As Benchmark, summary As Summary) As Double?
  overload: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetVariance*
  implements:
  - CodeJam.PerfTests.Metrics.IMetricValuesProvider.TryGetVariance(BenchmarkDotNet.Running.Benchmark,BenchmarkDotNet.Reports.Summary)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetActualValues(BenchmarkDotNet.Running.Benchmark,BenchmarkDotNet.Reports.Summary)
  commentId: M:CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetActualValues(BenchmarkDotNet.Running.Benchmark,BenchmarkDotNet.Reports.Summary)
  id: TryGetActualValues(BenchmarkDotNet.Running.Benchmark,BenchmarkDotNet.Reports.Summary)
  parent: CodeJam.PerfTests.Metrics.MetricValuesProviderBase
  langs:
  - csharp
  - vb
  name: TryGetActualValues(Benchmark, Summary)
  nameWithType: MetricValuesProviderBase.TryGetActualValues(Benchmark, Summary)
  fullName: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetActualValues(BenchmarkDotNet.Running.Benchmark, BenchmarkDotNet.Reports.Summary)
  type: Method
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricValuesProvider]/MetricValuesProviderBase.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: TryGetActualValues
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricValuesProvider]/MetricValuesProviderBase.cs
    startLine: 159
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: Gets range that describes actual values for the benchmark.
  example: []
  syntax:
    content: public MetricRange TryGetActualValues(Benchmark benchmark, Summary summary)
    parameters:
    - id: benchmark
      type: BenchmarkDotNet.Running.Benchmark
      description: The benchmark.
    - id: summary
      type: BenchmarkDotNet.Reports.Summary
      description: Summary for the run.
    return:
      type: CodeJam.PerfTests.Metrics.MetricRange
      description: Range that describes actual values for the benchmark (or empty range if none).
    content.vb: Public Function TryGetActualValues(benchmark As Benchmark, summary As Summary) As MetricRange
  overload: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetActualValues*
  implements:
  - CodeJam.PerfTests.Metrics.IMetricValuesProvider.TryGetActualValues(BenchmarkDotNet.Running.Benchmark,BenchmarkDotNet.Reports.Summary)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetLimitValues(BenchmarkDotNet.Running.Benchmark,BenchmarkDotNet.Reports.Summary)
  commentId: M:CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetLimitValues(BenchmarkDotNet.Running.Benchmark,BenchmarkDotNet.Reports.Summary)
  id: TryGetLimitValues(BenchmarkDotNet.Running.Benchmark,BenchmarkDotNet.Reports.Summary)
  parent: CodeJam.PerfTests.Metrics.MetricValuesProviderBase
  langs:
  - csharp
  - vb
  name: TryGetLimitValues(Benchmark, Summary)
  nameWithType: MetricValuesProviderBase.TryGetLimitValues(Benchmark, Summary)
  fullName: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetLimitValues(BenchmarkDotNet.Running.Benchmark, BenchmarkDotNet.Reports.Summary)
  type: Method
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricValuesProvider]/MetricValuesProviderBase.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: TryGetLimitValues
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricValuesProvider]/MetricValuesProviderBase.cs
    startLine: 182
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: "\nGets range that describes expected limits for the benchmark. Should be wider than <xref href=\"CodeJam.PerfTests.Metrics.IMetricValuesProvider.TryGetActualValues(BenchmarkDotNet.Running.Benchmark%2cBenchmarkDotNet.Reports.Summary)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public MetricRange TryGetLimitValues(Benchmark benchmark, Summary summary)
    parameters:
    - id: benchmark
      type: BenchmarkDotNet.Running.Benchmark
      description: The benchmark.
    - id: summary
      type: BenchmarkDotNet.Reports.Summary
      description: Summary for the run.
    return:
      type: CodeJam.PerfTests.Metrics.MetricRange
      description: Range that describes expected limits for the benchmark (or empty range if none).
    content.vb: Public Function TryGetLimitValues(benchmark As Benchmark, summary As Summary) As MetricRange
  overload: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetLimitValues*
  implements:
  - CodeJam.PerfTests.Metrics.IMetricValuesProvider.TryGetLimitValues(BenchmarkDotNet.Running.Benchmark,BenchmarkDotNet.Reports.Summary)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.GetColumnProvider(CodeJam.PerfTests.Metrics.MetricInfo,CodeJam.PerfTests.Metrics.MetricValueColumns)
  commentId: M:CodeJam.PerfTests.Metrics.MetricValuesProviderBase.GetColumnProvider(CodeJam.PerfTests.Metrics.MetricInfo,CodeJam.PerfTests.Metrics.MetricValueColumns)
  id: GetColumnProvider(CodeJam.PerfTests.Metrics.MetricInfo,CodeJam.PerfTests.Metrics.MetricValueColumns)
  parent: CodeJam.PerfTests.Metrics.MetricValuesProviderBase
  langs:
  - csharp
  - vb
  name: GetColumnProvider(MetricInfo, MetricValueColumns)
  nameWithType: MetricValuesProviderBase.GetColumnProvider(MetricInfo, MetricValueColumns)
  fullName: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.GetColumnProvider(CodeJam.PerfTests.Metrics.MetricInfo, CodeJam.PerfTests.Metrics.MetricValueColumns)
  type: Method
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricValuesProvider]/MetricValuesProviderBase.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: GetColumnProvider
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricValuesProvider]/MetricValuesProviderBase.cs
    startLine: 203
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: Gets column provider for the metric values.
  example: []
  syntax:
    content: public IColumnProvider GetColumnProvider(MetricInfo metric, MetricValueColumns columns)
    parameters:
    - id: metric
      type: CodeJam.PerfTests.Metrics.MetricInfo
      description: The metric to get columns for.
    - id: columns
      type: CodeJam.PerfTests.Metrics.MetricValueColumns
      description: The columns to include.
    return:
      type: BenchmarkDotNet.Columns.IColumnProvider
      description: Column provider for the metric values
    content.vb: Public Function GetColumnProvider(metric As MetricInfo, columns As MetricValueColumns) As IColumnProvider
  overload: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.GetColumnProvider*
  implements:
  - CodeJam.PerfTests.Metrics.IMetricValuesProvider.GetColumnProvider(CodeJam.PerfTests.Metrics.MetricInfo,CodeJam.PerfTests.Metrics.MetricValueColumns)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.GetDiagnosers(CodeJam.PerfTests.Metrics.MetricInfo)
  commentId: M:CodeJam.PerfTests.Metrics.MetricValuesProviderBase.GetDiagnosers(CodeJam.PerfTests.Metrics.MetricInfo)
  id: GetDiagnosers(CodeJam.PerfTests.Metrics.MetricInfo)
  parent: CodeJam.PerfTests.Metrics.MetricValuesProviderBase
  langs:
  - csharp
  - vb
  name: GetDiagnosers(MetricInfo)
  nameWithType: MetricValuesProviderBase.GetDiagnosers(MetricInfo)
  fullName: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.GetDiagnosers(CodeJam.PerfTests.Metrics.MetricInfo)
  type: Method
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricValuesProvider]/MetricValuesProviderBase.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: GetDiagnosers
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricValuesProvider]/MetricValuesProviderBase.cs
    startLine: 217
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: Gets diagnosers the metric values.
  example: []
  syntax:
    content: public IDiagnoser[] GetDiagnosers(MetricInfo metric)
    parameters:
    - id: metric
      type: CodeJam.PerfTests.Metrics.MetricInfo
      description: The metric to get diagnosers for.
    return:
      type: BenchmarkDotNet.Diagnosers.IDiagnoser[]
      description: Diagnosers for the metric values
    content.vb: Public Function GetDiagnosers(metric As MetricInfo) As IDiagnoser()
  overload: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.GetDiagnosers*
  implements:
  - CodeJam.PerfTests.Metrics.IMetricValuesProvider.GetDiagnosers(CodeJam.PerfTests.Metrics.MetricInfo)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.GetColumnProviderOverride(CodeJam.PerfTests.Metrics.MetricInfo,CodeJam.PerfTests.Metrics.MetricValueColumns)
  commentId: M:CodeJam.PerfTests.Metrics.MetricValuesProviderBase.GetColumnProviderOverride(CodeJam.PerfTests.Metrics.MetricInfo,CodeJam.PerfTests.Metrics.MetricValueColumns)
  id: GetColumnProviderOverride(CodeJam.PerfTests.Metrics.MetricInfo,CodeJam.PerfTests.Metrics.MetricValueColumns)
  parent: CodeJam.PerfTests.Metrics.MetricValuesProviderBase
  langs:
  - csharp
  - vb
  name: GetColumnProviderOverride(MetricInfo, MetricValueColumns)
  nameWithType: MetricValuesProviderBase.GetColumnProviderOverride(MetricInfo, MetricValueColumns)
  fullName: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.GetColumnProviderOverride(CodeJam.PerfTests.Metrics.MetricInfo, CodeJam.PerfTests.Metrics.MetricValueColumns)
  type: Method
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricValuesProvider]/MetricValuesProviderBase.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: GetColumnProviderOverride
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricValuesProvider]/MetricValuesProviderBase.cs
    startLine: 233
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: Gets column provider for the metric values.
  example: []
  syntax:
    content: protected virtual IColumnProvider GetColumnProviderOverride(MetricInfo metric, MetricValueColumns columns)
    parameters:
    - id: metric
      type: CodeJam.PerfTests.Metrics.MetricInfo
      description: The metric to get columns for.
    - id: columns
      type: CodeJam.PerfTests.Metrics.MetricValueColumns
      description: The columns to include.
    return:
      type: BenchmarkDotNet.Columns.IColumnProvider
      description: Column provider for the metric values
    content.vb: Protected Overridable Function GetColumnProviderOverride(metric As MetricInfo, columns As MetricValueColumns) As IColumnProvider
  overload: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.GetColumnProviderOverride*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.GetDiagnosersOverride(CodeJam.PerfTests.Metrics.MetricInfo)
  commentId: M:CodeJam.PerfTests.Metrics.MetricValuesProviderBase.GetDiagnosersOverride(CodeJam.PerfTests.Metrics.MetricInfo)
  id: GetDiagnosersOverride(CodeJam.PerfTests.Metrics.MetricInfo)
  parent: CodeJam.PerfTests.Metrics.MetricValuesProviderBase
  langs:
  - csharp
  - vb
  name: GetDiagnosersOverride(MetricInfo)
  nameWithType: MetricValuesProviderBase.GetDiagnosersOverride(MetricInfo)
  fullName: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.GetDiagnosersOverride(CodeJam.PerfTests.Metrics.MetricInfo)
  type: Method
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricValuesProvider]/MetricValuesProviderBase.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: GetDiagnosersOverride
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricValuesProvider]/MetricValuesProviderBase.cs
    startLine: 248
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: Gets diagnosers the metric values.
  example: []
  syntax:
    content: protected abstract IDiagnoser[] GetDiagnosersOverride(MetricInfo metric)
    parameters:
    - id: metric
      type: CodeJam.PerfTests.Metrics.MetricInfo
      description: The metric to get diagnosers for.
    return:
      type: BenchmarkDotNet.Diagnosers.IDiagnoser[]
      description: Diagnosers for the metric values
    content.vb: Protected MustOverride Function GetDiagnosersOverride(metric As MetricInfo) As IDiagnoser()
  overload: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.GetDiagnosersOverride*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetValues(BenchmarkDotNet.Running.Benchmark,BenchmarkDotNet.Reports.Summary,System.Double[]@)
  commentId: M:CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetValues(BenchmarkDotNet.Running.Benchmark,BenchmarkDotNet.Reports.Summary,System.Double[]@)
  id: TryGetValues(BenchmarkDotNet.Running.Benchmark,BenchmarkDotNet.Reports.Summary,System.Double[]@)
  parent: CodeJam.PerfTests.Metrics.MetricValuesProviderBase
  langs:
  - csharp
  - vb
  name: TryGetValues(Benchmark, Summary, out Double[])
  nameWithType: MetricValuesProviderBase.TryGetValues(Benchmark, Summary, out Double[])
  fullName: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetValues(BenchmarkDotNet.Running.Benchmark, BenchmarkDotNet.Reports.Summary, out System.Double[])
  type: Method
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricValuesProvider]/MetricValuesProviderBase.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: TryGetValues
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricValuesProvider]/MetricValuesProviderBase.cs
    startLine: 255
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: Tries to get values for the relative metric.
  example: []
  syntax:
    content: protected virtual bool TryGetValues(Benchmark benchmark, Summary summary, out double[] metricValues)
    parameters:
    - id: benchmark
      type: BenchmarkDotNet.Running.Benchmark
      description: The benchmark.
    - id: summary
      type: BenchmarkDotNet.Reports.Summary
      description: The summary.
    - id: metricValues
      type: System.Double[]
      description: The metric values.
    return:
      type: System.Boolean
      description: <code>True</code> if values calculated successfully.
    content.vb: Protected Overridable Function TryGetValues(benchmark As Benchmark, summary As Summary, ByRef metricValues As Double()) As Boolean
  overload: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetValues*
  nameWithType.vb: MetricValuesProviderBase.TryGetValues(Benchmark, Summary, ByRef Double())
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetValues(BenchmarkDotNet.Running.Benchmark, BenchmarkDotNet.Reports.Summary, ByRef System.Double())
  name.vb: TryGetValues(Benchmark, Summary, ByRef Double())
- uid: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetRelativeValues(BenchmarkDotNet.Running.Benchmark,BenchmarkDotNet.Reports.Summary,System.Double[]@,System.Double[]@)
  commentId: M:CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetRelativeValues(BenchmarkDotNet.Running.Benchmark,BenchmarkDotNet.Reports.Summary,System.Double[]@,System.Double[]@)
  id: TryGetRelativeValues(BenchmarkDotNet.Running.Benchmark,BenchmarkDotNet.Reports.Summary,System.Double[]@,System.Double[]@)
  parent: CodeJam.PerfTests.Metrics.MetricValuesProviderBase
  langs:
  - csharp
  - vb
  name: TryGetRelativeValues(Benchmark, Summary, out Double[], out Double[])
  nameWithType: MetricValuesProviderBase.TryGetRelativeValues(Benchmark, Summary, out Double[], out Double[])
  fullName: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetRelativeValues(BenchmarkDotNet.Running.Benchmark, BenchmarkDotNet.Reports.Summary, out System.Double[], out System.Double[])
  type: Method
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricValuesProvider]/MetricValuesProviderBase.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: TryGetRelativeValues
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricValuesProvider]/MetricValuesProviderBase.cs
    startLine: 275
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: Tries to get values for the relative metric.
  example: []
  syntax:
    content: protected virtual bool TryGetRelativeValues(Benchmark benchmark, Summary summary, out double[] metricValues, out double[] baselineMetricValues)
    parameters:
    - id: benchmark
      type: BenchmarkDotNet.Running.Benchmark
      description: The benchmark.
    - id: summary
      type: BenchmarkDotNet.Reports.Summary
      description: The summary.
    - id: metricValues
      type: System.Double[]
      description: The metric values.
    - id: baselineMetricValues
      type: System.Double[]
      description: The baseline metric values.
    return:
      type: System.Boolean
      description: <code>True</code> if values calculated successfully.
    content.vb: Protected Overridable Function TryGetRelativeValues(benchmark As Benchmark, summary As Summary, ByRef metricValues As Double(), ByRef baselineMetricValues As Double()) As Boolean
  overload: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetRelativeValues*
  nameWithType.vb: MetricValuesProviderBase.TryGetRelativeValues(Benchmark, Summary, ByRef Double(), ByRef Double())
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetRelativeValues(BenchmarkDotNet.Running.Benchmark, BenchmarkDotNet.Reports.Summary, ByRef System.Double(), ByRef System.Double())
  name.vb: TryGetRelativeValues(Benchmark, Summary, ByRef Double(), ByRef Double())
- uid: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.GetValuesFromReport(BenchmarkDotNet.Reports.BenchmarkReport,BenchmarkDotNet.Reports.Summary)
  commentId: M:CodeJam.PerfTests.Metrics.MetricValuesProviderBase.GetValuesFromReport(BenchmarkDotNet.Reports.BenchmarkReport,BenchmarkDotNet.Reports.Summary)
  id: GetValuesFromReport(BenchmarkDotNet.Reports.BenchmarkReport,BenchmarkDotNet.Reports.Summary)
  parent: CodeJam.PerfTests.Metrics.MetricValuesProviderBase
  langs:
  - csharp
  - vb
  name: GetValuesFromReport(BenchmarkReport, Summary)
  nameWithType: MetricValuesProviderBase.GetValuesFromReport(BenchmarkReport, Summary)
  fullName: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.GetValuesFromReport(BenchmarkDotNet.Reports.BenchmarkReport, BenchmarkDotNet.Reports.Summary)
  type: Method
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricValuesProvider]/MetricValuesProviderBase.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: GetValuesFromReport
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricValuesProvider]/MetricValuesProviderBase.cs
    startLine: 299
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: Gets the values from benchmark report.
  example: []
  syntax:
    content: protected abstract double[] GetValuesFromReport(BenchmarkReport benchmarkReport, Summary summary)
    parameters:
    - id: benchmarkReport
      type: BenchmarkDotNet.Reports.BenchmarkReport
      description: The benchmark report.
    - id: summary
      type: BenchmarkDotNet.Reports.Summary
      description: The summary.
    return:
      type: System.Double[]
      description: Metric values from benchmark report
    content.vb: Protected MustOverride Function GetValuesFromReport(benchmarkReport As BenchmarkReport, summary As Summary) As Double()
  overload: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.GetValuesFromReport*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
references:
- uid: CodeJam.PerfTests.Metrics.IMetricValuesProvider
  commentId: T:CodeJam.PerfTests.Metrics.IMetricValuesProvider
  parent: CodeJam.PerfTests.Metrics
  isExternal: false
  name: IMetricValuesProvider
  nameWithType: IMetricValuesProvider
  fullName: CodeJam.PerfTests.Metrics.IMetricValuesProvider
- uid: CodeJam.PerfTests.Metrics
  commentId: N:CodeJam.PerfTests.Metrics
  isExternal: false
  name: CodeJam.PerfTests.Metrics
  nameWithType: CodeJam.PerfTests.Metrics
  fullName: CodeJam.PerfTests.Metrics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.CreateColumnProvider*
  commentId: Overload:CodeJam.PerfTests.Metrics.MetricValuesProviderBase.CreateColumnProvider
  isExternal: false
  name: CreateColumnProvider
  nameWithType: MetricValuesProviderBase.CreateColumnProvider
  fullName: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.CreateColumnProvider
- uid: CodeJam.PerfTests.Metrics.MetricInfo
  commentId: T:CodeJam.PerfTests.Metrics.MetricInfo
  parent: CodeJam.PerfTests.Metrics
  isExternal: false
  name: MetricInfo
  nameWithType: MetricInfo
  fullName: CodeJam.PerfTests.Metrics.MetricInfo
- uid: CodeJam.PerfTests.Metrics.MetricValueColumns
  commentId: T:CodeJam.PerfTests.Metrics.MetricValueColumns
  parent: CodeJam.PerfTests.Metrics
  isExternal: false
  name: MetricValueColumns
  nameWithType: MetricValueColumns
  fullName: CodeJam.PerfTests.Metrics.MetricValueColumns
- uid: BenchmarkDotNet.Columns.IColumnProvider
  commentId: T:BenchmarkDotNet.Columns.IColumnProvider
  parent: BenchmarkDotNet.Columns
  isExternal: true
  name: IColumnProvider
  nameWithType: IColumnProvider
  fullName: BenchmarkDotNet.Columns.IColumnProvider
- uid: BenchmarkDotNet.Columns
  commentId: N:BenchmarkDotNet.Columns
  isExternal: false
  name: BenchmarkDotNet.Columns
  nameWithType: BenchmarkDotNet.Columns
  fullName: BenchmarkDotNet.Columns
- uid: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetReport*
  commentId: Overload:CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetReport
  isExternal: false
  name: TryGetReport
  nameWithType: MetricValuesProviderBase.TryGetReport
  fullName: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetReport
- uid: BenchmarkDotNet.Running.Benchmark
  commentId: T:BenchmarkDotNet.Running.Benchmark
  parent: BenchmarkDotNet.Running
  isExternal: true
  name: Benchmark
  nameWithType: Benchmark
  fullName: BenchmarkDotNet.Running.Benchmark
- uid: BenchmarkDotNet.Reports.Summary
  commentId: T:BenchmarkDotNet.Reports.Summary
  parent: BenchmarkDotNet.Reports
  isExternal: true
  name: Summary
  nameWithType: Summary
  fullName: BenchmarkDotNet.Reports.Summary
- uid: BenchmarkDotNet.Reports.BenchmarkReport
  commentId: T:BenchmarkDotNet.Reports.BenchmarkReport
  parent: BenchmarkDotNet.Reports
  isExternal: true
  name: BenchmarkReport
  nameWithType: BenchmarkReport
  fullName: BenchmarkDotNet.Reports.BenchmarkReport
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: BenchmarkDotNet.Running
  commentId: N:BenchmarkDotNet.Running
  isExternal: false
  name: BenchmarkDotNet.Running
  nameWithType: BenchmarkDotNet.Running
  fullName: BenchmarkDotNet.Running
- uid: BenchmarkDotNet.Reports
  commentId: N:BenchmarkDotNet.Reports
  isExternal: false
  name: BenchmarkDotNet.Reports
  nameWithType: BenchmarkDotNet.Reports
  fullName: BenchmarkDotNet.Reports
- uid: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetReports*
  commentId: Overload:CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetReports
  isExternal: false
  name: TryGetReports
  nameWithType: MetricValuesProviderBase.TryGetReports
  fullName: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetReports
- uid: CodeJam.PerfTests.Metrics.MetricValuesProviderBase
  commentId: T:CodeJam.PerfTests.Metrics.MetricValuesProviderBase
  parent: CodeJam.PerfTests.Metrics
  isExternal: false
  name: MetricValuesProviderBase
  nameWithType: MetricValuesProviderBase
  fullName: CodeJam.PerfTests.Metrics.MetricValuesProviderBase
- uid: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.#ctor*
  commentId: Overload:CodeJam.PerfTests.Metrics.MetricValuesProviderBase.#ctor
  isExternal: false
  name: MetricValuesProviderBase
  nameWithType: MetricValuesProviderBase.MetricValuesProviderBase
  fullName: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.MetricValuesProviderBase
- uid: CodeJam.PerfTests.Metrics.IMetricCalculator
  commentId: T:CodeJam.PerfTests.Metrics.IMetricCalculator
  parent: CodeJam.PerfTests.Metrics
  isExternal: false
  name: IMetricCalculator
  nameWithType: IMetricCalculator
  fullName: CodeJam.PerfTests.Metrics.IMetricCalculator
- uid: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.MetricCalculator*
  commentId: Overload:CodeJam.PerfTests.Metrics.MetricValuesProviderBase.MetricCalculator
  isExternal: false
  name: MetricCalculator
  nameWithType: MetricValuesProviderBase.MetricCalculator
  fullName: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.MetricCalculator
- uid: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.ResultIsRelative*
  commentId: Overload:CodeJam.PerfTests.Metrics.MetricValuesProviderBase.ResultIsRelative
  isExternal: false
  name: ResultIsRelative
  nameWithType: MetricValuesProviderBase.ResultIsRelative
  fullName: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.ResultIsRelative
- uid: CodeJam.PerfTests.Metrics.IMetricValuesProvider.ResultIsRelative
  commentId: P:CodeJam.PerfTests.Metrics.IMetricValuesProvider.ResultIsRelative
  parent: CodeJam.PerfTests.Metrics.IMetricValuesProvider
  isExternal: false
  name: ResultIsRelative
  nameWithType: IMetricValuesProvider.ResultIsRelative
  fullName: CodeJam.PerfTests.Metrics.IMetricValuesProvider.ResultIsRelative
- uid: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetMeanValue*
  commentId: Overload:CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetMeanValue
  isExternal: false
  name: TryGetMeanValue
  nameWithType: MetricValuesProviderBase.TryGetMeanValue
  fullName: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetMeanValue
- uid: CodeJam.PerfTests.Metrics.IMetricValuesProvider.TryGetMeanValue(BenchmarkDotNet.Running.Benchmark,BenchmarkDotNet.Reports.Summary)
  commentId: M:CodeJam.PerfTests.Metrics.IMetricValuesProvider.TryGetMeanValue(BenchmarkDotNet.Running.Benchmark,BenchmarkDotNet.Reports.Summary)
  parent: CodeJam.PerfTests.Metrics.IMetricValuesProvider
  isExternal: true
  name: TryGetMeanValue(Benchmark, Summary)
  nameWithType: IMetricValuesProvider.TryGetMeanValue(Benchmark, Summary)
  fullName: CodeJam.PerfTests.Metrics.IMetricValuesProvider.TryGetMeanValue(BenchmarkDotNet.Running.Benchmark, BenchmarkDotNet.Reports.Summary)
  spec.csharp:
  - uid: CodeJam.PerfTests.Metrics.IMetricValuesProvider.TryGetMeanValue(BenchmarkDotNet.Running.Benchmark,BenchmarkDotNet.Reports.Summary)
    name: TryGetMeanValue
    nameWithType: IMetricValuesProvider.TryGetMeanValue
    fullName: CodeJam.PerfTests.Metrics.IMetricValuesProvider.TryGetMeanValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: BenchmarkDotNet.Running.Benchmark
    name: Benchmark
    nameWithType: Benchmark
    fullName: BenchmarkDotNet.Running.Benchmark
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BenchmarkDotNet.Reports.Summary
    name: Summary
    nameWithType: Summary
    fullName: BenchmarkDotNet.Reports.Summary
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CodeJam.PerfTests.Metrics.IMetricValuesProvider.TryGetMeanValue(BenchmarkDotNet.Running.Benchmark,BenchmarkDotNet.Reports.Summary)
    name: TryGetMeanValue
    nameWithType: IMetricValuesProvider.TryGetMeanValue
    fullName: CodeJam.PerfTests.Metrics.IMetricValuesProvider.TryGetMeanValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: BenchmarkDotNet.Running.Benchmark
    name: Benchmark
    nameWithType: Benchmark
    fullName: BenchmarkDotNet.Running.Benchmark
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BenchmarkDotNet.Reports.Summary
    name: Summary
    nameWithType: Summary
    fullName: BenchmarkDotNet.Reports.Summary
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Double}
  commentId: T:System.Nullable{System.Double}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Double>
  nameWithType: Nullable<Double>
  fullName: System.Nullable<System.Double>
  nameWithType.vb: Nullable(Of Double)
  fullName.vb: System.Nullable(Of System.Double)
  name.vb: Nullable(Of Double)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetVariance*
  commentId: Overload:CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetVariance
  isExternal: false
  name: TryGetVariance
  nameWithType: MetricValuesProviderBase.TryGetVariance
  fullName: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetVariance
- uid: CodeJam.PerfTests.Metrics.IMetricValuesProvider.TryGetVariance(BenchmarkDotNet.Running.Benchmark,BenchmarkDotNet.Reports.Summary)
  commentId: M:CodeJam.PerfTests.Metrics.IMetricValuesProvider.TryGetVariance(BenchmarkDotNet.Running.Benchmark,BenchmarkDotNet.Reports.Summary)
  parent: CodeJam.PerfTests.Metrics.IMetricValuesProvider
  isExternal: true
  name: TryGetVariance(Benchmark, Summary)
  nameWithType: IMetricValuesProvider.TryGetVariance(Benchmark, Summary)
  fullName: CodeJam.PerfTests.Metrics.IMetricValuesProvider.TryGetVariance(BenchmarkDotNet.Running.Benchmark, BenchmarkDotNet.Reports.Summary)
  spec.csharp:
  - uid: CodeJam.PerfTests.Metrics.IMetricValuesProvider.TryGetVariance(BenchmarkDotNet.Running.Benchmark,BenchmarkDotNet.Reports.Summary)
    name: TryGetVariance
    nameWithType: IMetricValuesProvider.TryGetVariance
    fullName: CodeJam.PerfTests.Metrics.IMetricValuesProvider.TryGetVariance
  - name: (
    nameWithType: (
    fullName: (
  - uid: BenchmarkDotNet.Running.Benchmark
    name: Benchmark
    nameWithType: Benchmark
    fullName: BenchmarkDotNet.Running.Benchmark
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BenchmarkDotNet.Reports.Summary
    name: Summary
    nameWithType: Summary
    fullName: BenchmarkDotNet.Reports.Summary
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CodeJam.PerfTests.Metrics.IMetricValuesProvider.TryGetVariance(BenchmarkDotNet.Running.Benchmark,BenchmarkDotNet.Reports.Summary)
    name: TryGetVariance
    nameWithType: IMetricValuesProvider.TryGetVariance
    fullName: CodeJam.PerfTests.Metrics.IMetricValuesProvider.TryGetVariance
  - name: (
    nameWithType: (
    fullName: (
  - uid: BenchmarkDotNet.Running.Benchmark
    name: Benchmark
    nameWithType: Benchmark
    fullName: BenchmarkDotNet.Running.Benchmark
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BenchmarkDotNet.Reports.Summary
    name: Summary
    nameWithType: Summary
    fullName: BenchmarkDotNet.Reports.Summary
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetActualValues*
  commentId: Overload:CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetActualValues
  isExternal: false
  name: TryGetActualValues
  nameWithType: MetricValuesProviderBase.TryGetActualValues
  fullName: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetActualValues
- uid: CodeJam.PerfTests.Metrics.IMetricValuesProvider.TryGetActualValues(BenchmarkDotNet.Running.Benchmark,BenchmarkDotNet.Reports.Summary)
  commentId: M:CodeJam.PerfTests.Metrics.IMetricValuesProvider.TryGetActualValues(BenchmarkDotNet.Running.Benchmark,BenchmarkDotNet.Reports.Summary)
  parent: CodeJam.PerfTests.Metrics.IMetricValuesProvider
  isExternal: true
  name: TryGetActualValues(Benchmark, Summary)
  nameWithType: IMetricValuesProvider.TryGetActualValues(Benchmark, Summary)
  fullName: CodeJam.PerfTests.Metrics.IMetricValuesProvider.TryGetActualValues(BenchmarkDotNet.Running.Benchmark, BenchmarkDotNet.Reports.Summary)
  spec.csharp:
  - uid: CodeJam.PerfTests.Metrics.IMetricValuesProvider.TryGetActualValues(BenchmarkDotNet.Running.Benchmark,BenchmarkDotNet.Reports.Summary)
    name: TryGetActualValues
    nameWithType: IMetricValuesProvider.TryGetActualValues
    fullName: CodeJam.PerfTests.Metrics.IMetricValuesProvider.TryGetActualValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: BenchmarkDotNet.Running.Benchmark
    name: Benchmark
    nameWithType: Benchmark
    fullName: BenchmarkDotNet.Running.Benchmark
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BenchmarkDotNet.Reports.Summary
    name: Summary
    nameWithType: Summary
    fullName: BenchmarkDotNet.Reports.Summary
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CodeJam.PerfTests.Metrics.IMetricValuesProvider.TryGetActualValues(BenchmarkDotNet.Running.Benchmark,BenchmarkDotNet.Reports.Summary)
    name: TryGetActualValues
    nameWithType: IMetricValuesProvider.TryGetActualValues
    fullName: CodeJam.PerfTests.Metrics.IMetricValuesProvider.TryGetActualValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: BenchmarkDotNet.Running.Benchmark
    name: Benchmark
    nameWithType: Benchmark
    fullName: BenchmarkDotNet.Running.Benchmark
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BenchmarkDotNet.Reports.Summary
    name: Summary
    nameWithType: Summary
    fullName: BenchmarkDotNet.Reports.Summary
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CodeJam.PerfTests.Metrics.MetricRange
  commentId: T:CodeJam.PerfTests.Metrics.MetricRange
  parent: CodeJam.PerfTests.Metrics
  isExternal: false
  name: MetricRange
  nameWithType: MetricRange
  fullName: CodeJam.PerfTests.Metrics.MetricRange
- uid: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetLimitValues*
  commentId: Overload:CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetLimitValues
  isExternal: false
  name: TryGetLimitValues
  nameWithType: MetricValuesProviderBase.TryGetLimitValues
  fullName: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetLimitValues
- uid: CodeJam.PerfTests.Metrics.IMetricValuesProvider.TryGetLimitValues(BenchmarkDotNet.Running.Benchmark,BenchmarkDotNet.Reports.Summary)
  commentId: M:CodeJam.PerfTests.Metrics.IMetricValuesProvider.TryGetLimitValues(BenchmarkDotNet.Running.Benchmark,BenchmarkDotNet.Reports.Summary)
  parent: CodeJam.PerfTests.Metrics.IMetricValuesProvider
  isExternal: true
  name: TryGetLimitValues(Benchmark, Summary)
  nameWithType: IMetricValuesProvider.TryGetLimitValues(Benchmark, Summary)
  fullName: CodeJam.PerfTests.Metrics.IMetricValuesProvider.TryGetLimitValues(BenchmarkDotNet.Running.Benchmark, BenchmarkDotNet.Reports.Summary)
  spec.csharp:
  - uid: CodeJam.PerfTests.Metrics.IMetricValuesProvider.TryGetLimitValues(BenchmarkDotNet.Running.Benchmark,BenchmarkDotNet.Reports.Summary)
    name: TryGetLimitValues
    nameWithType: IMetricValuesProvider.TryGetLimitValues
    fullName: CodeJam.PerfTests.Metrics.IMetricValuesProvider.TryGetLimitValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: BenchmarkDotNet.Running.Benchmark
    name: Benchmark
    nameWithType: Benchmark
    fullName: BenchmarkDotNet.Running.Benchmark
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BenchmarkDotNet.Reports.Summary
    name: Summary
    nameWithType: Summary
    fullName: BenchmarkDotNet.Reports.Summary
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CodeJam.PerfTests.Metrics.IMetricValuesProvider.TryGetLimitValues(BenchmarkDotNet.Running.Benchmark,BenchmarkDotNet.Reports.Summary)
    name: TryGetLimitValues
    nameWithType: IMetricValuesProvider.TryGetLimitValues
    fullName: CodeJam.PerfTests.Metrics.IMetricValuesProvider.TryGetLimitValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: BenchmarkDotNet.Running.Benchmark
    name: Benchmark
    nameWithType: Benchmark
    fullName: BenchmarkDotNet.Running.Benchmark
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BenchmarkDotNet.Reports.Summary
    name: Summary
    nameWithType: Summary
    fullName: BenchmarkDotNet.Reports.Summary
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.GetColumnProvider*
  commentId: Overload:CodeJam.PerfTests.Metrics.MetricValuesProviderBase.GetColumnProvider
  isExternal: false
  name: GetColumnProvider
  nameWithType: MetricValuesProviderBase.GetColumnProvider
  fullName: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.GetColumnProvider
- uid: CodeJam.PerfTests.Metrics.IMetricValuesProvider.GetColumnProvider(CodeJam.PerfTests.Metrics.MetricInfo,CodeJam.PerfTests.Metrics.MetricValueColumns)
  commentId: M:CodeJam.PerfTests.Metrics.IMetricValuesProvider.GetColumnProvider(CodeJam.PerfTests.Metrics.MetricInfo,CodeJam.PerfTests.Metrics.MetricValueColumns)
  parent: CodeJam.PerfTests.Metrics.IMetricValuesProvider
  isExternal: false
  name: GetColumnProvider(MetricInfo, MetricValueColumns)
  nameWithType: IMetricValuesProvider.GetColumnProvider(MetricInfo, MetricValueColumns)
  fullName: CodeJam.PerfTests.Metrics.IMetricValuesProvider.GetColumnProvider(CodeJam.PerfTests.Metrics.MetricInfo, CodeJam.PerfTests.Metrics.MetricValueColumns)
  spec.csharp:
  - uid: CodeJam.PerfTests.Metrics.IMetricValuesProvider.GetColumnProvider(CodeJam.PerfTests.Metrics.MetricInfo,CodeJam.PerfTests.Metrics.MetricValueColumns)
    name: GetColumnProvider
    nameWithType: IMetricValuesProvider.GetColumnProvider
    fullName: CodeJam.PerfTests.Metrics.IMetricValuesProvider.GetColumnProvider
  - name: (
    nameWithType: (
    fullName: (
  - uid: CodeJam.PerfTests.Metrics.MetricInfo
    name: MetricInfo
    nameWithType: MetricInfo
    fullName: CodeJam.PerfTests.Metrics.MetricInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CodeJam.PerfTests.Metrics.MetricValueColumns
    name: MetricValueColumns
    nameWithType: MetricValueColumns
    fullName: CodeJam.PerfTests.Metrics.MetricValueColumns
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CodeJam.PerfTests.Metrics.IMetricValuesProvider.GetColumnProvider(CodeJam.PerfTests.Metrics.MetricInfo,CodeJam.PerfTests.Metrics.MetricValueColumns)
    name: GetColumnProvider
    nameWithType: IMetricValuesProvider.GetColumnProvider
    fullName: CodeJam.PerfTests.Metrics.IMetricValuesProvider.GetColumnProvider
  - name: (
    nameWithType: (
    fullName: (
  - uid: CodeJam.PerfTests.Metrics.MetricInfo
    name: MetricInfo
    nameWithType: MetricInfo
    fullName: CodeJam.PerfTests.Metrics.MetricInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CodeJam.PerfTests.Metrics.MetricValueColumns
    name: MetricValueColumns
    nameWithType: MetricValueColumns
    fullName: CodeJam.PerfTests.Metrics.MetricValueColumns
  - name: )
    nameWithType: )
    fullName: )
- uid: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.GetDiagnosers*
  commentId: Overload:CodeJam.PerfTests.Metrics.MetricValuesProviderBase.GetDiagnosers
  isExternal: false
  name: GetDiagnosers
  nameWithType: MetricValuesProviderBase.GetDiagnosers
  fullName: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.GetDiagnosers
- uid: CodeJam.PerfTests.Metrics.IMetricValuesProvider.GetDiagnosers(CodeJam.PerfTests.Metrics.MetricInfo)
  commentId: M:CodeJam.PerfTests.Metrics.IMetricValuesProvider.GetDiagnosers(CodeJam.PerfTests.Metrics.MetricInfo)
  parent: CodeJam.PerfTests.Metrics.IMetricValuesProvider
  isExternal: false
  name: GetDiagnosers(MetricInfo)
  nameWithType: IMetricValuesProvider.GetDiagnosers(MetricInfo)
  fullName: CodeJam.PerfTests.Metrics.IMetricValuesProvider.GetDiagnosers(CodeJam.PerfTests.Metrics.MetricInfo)
  spec.csharp:
  - uid: CodeJam.PerfTests.Metrics.IMetricValuesProvider.GetDiagnosers(CodeJam.PerfTests.Metrics.MetricInfo)
    name: GetDiagnosers
    nameWithType: IMetricValuesProvider.GetDiagnosers
    fullName: CodeJam.PerfTests.Metrics.IMetricValuesProvider.GetDiagnosers
  - name: (
    nameWithType: (
    fullName: (
  - uid: CodeJam.PerfTests.Metrics.MetricInfo
    name: MetricInfo
    nameWithType: MetricInfo
    fullName: CodeJam.PerfTests.Metrics.MetricInfo
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CodeJam.PerfTests.Metrics.IMetricValuesProvider.GetDiagnosers(CodeJam.PerfTests.Metrics.MetricInfo)
    name: GetDiagnosers
    nameWithType: IMetricValuesProvider.GetDiagnosers
    fullName: CodeJam.PerfTests.Metrics.IMetricValuesProvider.GetDiagnosers
  - name: (
    nameWithType: (
    fullName: (
  - uid: CodeJam.PerfTests.Metrics.MetricInfo
    name: MetricInfo
    nameWithType: MetricInfo
    fullName: CodeJam.PerfTests.Metrics.MetricInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: BenchmarkDotNet.Diagnosers.IDiagnoser[]
  name: IDiagnoser[]
  nameWithType: IDiagnoser[]
  fullName: BenchmarkDotNet.Diagnosers.IDiagnoser[]
  nameWithType.vb: IDiagnoser()
  fullName.vb: BenchmarkDotNet.Diagnosers.IDiagnoser()
  name.vb: IDiagnoser()
  spec.csharp:
  - uid: BenchmarkDotNet.Diagnosers.IDiagnoser
    name: IDiagnoser
    nameWithType: IDiagnoser
    fullName: BenchmarkDotNet.Diagnosers.IDiagnoser
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: BenchmarkDotNet.Diagnosers.IDiagnoser
    name: IDiagnoser
    nameWithType: IDiagnoser
    fullName: BenchmarkDotNet.Diagnosers.IDiagnoser
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.GetColumnProviderOverride*
  commentId: Overload:CodeJam.PerfTests.Metrics.MetricValuesProviderBase.GetColumnProviderOverride
  isExternal: false
  name: GetColumnProviderOverride
  nameWithType: MetricValuesProviderBase.GetColumnProviderOverride
  fullName: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.GetColumnProviderOverride
- uid: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.GetDiagnosersOverride*
  commentId: Overload:CodeJam.PerfTests.Metrics.MetricValuesProviderBase.GetDiagnosersOverride
  isExternal: false
  name: GetDiagnosersOverride
  nameWithType: MetricValuesProviderBase.GetDiagnosersOverride
  fullName: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.GetDiagnosersOverride
- uid: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetValues*
  commentId: Overload:CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetValues
  isExternal: false
  name: TryGetValues
  nameWithType: MetricValuesProviderBase.TryGetValues
  fullName: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetValues
- uid: System.Double[]
  name: Double[]
  nameWithType: Double[]
  fullName: System.Double[]
  nameWithType.vb: Double()
  fullName.vb: System.Double()
  name.vb: Double()
  spec.csharp:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetRelativeValues*
  commentId: Overload:CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetRelativeValues
  isExternal: false
  name: TryGetRelativeValues
  nameWithType: MetricValuesProviderBase.TryGetRelativeValues
  fullName: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.TryGetRelativeValues
- uid: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.GetValuesFromReport*
  commentId: Overload:CodeJam.PerfTests.Metrics.MetricValuesProviderBase.GetValuesFromReport
  isExternal: false
  name: GetValuesFromReport
  nameWithType: MetricValuesProviderBase.GetValuesFromReport
  fullName: CodeJam.PerfTests.Metrics.MetricValuesProviderBase.GetValuesFromReport
