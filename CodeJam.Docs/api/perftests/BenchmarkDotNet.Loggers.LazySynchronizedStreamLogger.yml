### YamlMime:ManagedReference
items:
- uid: BenchmarkDotNet.Loggers.LazySynchronizedStreamLogger
  commentId: T:BenchmarkDotNet.Loggers.LazySynchronizedStreamLogger
  id: LazySynchronizedStreamLogger
  parent: BenchmarkDotNet.Loggers
  children:
  - BenchmarkDotNet.Loggers.LazySynchronizedStreamLogger.#ctor(System.Func{System.IO.TextWriter})
  - BenchmarkDotNet.Loggers.LazySynchronizedStreamLogger.#ctor(System.String,System.Boolean)
  - BenchmarkDotNet.Loggers.LazySynchronizedStreamLogger.Flush
  - BenchmarkDotNet.Loggers.LazySynchronizedStreamLogger.Write(BenchmarkDotNet.Loggers.LogKind,System.String)
  - BenchmarkDotNet.Loggers.LazySynchronizedStreamLogger.WriteLine
  - BenchmarkDotNet.Loggers.LazySynchronizedStreamLogger.WriteLine(BenchmarkDotNet.Loggers.LogKind,System.String)
  langs:
  - csharp
  - vb
  name: LazySynchronizedStreamLogger
  nameWithType: LazySynchronizedStreamLogger
  fullName: BenchmarkDotNet.Loggers.LazySynchronizedStreamLogger
  type: Class
  source:
    remote:
      path: PerfTests/src/[L0_PortToBenchmerkDotNet]/Loggers/LazySynchronizedStreamLogger.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: LazySynchronizedStreamLogger
    path: ../PerfTests/src/[L0_PortToBenchmerkDotNet]/Loggers/LazySynchronizedStreamLogger.cs
    startLine: 15
  assemblies:
  - CodeJam.PerfTests
  namespace: BenchmarkDotNet.Loggers
  summary: "\nImplementation of <xref href=\"BenchmarkDotNet.Loggers.ILogger\" data-throw-if-not-resolved=\"false\"></xref> that supports lazy initialization and prevents output interleaving.\n"
  example: []
  syntax:
    content: 'public sealed class LazySynchronizedStreamLogger : IFlushableLogger, ILogger'
    content.vb: >-
      Public NotInheritable Class LazySynchronizedStreamLogger
          Implements IFlushableLogger, ILogger
  seealso:
  - linkId: BenchmarkDotNet.Loggers.ILogger
    commentId: T:BenchmarkDotNet.Loggers.ILogger
  inheritance:
  - System.Object
  implements:
  - BenchmarkDotNet.Loggers.IFlushableLogger
  - BenchmarkDotNet.Loggers.ILogger
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - BenchmarkDotNet.Loggers.ILogger.CodeJam.PerfTests.Loggers.LoggerHelpers.WriteSeparatorLine
  - BenchmarkDotNet.Loggers.ILogger.CodeJam.PerfTests.Loggers.LoggerHelpers.WriteSeparatorLine(System.String)
  - BenchmarkDotNet.Loggers.ILogger.CodeJam.PerfTests.Loggers.LoggerHelpers.WriteSeparatorLine(System.String,System.Boolean)
  - BenchmarkDotNet.Loggers.ILogger.CodeJam.PerfTests.Running.Core.CompetitionCoreHelpers.WriteVerboseHint(System.String)
  - BenchmarkDotNet.Loggers.ILogger.CodeJam.PerfTests.Running.Core.CompetitionCoreHelpers.WriteVerbose(System.String)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: BenchmarkDotNet.Loggers.LazySynchronizedStreamLogger.#ctor(System.Func{System.IO.TextWriter})
  commentId: M:BenchmarkDotNet.Loggers.LazySynchronizedStreamLogger.#ctor(System.Func{System.IO.TextWriter})
  id: '#ctor(System.Func{System.IO.TextWriter})'
  parent: BenchmarkDotNet.Loggers.LazySynchronizedStreamLogger
  langs:
  - csharp
  - vb
  name: LazySynchronizedStreamLogger(Func<TextWriter>)
  nameWithType: LazySynchronizedStreamLogger.LazySynchronizedStreamLogger(Func<TextWriter>)
  fullName: BenchmarkDotNet.Loggers.LazySynchronizedStreamLogger.LazySynchronizedStreamLogger(System.Func<System.IO.TextWriter>)
  type: Constructor
  source:
    remote:
      path: PerfTests/src/[L0_PortToBenchmerkDotNet]/Loggers/LazySynchronizedStreamLogger.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: .ctor
    path: ../PerfTests/src/[L0_PortToBenchmerkDotNet]/Loggers/LazySynchronizedStreamLogger.cs
    startLine: 22
  assemblies:
  - CodeJam.PerfTests
  namespace: BenchmarkDotNet.Loggers
  summary: Initializes a new instance of the <xref href="BenchmarkDotNet.Loggers.LazySynchronizedStreamLogger" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public LazySynchronizedStreamLogger(Func<TextWriter> writerFactory)
    parameters:
    - id: writerFactory
      type: System.Func{System.IO.TextWriter}
      description: Factory method for the writer the log output will be redirected.
    content.vb: Public Sub New(writerFactory As Func(Of TextWriter))
  overload: BenchmarkDotNet.Loggers.LazySynchronizedStreamLogger.#ctor*
  nameWithType.vb: LazySynchronizedStreamLogger.LazySynchronizedStreamLogger(Func(Of TextWriter))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BenchmarkDotNet.Loggers.LazySynchronizedStreamLogger.LazySynchronizedStreamLogger(System.Func(Of System.IO.TextWriter))
  name.vb: LazySynchronizedStreamLogger(Func(Of TextWriter))
- uid: BenchmarkDotNet.Loggers.LazySynchronizedStreamLogger.#ctor(System.String,System.Boolean)
  commentId: M:BenchmarkDotNet.Loggers.LazySynchronizedStreamLogger.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: BenchmarkDotNet.Loggers.LazySynchronizedStreamLogger
  langs:
  - csharp
  - vb
  name: LazySynchronizedStreamLogger(String, Boolean)
  nameWithType: LazySynchronizedStreamLogger.LazySynchronizedStreamLogger(String, Boolean)
  fullName: BenchmarkDotNet.Loggers.LazySynchronizedStreamLogger.LazySynchronizedStreamLogger(System.String, System.Boolean)
  type: Constructor
  source:
    remote:
      path: PerfTests/src/[L0_PortToBenchmerkDotNet]/Loggers/LazySynchronizedStreamLogger.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: .ctor
    path: ../PerfTests/src/[L0_PortToBenchmerkDotNet]/Loggers/LazySynchronizedStreamLogger.cs
    startLine: 37
  assemblies:
  - CodeJam.PerfTests
  namespace: BenchmarkDotNet.Loggers
  summary: Initializes a new instance of the <xref href="BenchmarkDotNet.Loggers.LazySynchronizedStreamLogger" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public LazySynchronizedStreamLogger(string filePath, bool append = false)
    parameters:
    - id: filePath
      type: System.String
      description: The file path for the log.
    - id: append
      type: System.Boolean
      description: "\nif set to <code>true</code> the log will be appended to existing file; if <code>false</code> the log wil be overwritten.\n"
    content.vb: Public Sub New(filePath As String, append As Boolean = False)
  overload: BenchmarkDotNet.Loggers.LazySynchronizedStreamLogger.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BenchmarkDotNet.Loggers.LazySynchronizedStreamLogger.Write(BenchmarkDotNet.Loggers.LogKind,System.String)
  commentId: M:BenchmarkDotNet.Loggers.LazySynchronizedStreamLogger.Write(BenchmarkDotNet.Loggers.LogKind,System.String)
  id: Write(BenchmarkDotNet.Loggers.LogKind,System.String)
  parent: BenchmarkDotNet.Loggers.LazySynchronizedStreamLogger
  langs:
  - csharp
  - vb
  name: Write(LogKind, String)
  nameWithType: LazySynchronizedStreamLogger.Write(LogKind, String)
  fullName: BenchmarkDotNet.Loggers.LazySynchronizedStreamLogger.Write(BenchmarkDotNet.Loggers.LogKind, System.String)
  type: Method
  source:
    remote:
      path: PerfTests/src/[L0_PortToBenchmerkDotNet]/Loggers/LazySynchronizedStreamLogger.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: Write
    path: ../PerfTests/src/[L0_PortToBenchmerkDotNet]/Loggers/LazySynchronizedStreamLogger.cs
    startLine: 50
  assemblies:
  - CodeJam.PerfTests
  namespace: BenchmarkDotNet.Loggers
  summary: Write the text.
  example: []
  syntax:
    content: public void Write(LogKind logKind, string text)
    parameters:
    - id: logKind
      type: BenchmarkDotNet.Loggers.LogKind
      description: Kind of text.
    - id: text
      type: System.String
      description: The text to write.
    content.vb: Public Sub Write(logKind As LogKind, text As String)
  overload: BenchmarkDotNet.Loggers.LazySynchronizedStreamLogger.Write*
  implements:
  - BenchmarkDotNet.Loggers.ILogger.Write(BenchmarkDotNet.Loggers.LogKind,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BenchmarkDotNet.Loggers.LazySynchronizedStreamLogger.WriteLine
  commentId: M:BenchmarkDotNet.Loggers.LazySynchronizedStreamLogger.WriteLine
  id: WriteLine
  parent: BenchmarkDotNet.Loggers.LazySynchronizedStreamLogger
  langs:
  - csharp
  - vb
  name: WriteLine()
  nameWithType: LazySynchronizedStreamLogger.WriteLine()
  fullName: BenchmarkDotNet.Loggers.LazySynchronizedStreamLogger.WriteLine()
  type: Method
  source:
    remote:
      path: PerfTests/src/[L0_PortToBenchmerkDotNet]/Loggers/LazySynchronizedStreamLogger.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: WriteLine
    path: ../PerfTests/src/[L0_PortToBenchmerkDotNet]/Loggers/LazySynchronizedStreamLogger.cs
    startLine: 53
  assemblies:
  - CodeJam.PerfTests
  namespace: BenchmarkDotNet.Loggers
  summary: Write empty line.
  example: []
  syntax:
    content: public void WriteLine()
    content.vb: Public Sub WriteLine
  overload: BenchmarkDotNet.Loggers.LazySynchronizedStreamLogger.WriteLine*
  implements:
  - BenchmarkDotNet.Loggers.ILogger.WriteLine
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BenchmarkDotNet.Loggers.LazySynchronizedStreamLogger.WriteLine(BenchmarkDotNet.Loggers.LogKind,System.String)
  commentId: M:BenchmarkDotNet.Loggers.LazySynchronizedStreamLogger.WriteLine(BenchmarkDotNet.Loggers.LogKind,System.String)
  id: WriteLine(BenchmarkDotNet.Loggers.LogKind,System.String)
  parent: BenchmarkDotNet.Loggers.LazySynchronizedStreamLogger
  langs:
  - csharp
  - vb
  name: WriteLine(LogKind, String)
  nameWithType: LazySynchronizedStreamLogger.WriteLine(LogKind, String)
  fullName: BenchmarkDotNet.Loggers.LazySynchronizedStreamLogger.WriteLine(BenchmarkDotNet.Loggers.LogKind, System.String)
  type: Method
  source:
    remote:
      path: PerfTests/src/[L0_PortToBenchmerkDotNet]/Loggers/LazySynchronizedStreamLogger.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: WriteLine
    path: ../PerfTests/src/[L0_PortToBenchmerkDotNet]/Loggers/LazySynchronizedStreamLogger.cs
    startLine: 58
  assemblies:
  - CodeJam.PerfTests
  namespace: BenchmarkDotNet.Loggers
  summary: Write the line.
  example: []
  syntax:
    content: public void WriteLine(LogKind logKind, string text)
    parameters:
    - id: logKind
      type: BenchmarkDotNet.Loggers.LogKind
      description: Kind of text.
    - id: text
      type: System.String
      description: The text to write.
    content.vb: Public Sub WriteLine(logKind As LogKind, text As String)
  overload: BenchmarkDotNet.Loggers.LazySynchronizedStreamLogger.WriteLine*
  implements:
  - BenchmarkDotNet.Loggers.ILogger.WriteLine(BenchmarkDotNet.Loggers.LogKind,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BenchmarkDotNet.Loggers.LazySynchronizedStreamLogger.Flush
  commentId: M:BenchmarkDotNet.Loggers.LazySynchronizedStreamLogger.Flush
  id: Flush
  parent: BenchmarkDotNet.Loggers.LazySynchronizedStreamLogger
  langs:
  - csharp
  - vb
  name: Flush()
  nameWithType: LazySynchronizedStreamLogger.Flush()
  fullName: BenchmarkDotNet.Loggers.LazySynchronizedStreamLogger.Flush()
  type: Method
  source:
    remote:
      path: PerfTests/src/[L0_PortToBenchmerkDotNet]/Loggers/LazySynchronizedStreamLogger.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: Flush
    path: ../PerfTests/src/[L0_PortToBenchmerkDotNet]/Loggers/LazySynchronizedStreamLogger.cs
    startLine: 61
  assemblies:
  - CodeJam.PerfTests
  namespace: BenchmarkDotNet.Loggers
  summary: Flushes the log.
  example: []
  syntax:
    content: public void Flush()
    content.vb: Public Sub Flush
  overload: BenchmarkDotNet.Loggers.LazySynchronizedStreamLogger.Flush*
  implements:
  - BenchmarkDotNet.Loggers.IFlushableLogger.Flush
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: BenchmarkDotNet.Loggers.ILogger
  commentId: T:BenchmarkDotNet.Loggers.ILogger
  parent: BenchmarkDotNet.Loggers
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: BenchmarkDotNet.Loggers.ILogger
- uid: BenchmarkDotNet.Loggers
  commentId: N:BenchmarkDotNet.Loggers
  isExternal: false
  name: BenchmarkDotNet.Loggers
  nameWithType: BenchmarkDotNet.Loggers
  fullName: BenchmarkDotNet.Loggers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: BenchmarkDotNet.Loggers.IFlushableLogger
  commentId: T:BenchmarkDotNet.Loggers.IFlushableLogger
  parent: BenchmarkDotNet.Loggers
  isExternal: false
  name: IFlushableLogger
  nameWithType: IFlushableLogger
  fullName: BenchmarkDotNet.Loggers.IFlushableLogger
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BenchmarkDotNet.Loggers.ILogger.CodeJam.PerfTests.Loggers.LoggerHelpers.WriteSeparatorLine
  commentId: M:CodeJam.PerfTests.Loggers.LoggerHelpers.WriteSeparatorLine(BenchmarkDotNet.Loggers.ILogger)
  parent: CodeJam.PerfTests.Loggers.LoggerHelpers
  definition: CodeJam.PerfTests.Loggers.LoggerHelpers.WriteSeparatorLine(BenchmarkDotNet.Loggers.ILogger)
  name: WriteSeparatorLine()
  nameWithType: LoggerHelpers.WriteSeparatorLine()
  fullName: CodeJam.PerfTests.Loggers.LoggerHelpers.WriteSeparatorLine()
  spec.csharp:
  - uid: CodeJam.PerfTests.Loggers.LoggerHelpers.WriteSeparatorLine
    name: WriteSeparatorLine
    nameWithType: LoggerHelpers.WriteSeparatorLine
    fullName: CodeJam.PerfTests.Loggers.LoggerHelpers.WriteSeparatorLine
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CodeJam.PerfTests.Loggers.LoggerHelpers.WriteSeparatorLine
    name: WriteSeparatorLine
    nameWithType: LoggerHelpers.WriteSeparatorLine
    fullName: CodeJam.PerfTests.Loggers.LoggerHelpers.WriteSeparatorLine
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BenchmarkDotNet.Loggers.ILogger.CodeJam.PerfTests.Loggers.LoggerHelpers.WriteSeparatorLine(System.String)
  commentId: M:CodeJam.PerfTests.Loggers.LoggerHelpers.WriteSeparatorLine(BenchmarkDotNet.Loggers.ILogger,System.String)
  parent: CodeJam.PerfTests.Loggers.LoggerHelpers
  definition: CodeJam.PerfTests.Loggers.LoggerHelpers.WriteSeparatorLine(BenchmarkDotNet.Loggers.ILogger,System.String)
  name: WriteSeparatorLine(String)
  nameWithType: LoggerHelpers.WriteSeparatorLine(String)
  fullName: CodeJam.PerfTests.Loggers.LoggerHelpers.WriteSeparatorLine(System.String)
  spec.csharp:
  - uid: CodeJam.PerfTests.Loggers.LoggerHelpers.WriteSeparatorLine(System.String)
    name: WriteSeparatorLine
    nameWithType: LoggerHelpers.WriteSeparatorLine
    fullName: CodeJam.PerfTests.Loggers.LoggerHelpers.WriteSeparatorLine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CodeJam.PerfTests.Loggers.LoggerHelpers.WriteSeparatorLine(System.String)
    name: WriteSeparatorLine
    nameWithType: LoggerHelpers.WriteSeparatorLine
    fullName: CodeJam.PerfTests.Loggers.LoggerHelpers.WriteSeparatorLine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BenchmarkDotNet.Loggers.ILogger.CodeJam.PerfTests.Loggers.LoggerHelpers.WriteSeparatorLine(System.String,System.Boolean)
  commentId: M:CodeJam.PerfTests.Loggers.LoggerHelpers.WriteSeparatorLine(BenchmarkDotNet.Loggers.ILogger,System.String,System.Boolean)
  parent: CodeJam.PerfTests.Loggers.LoggerHelpers
  definition: CodeJam.PerfTests.Loggers.LoggerHelpers.WriteSeparatorLine(BenchmarkDotNet.Loggers.ILogger,System.String,System.Boolean)
  name: WriteSeparatorLine(String, Boolean)
  nameWithType: LoggerHelpers.WriteSeparatorLine(String, Boolean)
  fullName: CodeJam.PerfTests.Loggers.LoggerHelpers.WriteSeparatorLine(System.String, System.Boolean)
  spec.csharp:
  - uid: CodeJam.PerfTests.Loggers.LoggerHelpers.WriteSeparatorLine(System.String,System.Boolean)
    name: WriteSeparatorLine
    nameWithType: LoggerHelpers.WriteSeparatorLine
    fullName: CodeJam.PerfTests.Loggers.LoggerHelpers.WriteSeparatorLine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CodeJam.PerfTests.Loggers.LoggerHelpers.WriteSeparatorLine(System.String,System.Boolean)
    name: WriteSeparatorLine
    nameWithType: LoggerHelpers.WriteSeparatorLine
    fullName: CodeJam.PerfTests.Loggers.LoggerHelpers.WriteSeparatorLine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BenchmarkDotNet.Loggers.ILogger.CodeJam.PerfTests.Running.Core.CompetitionCoreHelpers.WriteVerboseHint(System.String)
  commentId: M:CodeJam.PerfTests.Running.Core.CompetitionCoreHelpers.WriteVerboseHint(BenchmarkDotNet.Loggers.ILogger,System.String)
  parent: CodeJam.PerfTests.Running.Core.CompetitionCoreHelpers
  definition: CodeJam.PerfTests.Running.Core.CompetitionCoreHelpers.WriteVerboseHint(BenchmarkDotNet.Loggers.ILogger,System.String)
  name: WriteVerboseHint(String)
  nameWithType: CompetitionCoreHelpers.WriteVerboseHint(String)
  fullName: CodeJam.PerfTests.Running.Core.CompetitionCoreHelpers.WriteVerboseHint(System.String)
  spec.csharp:
  - uid: CodeJam.PerfTests.Running.Core.CompetitionCoreHelpers.WriteVerboseHint(System.String)
    name: WriteVerboseHint
    nameWithType: CompetitionCoreHelpers.WriteVerboseHint
    fullName: CodeJam.PerfTests.Running.Core.CompetitionCoreHelpers.WriteVerboseHint
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CodeJam.PerfTests.Running.Core.CompetitionCoreHelpers.WriteVerboseHint(System.String)
    name: WriteVerboseHint
    nameWithType: CompetitionCoreHelpers.WriteVerboseHint
    fullName: CodeJam.PerfTests.Running.Core.CompetitionCoreHelpers.WriteVerboseHint
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BenchmarkDotNet.Loggers.ILogger.CodeJam.PerfTests.Running.Core.CompetitionCoreHelpers.WriteVerbose(System.String)
  commentId: M:CodeJam.PerfTests.Running.Core.CompetitionCoreHelpers.WriteVerbose(BenchmarkDotNet.Loggers.ILogger,System.String)
  parent: CodeJam.PerfTests.Running.Core.CompetitionCoreHelpers
  definition: CodeJam.PerfTests.Running.Core.CompetitionCoreHelpers.WriteVerbose(BenchmarkDotNet.Loggers.ILogger,System.String)
  name: WriteVerbose(String)
  nameWithType: CompetitionCoreHelpers.WriteVerbose(String)
  fullName: CodeJam.PerfTests.Running.Core.CompetitionCoreHelpers.WriteVerbose(System.String)
  spec.csharp:
  - uid: CodeJam.PerfTests.Running.Core.CompetitionCoreHelpers.WriteVerbose(System.String)
    name: WriteVerbose
    nameWithType: CompetitionCoreHelpers.WriteVerbose
    fullName: CodeJam.PerfTests.Running.Core.CompetitionCoreHelpers.WriteVerbose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CodeJam.PerfTests.Running.Core.CompetitionCoreHelpers.WriteVerbose(System.String)
    name: WriteVerbose
    nameWithType: CompetitionCoreHelpers.WriteVerbose
    fullName: CodeJam.PerfTests.Running.Core.CompetitionCoreHelpers.WriteVerbose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: CodeJam.PerfTests.Loggers.LoggerHelpers.WriteSeparatorLine(BenchmarkDotNet.Loggers.ILogger)
  commentId: M:CodeJam.PerfTests.Loggers.LoggerHelpers.WriteSeparatorLine(BenchmarkDotNet.Loggers.ILogger)
  isExternal: true
  name: WriteSeparatorLine(ILogger)
  nameWithType: LoggerHelpers.WriteSeparatorLine(ILogger)
  fullName: CodeJam.PerfTests.Loggers.LoggerHelpers.WriteSeparatorLine(BenchmarkDotNet.Loggers.ILogger)
  spec.csharp:
  - uid: CodeJam.PerfTests.Loggers.LoggerHelpers.WriteSeparatorLine(BenchmarkDotNet.Loggers.ILogger)
    name: WriteSeparatorLine
    nameWithType: LoggerHelpers.WriteSeparatorLine
    fullName: CodeJam.PerfTests.Loggers.LoggerHelpers.WriteSeparatorLine
  - name: (
    nameWithType: (
    fullName: (
  - uid: BenchmarkDotNet.Loggers.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: BenchmarkDotNet.Loggers.ILogger
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CodeJam.PerfTests.Loggers.LoggerHelpers.WriteSeparatorLine(BenchmarkDotNet.Loggers.ILogger)
    name: WriteSeparatorLine
    nameWithType: LoggerHelpers.WriteSeparatorLine
    fullName: CodeJam.PerfTests.Loggers.LoggerHelpers.WriteSeparatorLine
  - name: (
    nameWithType: (
    fullName: (
  - uid: BenchmarkDotNet.Loggers.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: BenchmarkDotNet.Loggers.ILogger
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CodeJam.PerfTests.Loggers.LoggerHelpers
  commentId: T:CodeJam.PerfTests.Loggers.LoggerHelpers
  parent: CodeJam.PerfTests.Loggers
  isExternal: false
  name: LoggerHelpers
  nameWithType: LoggerHelpers
  fullName: CodeJam.PerfTests.Loggers.LoggerHelpers
- uid: CodeJam.PerfTests.Loggers.LoggerHelpers.WriteSeparatorLine(BenchmarkDotNet.Loggers.ILogger,System.String)
  commentId: M:CodeJam.PerfTests.Loggers.LoggerHelpers.WriteSeparatorLine(BenchmarkDotNet.Loggers.ILogger,System.String)
  isExternal: true
  name: WriteSeparatorLine(ILogger, String)
  nameWithType: LoggerHelpers.WriteSeparatorLine(ILogger, String)
  fullName: CodeJam.PerfTests.Loggers.LoggerHelpers.WriteSeparatorLine(BenchmarkDotNet.Loggers.ILogger, System.String)
  spec.csharp:
  - uid: CodeJam.PerfTests.Loggers.LoggerHelpers.WriteSeparatorLine(BenchmarkDotNet.Loggers.ILogger,System.String)
    name: WriteSeparatorLine
    nameWithType: LoggerHelpers.WriteSeparatorLine
    fullName: CodeJam.PerfTests.Loggers.LoggerHelpers.WriteSeparatorLine
  - name: (
    nameWithType: (
    fullName: (
  - uid: BenchmarkDotNet.Loggers.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: BenchmarkDotNet.Loggers.ILogger
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CodeJam.PerfTests.Loggers.LoggerHelpers.WriteSeparatorLine(BenchmarkDotNet.Loggers.ILogger,System.String)
    name: WriteSeparatorLine
    nameWithType: LoggerHelpers.WriteSeparatorLine
    fullName: CodeJam.PerfTests.Loggers.LoggerHelpers.WriteSeparatorLine
  - name: (
    nameWithType: (
    fullName: (
  - uid: BenchmarkDotNet.Loggers.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: BenchmarkDotNet.Loggers.ILogger
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CodeJam.PerfTests.Loggers.LoggerHelpers.WriteSeparatorLine(BenchmarkDotNet.Loggers.ILogger,System.String,System.Boolean)
  commentId: M:CodeJam.PerfTests.Loggers.LoggerHelpers.WriteSeparatorLine(BenchmarkDotNet.Loggers.ILogger,System.String,System.Boolean)
  isExternal: true
  name: WriteSeparatorLine(ILogger, String, Boolean)
  nameWithType: LoggerHelpers.WriteSeparatorLine(ILogger, String, Boolean)
  fullName: CodeJam.PerfTests.Loggers.LoggerHelpers.WriteSeparatorLine(BenchmarkDotNet.Loggers.ILogger, System.String, System.Boolean)
  spec.csharp:
  - uid: CodeJam.PerfTests.Loggers.LoggerHelpers.WriteSeparatorLine(BenchmarkDotNet.Loggers.ILogger,System.String,System.Boolean)
    name: WriteSeparatorLine
    nameWithType: LoggerHelpers.WriteSeparatorLine
    fullName: CodeJam.PerfTests.Loggers.LoggerHelpers.WriteSeparatorLine
  - name: (
    nameWithType: (
    fullName: (
  - uid: BenchmarkDotNet.Loggers.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: BenchmarkDotNet.Loggers.ILogger
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CodeJam.PerfTests.Loggers.LoggerHelpers.WriteSeparatorLine(BenchmarkDotNet.Loggers.ILogger,System.String,System.Boolean)
    name: WriteSeparatorLine
    nameWithType: LoggerHelpers.WriteSeparatorLine
    fullName: CodeJam.PerfTests.Loggers.LoggerHelpers.WriteSeparatorLine
  - name: (
    nameWithType: (
    fullName: (
  - uid: BenchmarkDotNet.Loggers.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: BenchmarkDotNet.Loggers.ILogger
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CodeJam.PerfTests.Running.Core.CompetitionCoreHelpers.WriteVerboseHint(BenchmarkDotNet.Loggers.ILogger,System.String)
  commentId: M:CodeJam.PerfTests.Running.Core.CompetitionCoreHelpers.WriteVerboseHint(BenchmarkDotNet.Loggers.ILogger,System.String)
  isExternal: true
  name: WriteVerboseHint(ILogger, String)
  nameWithType: CompetitionCoreHelpers.WriteVerboseHint(ILogger, String)
  fullName: CodeJam.PerfTests.Running.Core.CompetitionCoreHelpers.WriteVerboseHint(BenchmarkDotNet.Loggers.ILogger, System.String)
  spec.csharp:
  - uid: CodeJam.PerfTests.Running.Core.CompetitionCoreHelpers.WriteVerboseHint(BenchmarkDotNet.Loggers.ILogger,System.String)
    name: WriteVerboseHint
    nameWithType: CompetitionCoreHelpers.WriteVerboseHint
    fullName: CodeJam.PerfTests.Running.Core.CompetitionCoreHelpers.WriteVerboseHint
  - name: (
    nameWithType: (
    fullName: (
  - uid: BenchmarkDotNet.Loggers.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: BenchmarkDotNet.Loggers.ILogger
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CodeJam.PerfTests.Running.Core.CompetitionCoreHelpers.WriteVerboseHint(BenchmarkDotNet.Loggers.ILogger,System.String)
    name: WriteVerboseHint
    nameWithType: CompetitionCoreHelpers.WriteVerboseHint
    fullName: CodeJam.PerfTests.Running.Core.CompetitionCoreHelpers.WriteVerboseHint
  - name: (
    nameWithType: (
    fullName: (
  - uid: BenchmarkDotNet.Loggers.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: BenchmarkDotNet.Loggers.ILogger
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CodeJam.PerfTests.Running.Core.CompetitionCoreHelpers
  commentId: T:CodeJam.PerfTests.Running.Core.CompetitionCoreHelpers
  parent: CodeJam.PerfTests.Running.Core
  isExternal: false
  name: CompetitionCoreHelpers
  nameWithType: CompetitionCoreHelpers
  fullName: CodeJam.PerfTests.Running.Core.CompetitionCoreHelpers
- uid: CodeJam.PerfTests.Running.Core.CompetitionCoreHelpers.WriteVerbose(BenchmarkDotNet.Loggers.ILogger,System.String)
  commentId: M:CodeJam.PerfTests.Running.Core.CompetitionCoreHelpers.WriteVerbose(BenchmarkDotNet.Loggers.ILogger,System.String)
  isExternal: true
  name: WriteVerbose(ILogger, String)
  nameWithType: CompetitionCoreHelpers.WriteVerbose(ILogger, String)
  fullName: CodeJam.PerfTests.Running.Core.CompetitionCoreHelpers.WriteVerbose(BenchmarkDotNet.Loggers.ILogger, System.String)
  spec.csharp:
  - uid: CodeJam.PerfTests.Running.Core.CompetitionCoreHelpers.WriteVerbose(BenchmarkDotNet.Loggers.ILogger,System.String)
    name: WriteVerbose
    nameWithType: CompetitionCoreHelpers.WriteVerbose
    fullName: CodeJam.PerfTests.Running.Core.CompetitionCoreHelpers.WriteVerbose
  - name: (
    nameWithType: (
    fullName: (
  - uid: BenchmarkDotNet.Loggers.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: BenchmarkDotNet.Loggers.ILogger
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CodeJam.PerfTests.Running.Core.CompetitionCoreHelpers.WriteVerbose(BenchmarkDotNet.Loggers.ILogger,System.String)
    name: WriteVerbose
    nameWithType: CompetitionCoreHelpers.WriteVerbose
    fullName: CodeJam.PerfTests.Running.Core.CompetitionCoreHelpers.WriteVerbose
  - name: (
    nameWithType: (
    fullName: (
  - uid: BenchmarkDotNet.Loggers.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: BenchmarkDotNet.Loggers.ILogger
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CodeJam.PerfTests.Loggers
  commentId: N:CodeJam.PerfTests.Loggers
  isExternal: false
  name: CodeJam.PerfTests.Loggers
  nameWithType: CodeJam.PerfTests.Loggers
  fullName: CodeJam.PerfTests.Loggers
- uid: CodeJam.PerfTests.Running.Core
  commentId: N:CodeJam.PerfTests.Running.Core
  isExternal: false
  name: CodeJam.PerfTests.Running.Core
  nameWithType: CodeJam.PerfTests.Running.Core
  fullName: CodeJam.PerfTests.Running.Core
- uid: BenchmarkDotNet.Loggers.LazySynchronizedStreamLogger
  commentId: T:BenchmarkDotNet.Loggers.LazySynchronizedStreamLogger
  isExternal: false
  name: LazySynchronizedStreamLogger
  nameWithType: LazySynchronizedStreamLogger
  fullName: BenchmarkDotNet.Loggers.LazySynchronizedStreamLogger
- uid: BenchmarkDotNet.Loggers.LazySynchronizedStreamLogger.#ctor*
  commentId: Overload:BenchmarkDotNet.Loggers.LazySynchronizedStreamLogger.#ctor
  isExternal: false
  name: LazySynchronizedStreamLogger
  nameWithType: LazySynchronizedStreamLogger.LazySynchronizedStreamLogger
  fullName: BenchmarkDotNet.Loggers.LazySynchronizedStreamLogger.LazySynchronizedStreamLogger
- uid: System.Func{System.IO.TextWriter}
  commentId: T:System.Func{System.IO.TextWriter}
  parent: System
  definition: System.Func`1
  name: Func<TextWriter>
  nameWithType: Func<TextWriter>
  fullName: System.Func<System.IO.TextWriter>
  nameWithType.vb: Func(Of TextWriter)
  fullName.vb: System.Func(Of System.IO.TextWriter)
  name.vb: Func(Of TextWriter)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: BenchmarkDotNet.Loggers.LazySynchronizedStreamLogger.Write*
  commentId: Overload:BenchmarkDotNet.Loggers.LazySynchronizedStreamLogger.Write
  isExternal: false
  name: Write
  nameWithType: LazySynchronizedStreamLogger.Write
  fullName: BenchmarkDotNet.Loggers.LazySynchronizedStreamLogger.Write
- uid: BenchmarkDotNet.Loggers.ILogger.Write(BenchmarkDotNet.Loggers.LogKind,System.String)
  commentId: M:BenchmarkDotNet.Loggers.ILogger.Write(BenchmarkDotNet.Loggers.LogKind,System.String)
  parent: BenchmarkDotNet.Loggers.ILogger
  isExternal: true
  name: Write(LogKind, String)
  nameWithType: ILogger.Write(LogKind, String)
  fullName: BenchmarkDotNet.Loggers.ILogger.Write(BenchmarkDotNet.Loggers.LogKind, System.String)
  spec.csharp:
  - uid: BenchmarkDotNet.Loggers.ILogger.Write(BenchmarkDotNet.Loggers.LogKind,System.String)
    name: Write
    nameWithType: ILogger.Write
    fullName: BenchmarkDotNet.Loggers.ILogger.Write
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BenchmarkDotNet.Loggers.LogKind
    name: LogKind
    nameWithType: LogKind
    fullName: BenchmarkDotNet.Loggers.LogKind
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BenchmarkDotNet.Loggers.ILogger.Write(BenchmarkDotNet.Loggers.LogKind,System.String)
    name: Write
    nameWithType: ILogger.Write
    fullName: BenchmarkDotNet.Loggers.ILogger.Write
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BenchmarkDotNet.Loggers.LogKind
    name: LogKind
    nameWithType: LogKind
    fullName: BenchmarkDotNet.Loggers.LogKind
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BenchmarkDotNet.Loggers.LogKind
  commentId: T:BenchmarkDotNet.Loggers.LogKind
  parent: BenchmarkDotNet.Loggers
  isExternal: true
  name: LogKind
  nameWithType: LogKind
  fullName: BenchmarkDotNet.Loggers.LogKind
- uid: BenchmarkDotNet.Loggers.LazySynchronizedStreamLogger.WriteLine*
  commentId: Overload:BenchmarkDotNet.Loggers.LazySynchronizedStreamLogger.WriteLine
  isExternal: false
  name: WriteLine
  nameWithType: LazySynchronizedStreamLogger.WriteLine
  fullName: BenchmarkDotNet.Loggers.LazySynchronizedStreamLogger.WriteLine
- uid: BenchmarkDotNet.Loggers.ILogger.WriteLine
  commentId: M:BenchmarkDotNet.Loggers.ILogger.WriteLine
  parent: BenchmarkDotNet.Loggers.ILogger
  isExternal: true
  name: WriteLine()
  nameWithType: ILogger.WriteLine()
  fullName: BenchmarkDotNet.Loggers.ILogger.WriteLine()
  spec.csharp:
  - uid: BenchmarkDotNet.Loggers.ILogger.WriteLine
    name: WriteLine
    nameWithType: ILogger.WriteLine
    fullName: BenchmarkDotNet.Loggers.ILogger.WriteLine
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BenchmarkDotNet.Loggers.ILogger.WriteLine
    name: WriteLine
    nameWithType: ILogger.WriteLine
    fullName: BenchmarkDotNet.Loggers.ILogger.WriteLine
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BenchmarkDotNet.Loggers.ILogger.WriteLine(BenchmarkDotNet.Loggers.LogKind,System.String)
  commentId: M:BenchmarkDotNet.Loggers.ILogger.WriteLine(BenchmarkDotNet.Loggers.LogKind,System.String)
  parent: BenchmarkDotNet.Loggers.ILogger
  isExternal: true
  name: WriteLine(LogKind, String)
  nameWithType: ILogger.WriteLine(LogKind, String)
  fullName: BenchmarkDotNet.Loggers.ILogger.WriteLine(BenchmarkDotNet.Loggers.LogKind, System.String)
  spec.csharp:
  - uid: BenchmarkDotNet.Loggers.ILogger.WriteLine(BenchmarkDotNet.Loggers.LogKind,System.String)
    name: WriteLine
    nameWithType: ILogger.WriteLine
    fullName: BenchmarkDotNet.Loggers.ILogger.WriteLine
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BenchmarkDotNet.Loggers.LogKind
    name: LogKind
    nameWithType: LogKind
    fullName: BenchmarkDotNet.Loggers.LogKind
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BenchmarkDotNet.Loggers.ILogger.WriteLine(BenchmarkDotNet.Loggers.LogKind,System.String)
    name: WriteLine
    nameWithType: ILogger.WriteLine
    fullName: BenchmarkDotNet.Loggers.ILogger.WriteLine
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BenchmarkDotNet.Loggers.LogKind
    name: LogKind
    nameWithType: LogKind
    fullName: BenchmarkDotNet.Loggers.LogKind
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BenchmarkDotNet.Loggers.LazySynchronizedStreamLogger.Flush*
  commentId: Overload:BenchmarkDotNet.Loggers.LazySynchronizedStreamLogger.Flush
  isExternal: false
  name: Flush
  nameWithType: LazySynchronizedStreamLogger.Flush
  fullName: BenchmarkDotNet.Loggers.LazySynchronizedStreamLogger.Flush
- uid: BenchmarkDotNet.Loggers.IFlushableLogger.Flush
  commentId: M:BenchmarkDotNet.Loggers.IFlushableLogger.Flush
  parent: BenchmarkDotNet.Loggers.IFlushableLogger
  isExternal: false
  name: Flush()
  nameWithType: IFlushableLogger.Flush()
  fullName: BenchmarkDotNet.Loggers.IFlushableLogger.Flush()
  spec.csharp:
  - uid: BenchmarkDotNet.Loggers.IFlushableLogger.Flush
    name: Flush
    nameWithType: IFlushableLogger.Flush
    fullName: BenchmarkDotNet.Loggers.IFlushableLogger.Flush
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BenchmarkDotNet.Loggers.IFlushableLogger.Flush
    name: Flush
    nameWithType: IFlushableLogger.Flush
    fullName: BenchmarkDotNet.Loggers.IFlushableLogger.Flush
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
