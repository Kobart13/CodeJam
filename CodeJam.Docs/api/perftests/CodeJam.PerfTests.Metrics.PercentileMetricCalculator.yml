### YamlMime:ManagedReference
items:
- uid: CodeJam.PerfTests.Metrics.PercentileMetricCalculator
  commentId: T:CodeJam.PerfTests.Metrics.PercentileMetricCalculator
  id: PercentileMetricCalculator
  parent: CodeJam.PerfTests.Metrics
  children:
  - CodeJam.PerfTests.Metrics.PercentileMetricCalculator.#ctor(System.Int32,System.Int32,System.Int32)
  - CodeJam.PerfTests.Metrics.PercentileMetricCalculator.ActualValuesPercentileDelta
  - CodeJam.PerfTests.Metrics.PercentileMetricCalculator.LimitValuesPercentileDelta
  - CodeJam.PerfTests.Metrics.PercentileMetricCalculator.MeanPercentile
  - CodeJam.PerfTests.Metrics.PercentileMetricCalculator.P50
  - CodeJam.PerfTests.Metrics.PercentileMetricCalculator.P85
  - CodeJam.PerfTests.Metrics.PercentileMetricCalculator.P95
  - CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetActualValues(System.Double[])
  - CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetLimitValues(System.Double[])
  - CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetMeanValue(System.Double[])
  - CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetRelativeActualValues(System.Double[],System.Double[])
  - CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetRelativeLimitValues(System.Double[],System.Double[])
  - CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetRelativeMeanValue(System.Double[],System.Double[])
  - CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetRelativeVariance(System.Double[],System.Double[])
  - CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetVariance(System.Double[])
  langs:
  - csharp
  - vb
  name: PercentileMetricCalculator
  nameWithType: PercentileMetricCalculator
  fullName: CodeJam.PerfTests.Metrics.PercentileMetricCalculator
  type: Class
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricCalculator]/PercentileMetricCalculator.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: PercentileMetricCalculator
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricCalculator]/PercentileMetricCalculator.cs
    startLine: 16
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: "\nMetric calculator for absolute metrics (especially for long-runing benchmarks).\nUses percentiles for results estimation.\n"
  example: []
  syntax:
    content: 'public sealed class PercentileMetricCalculator : IMetricCalculator'
    content.vb: >-
      Public NotInheritable Class PercentileMetricCalculator
          Implements IMetricCalculator
  seealso:
  - linkId: CodeJam.PerfTests.Metrics.IMetricCalculator
    commentId: T:CodeJam.PerfTests.Metrics.IMetricCalculator
  inheritance:
  - System.Object
  implements:
  - CodeJam.PerfTests.Metrics.IMetricCalculator
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.P50
  commentId: F:CodeJam.PerfTests.Metrics.PercentileMetricCalculator.P50
  id: P50
  parent: CodeJam.PerfTests.Metrics.PercentileMetricCalculator
  langs:
  - csharp
  - vb
  name: P50
  nameWithType: PercentileMetricCalculator.P50
  fullName: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.P50
  type: Field
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricCalculator]/PercentileMetricCalculator.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: P50
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricCalculator]/PercentileMetricCalculator.cs
    startLine: 22
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: Metric is based on 45..55th percentiles.
  example: []
  syntax:
    content: public static readonly IMetricCalculator P50
    return:
      type: CodeJam.PerfTests.Metrics.IMetricCalculator
    content.vb: Public Shared ReadOnly P50 As IMetricCalculator
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.P85
  commentId: F:CodeJam.PerfTests.Metrics.PercentileMetricCalculator.P85
  id: P85
  parent: CodeJam.PerfTests.Metrics.PercentileMetricCalculator
  langs:
  - csharp
  - vb
  name: P85
  nameWithType: PercentileMetricCalculator.P85
  fullName: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.P85
  type: Field
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricCalculator]/PercentileMetricCalculator.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: P85
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricCalculator]/PercentileMetricCalculator.cs
    startLine: 25
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: Metric is based on 85th percentiles.
  example: []
  syntax:
    content: public static readonly IMetricCalculator P85
    return:
      type: CodeJam.PerfTests.Metrics.IMetricCalculator
    content.vb: Public Shared ReadOnly P85 As IMetricCalculator
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.P95
  commentId: F:CodeJam.PerfTests.Metrics.PercentileMetricCalculator.P95
  id: P95
  parent: CodeJam.PerfTests.Metrics.PercentileMetricCalculator
  langs:
  - csharp
  - vb
  name: P95
  nameWithType: PercentileMetricCalculator.P95
  fullName: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.P95
  type: Field
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricCalculator]/PercentileMetricCalculator.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: P95
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricCalculator]/PercentileMetricCalculator.cs
    startLine: 28
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: Metric is based on 95th percentiles.
  example: []
  syntax:
    content: public static readonly IMetricCalculator P95
    return:
      type: CodeJam.PerfTests.Metrics.IMetricCalculator
    content.vb: Public Shared ReadOnly P95 As IMetricCalculator
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.#ctor(System.Int32,System.Int32,System.Int32)
  commentId: M:CodeJam.PerfTests.Metrics.PercentileMetricCalculator.#ctor(System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32)'
  parent: CodeJam.PerfTests.Metrics.PercentileMetricCalculator
  langs:
  - csharp
  - vb
  name: PercentileMetricCalculator(Int32, Int32, Int32)
  nameWithType: PercentileMetricCalculator.PercentileMetricCalculator(Int32, Int32, Int32)
  fullName: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.PercentileMetricCalculator(System.Int32, System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricCalculator]/PercentileMetricCalculator.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: .ctor
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricCalculator]/PercentileMetricCalculator.cs
    startLine: 99
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: "\nInitializes a new instance of the <xref href=\"CodeJam.PerfTests.Metrics.PercentileMetricCalculator\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public PercentileMetricCalculator(int meanPercentile, int actualValuesPercentileDelta, int limitValuesPercentileDelta)
    parameters:
    - id: meanPercentile
      type: System.Int32
      description: The mean percentile.
    - id: actualValuesPercentileDelta
      type: System.Int32
      description: Actual values percentile delta.
    - id: limitValuesPercentileDelta
      type: System.Int32
      description: Limits percentile delta.
    content.vb: Public Sub New(meanPercentile As Integer, actualValuesPercentileDelta As Integer, limitValuesPercentileDelta As Integer)
  overload: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.MeanPercentile
  commentId: P:CodeJam.PerfTests.Metrics.PercentileMetricCalculator.MeanPercentile
  id: MeanPercentile
  parent: CodeJam.PerfTests.Metrics.PercentileMetricCalculator
  langs:
  - csharp
  - vb
  name: MeanPercentile
  nameWithType: PercentileMetricCalculator.MeanPercentile
  fullName: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.MeanPercentile
  type: Property
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricCalculator]/PercentileMetricCalculator.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: MeanPercentile
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricCalculator]/PercentileMetricCalculator.cs
    startLine: 115
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: The mean percentile.
  example: []
  syntax:
    content: public int MeanPercentile { get; }
    parameters: []
    return:
      type: System.Int32
      description: The mean percentile.
    content.vb: Public ReadOnly Property MeanPercentile As Integer
  overload: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.MeanPercentile*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.ActualValuesPercentileDelta
  commentId: P:CodeJam.PerfTests.Metrics.PercentileMetricCalculator.ActualValuesPercentileDelta
  id: ActualValuesPercentileDelta
  parent: CodeJam.PerfTests.Metrics.PercentileMetricCalculator
  langs:
  - csharp
  - vb
  name: ActualValuesPercentileDelta
  nameWithType: PercentileMetricCalculator.ActualValuesPercentileDelta
  fullName: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.ActualValuesPercentileDelta
  type: Property
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricCalculator]/PercentileMetricCalculator.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: ActualValuesPercentileDelta
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricCalculator]/PercentileMetricCalculator.cs
    startLine: 119
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: Actual values percentile delta.
  example: []
  syntax:
    content: public int ActualValuesPercentileDelta { get; }
    parameters: []
    return:
      type: System.Int32
      description: Actual values percentile delta.
    content.vb: Public ReadOnly Property ActualValuesPercentileDelta As Integer
  overload: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.ActualValuesPercentileDelta*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.LimitValuesPercentileDelta
  commentId: P:CodeJam.PerfTests.Metrics.PercentileMetricCalculator.LimitValuesPercentileDelta
  id: LimitValuesPercentileDelta
  parent: CodeJam.PerfTests.Metrics.PercentileMetricCalculator
  langs:
  - csharp
  - vb
  name: LimitValuesPercentileDelta
  nameWithType: PercentileMetricCalculator.LimitValuesPercentileDelta
  fullName: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.LimitValuesPercentileDelta
  type: Property
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricCalculator]/PercentileMetricCalculator.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: LimitValuesPercentileDelta
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricCalculator]/PercentileMetricCalculator.cs
    startLine: 123
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: Limits percentile delta.
  example: []
  syntax:
    content: public int LimitValuesPercentileDelta { get; }
    parameters: []
    return:
      type: System.Int32
      description: Limits percentile deltas.
    content.vb: Public ReadOnly Property LimitValuesPercentileDelta As Integer
  overload: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.LimitValuesPercentileDelta*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetMeanValue(System.Double[])
  commentId: M:CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetMeanValue(System.Double[])
  id: TryGetMeanValue(System.Double[])
  parent: CodeJam.PerfTests.Metrics.PercentileMetricCalculator
  langs:
  - csharp
  - vb
  name: TryGetMeanValue(Double[])
  nameWithType: PercentileMetricCalculator.TryGetMeanValue(Double[])
  fullName: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetMeanValue(System.Double[])
  type: Method
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricCalculator]/PercentileMetricCalculator.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: TryGetMeanValue
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricCalculator]/PercentileMetricCalculator.cs
    startLine: 129
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: Gets actual value for the set of values.
  example: []
  syntax:
    content: public double ? TryGetMeanValue(double[] values)
    parameters:
    - id: values
      type: System.Double[]
      description: Set of values.
    return:
      type: System.Nullable{System.Double}
      description: Actual value for the set of values or <code>null</code> if none.
    content.vb: Public Function TryGetMeanValue(values As Double()) As Double?
  overload: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetMeanValue*
  implements:
  - CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetMeanValue(System.Double[])
  nameWithType.vb: PercentileMetricCalculator.TryGetMeanValue(Double())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetMeanValue(System.Double())
  name.vb: TryGetMeanValue(Double())
- uid: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetRelativeMeanValue(System.Double[],System.Double[])
  commentId: M:CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetRelativeMeanValue(System.Double[],System.Double[])
  id: TryGetRelativeMeanValue(System.Double[],System.Double[])
  parent: CodeJam.PerfTests.Metrics.PercentileMetricCalculator
  langs:
  - csharp
  - vb
  name: TryGetRelativeMeanValue(Double[], Double[])
  nameWithType: PercentileMetricCalculator.TryGetRelativeMeanValue(Double[], Double[])
  fullName: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetRelativeMeanValue(System.Double[], System.Double[])
  type: Method
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricCalculator]/PercentileMetricCalculator.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: TryGetRelativeMeanValue
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricCalculator]/PercentileMetricCalculator.cs
    startLine: 142
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: Gets actual value for the set of values (relative metric).
  example: []
  syntax:
    content: public double ? TryGetRelativeMeanValue(double[] values, double[] baselineValues)
    parameters:
    - id: values
      type: System.Double[]
      description: Set of values.
    - id: baselineValues
      type: System.Double[]
      description: The baseline values.
    return:
      type: System.Nullable{System.Double}
      description: Actual value for the set of values or <code>null</code> if none.
    content.vb: Public Function TryGetRelativeMeanValue(values As Double(), baselineValues As Double()) As Double?
  overload: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetRelativeMeanValue*
  implements:
  - CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeMeanValue(System.Double[],System.Double[])
  nameWithType.vb: PercentileMetricCalculator.TryGetRelativeMeanValue(Double(), Double())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetRelativeMeanValue(System.Double(), System.Double())
  name.vb: TryGetRelativeMeanValue(Double(), Double())
- uid: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetVariance(System.Double[])
  commentId: M:CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetVariance(System.Double[])
  id: TryGetVariance(System.Double[])
  parent: CodeJam.PerfTests.Metrics.PercentileMetricCalculator
  langs:
  - csharp
  - vb
  name: TryGetVariance(Double[])
  nameWithType: PercentileMetricCalculator.TryGetVariance(Double[])
  fullName: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetVariance(System.Double[])
  type: Method
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricCalculator]/PercentileMetricCalculator.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: TryGetVariance
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricCalculator]/PercentileMetricCalculator.cs
    startLine: 161
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: Gets variance for the set of values.
  example: []
  syntax:
    content: public double ? TryGetVariance(double[] values)
    parameters:
    - id: values
      type: System.Double[]
      description: Set of values.
    return:
      type: System.Nullable{System.Double}
      description: Variance for the set of values or <code>null</code> if none.
    content.vb: Public Function TryGetVariance(values As Double()) As Double?
  overload: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetVariance*
  implements:
  - CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetVariance(System.Double[])
  nameWithType.vb: PercentileMetricCalculator.TryGetVariance(Double())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetVariance(System.Double())
  name.vb: TryGetVariance(Double())
- uid: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetRelativeVariance(System.Double[],System.Double[])
  commentId: M:CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetRelativeVariance(System.Double[],System.Double[])
  id: TryGetRelativeVariance(System.Double[],System.Double[])
  parent: CodeJam.PerfTests.Metrics.PercentileMetricCalculator
  langs:
  - csharp
  - vb
  name: TryGetRelativeVariance(Double[], Double[])
  nameWithType: PercentileMetricCalculator.TryGetRelativeVariance(Double[], Double[])
  fullName: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetRelativeVariance(System.Double[], System.Double[])
  type: Method
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricCalculator]/PercentileMetricCalculator.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: TryGetRelativeVariance
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricCalculator]/PercentileMetricCalculator.cs
    startLine: 168
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: Gets variance for the set of values (relative metric).
  example: []
  syntax:
    content: public double ? TryGetRelativeVariance(double[] values, double[] baselineValues)
    parameters:
    - id: values
      type: System.Double[]
      description: Set of values.
    - id: baselineValues
      type: System.Double[]
      description: The baseline values.
    return:
      type: System.Nullable{System.Double}
      description: Variance for the set of values or <code>null</code> if none.
    content.vb: Public Function TryGetRelativeVariance(values As Double(), baselineValues As Double()) As Double?
  overload: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetRelativeVariance*
  implements:
  - CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeVariance(System.Double[],System.Double[])
  nameWithType.vb: PercentileMetricCalculator.TryGetRelativeVariance(Double(), Double())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetRelativeVariance(System.Double(), System.Double())
  name.vb: TryGetRelativeVariance(Double(), Double())
- uid: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetActualValues(System.Double[])
  commentId: M:CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetActualValues(System.Double[])
  id: TryGetActualValues(System.Double[])
  parent: CodeJam.PerfTests.Metrics.PercentileMetricCalculator
  langs:
  - csharp
  - vb
  name: TryGetActualValues(Double[])
  nameWithType: PercentileMetricCalculator.TryGetActualValues(Double[])
  fullName: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetActualValues(System.Double[])
  type: Method
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricCalculator]/PercentileMetricCalculator.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: TryGetActualValues
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricCalculator]/PercentileMetricCalculator.cs
    startLine: 194
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: Gets actual values range for the set of values.
  example: []
  syntax:
    content: public MetricRange TryGetActualValues(double[] values)
    parameters:
    - id: values
      type: System.Double[]
      description: Set of values.
    return:
      type: CodeJam.PerfTests.Metrics.MetricRange
      description: Actual values range for for the set of values (or empty range if none).
    content.vb: Public Function TryGetActualValues(values As Double()) As MetricRange
  overload: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetActualValues*
  implements:
  - CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetActualValues(System.Double[])
  nameWithType.vb: PercentileMetricCalculator.TryGetActualValues(Double())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetActualValues(System.Double())
  name.vb: TryGetActualValues(Double())
- uid: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetRelativeActualValues(System.Double[],System.Double[])
  commentId: M:CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetRelativeActualValues(System.Double[],System.Double[])
  id: TryGetRelativeActualValues(System.Double[],System.Double[])
  parent: CodeJam.PerfTests.Metrics.PercentileMetricCalculator
  langs:
  - csharp
  - vb
  name: TryGetRelativeActualValues(Double[], Double[])
  nameWithType: PercentileMetricCalculator.TryGetRelativeActualValues(Double[], Double[])
  fullName: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetRelativeActualValues(System.Double[], System.Double[])
  type: Method
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricCalculator]/PercentileMetricCalculator.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: TryGetRelativeActualValues
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricCalculator]/PercentileMetricCalculator.cs
    startLine: 205
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: Gets actual values range for the set of values (relative metric).
  example: []
  syntax:
    content: public MetricRange TryGetRelativeActualValues(double[] values, double[] baselineValues)
    parameters:
    - id: values
      type: System.Double[]
      description: Set of values.
    - id: baselineValues
      type: System.Double[]
      description: The baseline values.
    return:
      type: CodeJam.PerfTests.Metrics.MetricRange
      description: Actual values range for the set of values (or empty range if none).
    content.vb: Public Function TryGetRelativeActualValues(values As Double(), baselineValues As Double()) As MetricRange
  overload: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetRelativeActualValues*
  implements:
  - CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeActualValues(System.Double[],System.Double[])
  nameWithType.vb: PercentileMetricCalculator.TryGetRelativeActualValues(Double(), Double())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetRelativeActualValues(System.Double(), System.Double())
  name.vb: TryGetRelativeActualValues(Double(), Double())
- uid: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetLimitValues(System.Double[])
  commentId: M:CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetLimitValues(System.Double[])
  id: TryGetLimitValues(System.Double[])
  parent: CodeJam.PerfTests.Metrics.PercentileMetricCalculator
  langs:
  - csharp
  - vb
  name: TryGetLimitValues(Double[])
  nameWithType: PercentileMetricCalculator.TryGetLimitValues(Double[])
  fullName: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetLimitValues(System.Double[])
  type: Method
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricCalculator]/PercentileMetricCalculator.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: TryGetLimitValues
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricCalculator]/PercentileMetricCalculator.cs
    startLine: 215
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: Gets expected limits range for the set of values.
  example: []
  syntax:
    content: public MetricRange TryGetLimitValues(double[] values)
    parameters:
    - id: values
      type: System.Double[]
      description: Set of values.
    return:
      type: CodeJam.PerfTests.Metrics.MetricRange
      description: Limit values range for the set of values (or empty range if none).
    content.vb: Public Function TryGetLimitValues(values As Double()) As MetricRange
  overload: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetLimitValues*
  implements:
  - CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetLimitValues(System.Double[])
  nameWithType.vb: PercentileMetricCalculator.TryGetLimitValues(Double())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetLimitValues(System.Double())
  name.vb: TryGetLimitValues(Double())
- uid: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetRelativeLimitValues(System.Double[],System.Double[])
  commentId: M:CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetRelativeLimitValues(System.Double[],System.Double[])
  id: TryGetRelativeLimitValues(System.Double[],System.Double[])
  parent: CodeJam.PerfTests.Metrics.PercentileMetricCalculator
  langs:
  - csharp
  - vb
  name: TryGetRelativeLimitValues(Double[], Double[])
  nameWithType: PercentileMetricCalculator.TryGetRelativeLimitValues(Double[], Double[])
  fullName: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetRelativeLimitValues(System.Double[], System.Double[])
  type: Method
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricCalculator]/PercentileMetricCalculator.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: TryGetRelativeLimitValues
    path: ../PerfTests/src/[L1_CompetitionApi]/Metrics/[MetricCalculator]/PercentileMetricCalculator.cs
    startLine: 226
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Metrics
  summary: Gets expected limits range for the set of values (relative metric).
  example: []
  syntax:
    content: public MetricRange TryGetRelativeLimitValues(double[] values, double[] baselineValues)
    parameters:
    - id: values
      type: System.Double[]
      description: Set of values.
    - id: baselineValues
      type: System.Double[]
      description: The baseline values.
    return:
      type: CodeJam.PerfTests.Metrics.MetricRange
      description: Limit values range for the set of values (or empty range if none).
    content.vb: Public Function TryGetRelativeLimitValues(values As Double(), baselineValues As Double()) As MetricRange
  overload: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetRelativeLimitValues*
  implements:
  - CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeLimitValues(System.Double[],System.Double[])
  nameWithType.vb: PercentileMetricCalculator.TryGetRelativeLimitValues(Double(), Double())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetRelativeLimitValues(System.Double(), System.Double())
  name.vb: TryGetRelativeLimitValues(Double(), Double())
references:
- uid: CodeJam.PerfTests.Metrics.IMetricCalculator
  commentId: T:CodeJam.PerfTests.Metrics.IMetricCalculator
  parent: CodeJam.PerfTests.Metrics
  isExternal: false
  name: IMetricCalculator
  nameWithType: IMetricCalculator
  fullName: CodeJam.PerfTests.Metrics.IMetricCalculator
- uid: CodeJam.PerfTests.Metrics
  commentId: N:CodeJam.PerfTests.Metrics
  isExternal: false
  name: CodeJam.PerfTests.Metrics
  nameWithType: CodeJam.PerfTests.Metrics
  fullName: CodeJam.PerfTests.Metrics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: CodeJam.PerfTests.Metrics.PercentileMetricCalculator
  commentId: T:CodeJam.PerfTests.Metrics.PercentileMetricCalculator
  isExternal: false
  name: PercentileMetricCalculator
  nameWithType: PercentileMetricCalculator
  fullName: CodeJam.PerfTests.Metrics.PercentileMetricCalculator
- uid: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.#ctor*
  commentId: Overload:CodeJam.PerfTests.Metrics.PercentileMetricCalculator.#ctor
  isExternal: false
  name: PercentileMetricCalculator
  nameWithType: PercentileMetricCalculator.PercentileMetricCalculator
  fullName: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.PercentileMetricCalculator
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.MeanPercentile*
  commentId: Overload:CodeJam.PerfTests.Metrics.PercentileMetricCalculator.MeanPercentile
  isExternal: false
  name: MeanPercentile
  nameWithType: PercentileMetricCalculator.MeanPercentile
  fullName: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.MeanPercentile
- uid: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.ActualValuesPercentileDelta*
  commentId: Overload:CodeJam.PerfTests.Metrics.PercentileMetricCalculator.ActualValuesPercentileDelta
  isExternal: false
  name: ActualValuesPercentileDelta
  nameWithType: PercentileMetricCalculator.ActualValuesPercentileDelta
  fullName: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.ActualValuesPercentileDelta
- uid: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.LimitValuesPercentileDelta*
  commentId: Overload:CodeJam.PerfTests.Metrics.PercentileMetricCalculator.LimitValuesPercentileDelta
  isExternal: false
  name: LimitValuesPercentileDelta
  nameWithType: PercentileMetricCalculator.LimitValuesPercentileDelta
  fullName: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.LimitValuesPercentileDelta
- uid: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetMeanValue*
  commentId: Overload:CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetMeanValue
  isExternal: false
  name: TryGetMeanValue
  nameWithType: PercentileMetricCalculator.TryGetMeanValue
  fullName: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetMeanValue
- uid: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetMeanValue(System.Double[])
  commentId: M:CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetMeanValue(System.Double[])
  parent: CodeJam.PerfTests.Metrics.IMetricCalculator
  isExternal: true
  name: TryGetMeanValue(Double[])
  nameWithType: IMetricCalculator.TryGetMeanValue(Double[])
  fullName: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetMeanValue(System.Double[])
  nameWithType.vb: IMetricCalculator.TryGetMeanValue(Double())
  fullName.vb: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetMeanValue(System.Double())
  name.vb: TryGetMeanValue(Double())
  spec.csharp:
  - uid: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetMeanValue(System.Double[])
    name: TryGetMeanValue
    nameWithType: IMetricCalculator.TryGetMeanValue
    fullName: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetMeanValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetMeanValue(System.Double[])
    name: TryGetMeanValue
    nameWithType: IMetricCalculator.TryGetMeanValue
    fullName: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetMeanValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Double[]
  name: Double[]
  nameWithType: Double[]
  fullName: System.Double[]
  nameWithType.vb: Double()
  fullName.vb: System.Double()
  name.vb: Double()
  spec.csharp:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Nullable{System.Double}
  commentId: T:System.Nullable{System.Double}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Double>
  nameWithType: Nullable<Double>
  fullName: System.Nullable<System.Double>
  nameWithType.vb: Nullable(Of Double)
  fullName.vb: System.Nullable(Of System.Double)
  name.vb: Nullable(Of Double)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetRelativeMeanValue*
  commentId: Overload:CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetRelativeMeanValue
  isExternal: false
  name: TryGetRelativeMeanValue
  nameWithType: PercentileMetricCalculator.TryGetRelativeMeanValue
  fullName: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetRelativeMeanValue
- uid: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeMeanValue(System.Double[],System.Double[])
  commentId: M:CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeMeanValue(System.Double[],System.Double[])
  parent: CodeJam.PerfTests.Metrics.IMetricCalculator
  isExternal: true
  name: TryGetRelativeMeanValue(Double[], Double[])
  nameWithType: IMetricCalculator.TryGetRelativeMeanValue(Double[], Double[])
  fullName: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeMeanValue(System.Double[], System.Double[])
  nameWithType.vb: IMetricCalculator.TryGetRelativeMeanValue(Double(), Double())
  fullName.vb: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeMeanValue(System.Double(), System.Double())
  name.vb: TryGetRelativeMeanValue(Double(), Double())
  spec.csharp:
  - uid: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeMeanValue(System.Double[],System.Double[])
    name: TryGetRelativeMeanValue
    nameWithType: IMetricCalculator.TryGetRelativeMeanValue
    fullName: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeMeanValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeMeanValue(System.Double[],System.Double[])
    name: TryGetRelativeMeanValue
    nameWithType: IMetricCalculator.TryGetRelativeMeanValue
    fullName: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeMeanValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetVariance*
  commentId: Overload:CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetVariance
  isExternal: false
  name: TryGetVariance
  nameWithType: PercentileMetricCalculator.TryGetVariance
  fullName: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetVariance
- uid: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetVariance(System.Double[])
  commentId: M:CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetVariance(System.Double[])
  parent: CodeJam.PerfTests.Metrics.IMetricCalculator
  isExternal: true
  name: TryGetVariance(Double[])
  nameWithType: IMetricCalculator.TryGetVariance(Double[])
  fullName: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetVariance(System.Double[])
  nameWithType.vb: IMetricCalculator.TryGetVariance(Double())
  fullName.vb: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetVariance(System.Double())
  name.vb: TryGetVariance(Double())
  spec.csharp:
  - uid: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetVariance(System.Double[])
    name: TryGetVariance
    nameWithType: IMetricCalculator.TryGetVariance
    fullName: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetVariance
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetVariance(System.Double[])
    name: TryGetVariance
    nameWithType: IMetricCalculator.TryGetVariance
    fullName: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetVariance
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetRelativeVariance*
  commentId: Overload:CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetRelativeVariance
  isExternal: false
  name: TryGetRelativeVariance
  nameWithType: PercentileMetricCalculator.TryGetRelativeVariance
  fullName: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetRelativeVariance
- uid: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeVariance(System.Double[],System.Double[])
  commentId: M:CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeVariance(System.Double[],System.Double[])
  parent: CodeJam.PerfTests.Metrics.IMetricCalculator
  isExternal: true
  name: TryGetRelativeVariance(Double[], Double[])
  nameWithType: IMetricCalculator.TryGetRelativeVariance(Double[], Double[])
  fullName: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeVariance(System.Double[], System.Double[])
  nameWithType.vb: IMetricCalculator.TryGetRelativeVariance(Double(), Double())
  fullName.vb: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeVariance(System.Double(), System.Double())
  name.vb: TryGetRelativeVariance(Double(), Double())
  spec.csharp:
  - uid: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeVariance(System.Double[],System.Double[])
    name: TryGetRelativeVariance
    nameWithType: IMetricCalculator.TryGetRelativeVariance
    fullName: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeVariance
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeVariance(System.Double[],System.Double[])
    name: TryGetRelativeVariance
    nameWithType: IMetricCalculator.TryGetRelativeVariance
    fullName: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeVariance
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetActualValues*
  commentId: Overload:CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetActualValues
  isExternal: false
  name: TryGetActualValues
  nameWithType: PercentileMetricCalculator.TryGetActualValues
  fullName: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetActualValues
- uid: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetActualValues(System.Double[])
  commentId: M:CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetActualValues(System.Double[])
  parent: CodeJam.PerfTests.Metrics.IMetricCalculator
  isExternal: true
  name: TryGetActualValues(Double[])
  nameWithType: IMetricCalculator.TryGetActualValues(Double[])
  fullName: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetActualValues(System.Double[])
  nameWithType.vb: IMetricCalculator.TryGetActualValues(Double())
  fullName.vb: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetActualValues(System.Double())
  name.vb: TryGetActualValues(Double())
  spec.csharp:
  - uid: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetActualValues(System.Double[])
    name: TryGetActualValues
    nameWithType: IMetricCalculator.TryGetActualValues
    fullName: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetActualValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetActualValues(System.Double[])
    name: TryGetActualValues
    nameWithType: IMetricCalculator.TryGetActualValues
    fullName: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetActualValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: CodeJam.PerfTests.Metrics.MetricRange
  commentId: T:CodeJam.PerfTests.Metrics.MetricRange
  parent: CodeJam.PerfTests.Metrics
  isExternal: false
  name: MetricRange
  nameWithType: MetricRange
  fullName: CodeJam.PerfTests.Metrics.MetricRange
- uid: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetRelativeActualValues*
  commentId: Overload:CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetRelativeActualValues
  isExternal: false
  name: TryGetRelativeActualValues
  nameWithType: PercentileMetricCalculator.TryGetRelativeActualValues
  fullName: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetRelativeActualValues
- uid: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeActualValues(System.Double[],System.Double[])
  commentId: M:CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeActualValues(System.Double[],System.Double[])
  parent: CodeJam.PerfTests.Metrics.IMetricCalculator
  isExternal: true
  name: TryGetRelativeActualValues(Double[], Double[])
  nameWithType: IMetricCalculator.TryGetRelativeActualValues(Double[], Double[])
  fullName: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeActualValues(System.Double[], System.Double[])
  nameWithType.vb: IMetricCalculator.TryGetRelativeActualValues(Double(), Double())
  fullName.vb: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeActualValues(System.Double(), System.Double())
  name.vb: TryGetRelativeActualValues(Double(), Double())
  spec.csharp:
  - uid: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeActualValues(System.Double[],System.Double[])
    name: TryGetRelativeActualValues
    nameWithType: IMetricCalculator.TryGetRelativeActualValues
    fullName: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeActualValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeActualValues(System.Double[],System.Double[])
    name: TryGetRelativeActualValues
    nameWithType: IMetricCalculator.TryGetRelativeActualValues
    fullName: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeActualValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetLimitValues*
  commentId: Overload:CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetLimitValues
  isExternal: false
  name: TryGetLimitValues
  nameWithType: PercentileMetricCalculator.TryGetLimitValues
  fullName: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetLimitValues
- uid: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetLimitValues(System.Double[])
  commentId: M:CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetLimitValues(System.Double[])
  parent: CodeJam.PerfTests.Metrics.IMetricCalculator
  isExternal: true
  name: TryGetLimitValues(Double[])
  nameWithType: IMetricCalculator.TryGetLimitValues(Double[])
  fullName: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetLimitValues(System.Double[])
  nameWithType.vb: IMetricCalculator.TryGetLimitValues(Double())
  fullName.vb: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetLimitValues(System.Double())
  name.vb: TryGetLimitValues(Double())
  spec.csharp:
  - uid: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetLimitValues(System.Double[])
    name: TryGetLimitValues
    nameWithType: IMetricCalculator.TryGetLimitValues
    fullName: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetLimitValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetLimitValues(System.Double[])
    name: TryGetLimitValues
    nameWithType: IMetricCalculator.TryGetLimitValues
    fullName: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetLimitValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetRelativeLimitValues*
  commentId: Overload:CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetRelativeLimitValues
  isExternal: false
  name: TryGetRelativeLimitValues
  nameWithType: PercentileMetricCalculator.TryGetRelativeLimitValues
  fullName: CodeJam.PerfTests.Metrics.PercentileMetricCalculator.TryGetRelativeLimitValues
- uid: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeLimitValues(System.Double[],System.Double[])
  commentId: M:CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeLimitValues(System.Double[],System.Double[])
  parent: CodeJam.PerfTests.Metrics.IMetricCalculator
  isExternal: true
  name: TryGetRelativeLimitValues(Double[], Double[])
  nameWithType: IMetricCalculator.TryGetRelativeLimitValues(Double[], Double[])
  fullName: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeLimitValues(System.Double[], System.Double[])
  nameWithType.vb: IMetricCalculator.TryGetRelativeLimitValues(Double(), Double())
  fullName.vb: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeLimitValues(System.Double(), System.Double())
  name.vb: TryGetRelativeLimitValues(Double(), Double())
  spec.csharp:
  - uid: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeLimitValues(System.Double[],System.Double[])
    name: TryGetRelativeLimitValues
    nameWithType: IMetricCalculator.TryGetRelativeLimitValues
    fullName: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeLimitValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeLimitValues(System.Double[],System.Double[])
    name: TryGetRelativeLimitValues
    nameWithType: IMetricCalculator.TryGetRelativeLimitValues
    fullName: CodeJam.PerfTests.Metrics.IMetricCalculator.TryGetRelativeLimitValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
