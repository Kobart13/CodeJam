### YamlMime:ManagedReference
items:
- uid: CodeJam.PerfTests.Running.Core.EnvironmentHelpers
  commentId: T:CodeJam.PerfTests.Running.Core.EnvironmentHelpers
  id: EnvironmentHelpers
  parent: CodeJam.PerfTests.Running.Core
  children:
  - CodeJam.PerfTests.Running.Core.EnvironmentHelpers.HasAnyEnvironmentVariable(System.Collections.Generic.IEnumerable{System.String})
  - CodeJam.PerfTests.Running.Core.EnvironmentHelpers.HasAnyEnvironmentVariable(System.String[])
  - CodeJam.PerfTests.Running.Core.EnvironmentHelpers.ParseConfigurationSection``1(System.String,System.Collections.Generic.IEnumerable{System.Reflection.Assembly})
  - CodeJam.PerfTests.Running.Core.EnvironmentHelpers.ParseConfigurationSection``1(System.String,System.Reflection.Assembly[])
  langs:
  - csharp
  - vb
  name: EnvironmentHelpers
  nameWithType: EnvironmentHelpers
  fullName: CodeJam.PerfTests.Running.Core.EnvironmentHelpers
  type: Class
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Running.Core/EnvironmentHelpers.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: EnvironmentHelpers
    path: ../PerfTests/src/[L1_CompetitionApi]/Running.Core/EnvironmentHelpers.cs
    startLine: 17
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Running.Core
  summary: "\nEnvironment helpers.\n"
  example: []
  syntax:
    content: public static class EnvironmentHelpers
    content.vb: Public Module EnvironmentHelpers
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: CodeJam.PerfTests.Running.Core.EnvironmentHelpers.HasAnyEnvironmentVariable(System.String[])
  commentId: M:CodeJam.PerfTests.Running.Core.EnvironmentHelpers.HasAnyEnvironmentVariable(System.String[])
  id: HasAnyEnvironmentVariable(System.String[])
  parent: CodeJam.PerfTests.Running.Core.EnvironmentHelpers
  langs:
  - csharp
  - vb
  name: HasAnyEnvironmentVariable(String[])
  nameWithType: EnvironmentHelpers.HasAnyEnvironmentVariable(String[])
  fullName: CodeJam.PerfTests.Running.Core.EnvironmentHelpers.HasAnyEnvironmentVariable(System.String[])
  type: Method
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Running.Core/EnvironmentHelpers.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: HasAnyEnvironmentVariable
    path: ../PerfTests/src/[L1_CompetitionApi]/Running.Core/EnvironmentHelpers.cs
    startLine: 35
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Running.Core
  summary: Determines whether any environment variable is set.
  example: []
  syntax:
    content: public static bool HasAnyEnvironmentVariable(params string[] variables)
    parameters:
    - id: variables
      type: System.String[]
      description: The variables to check. Case is ignored.
    return:
      type: System.Boolean
      description: "\n<code>true</code> if any environment variable from <code data-dev-comment-type=\"paramref\" class=\"paramref\">variables</code> is set.\n"
    content.vb: Public Shared Function HasAnyEnvironmentVariable(ParamArray variables As String()) As Boolean
  overload: CodeJam.PerfTests.Running.Core.EnvironmentHelpers.HasAnyEnvironmentVariable*
  nameWithType.vb: EnvironmentHelpers.HasAnyEnvironmentVariable(String())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: CodeJam.PerfTests.Running.Core.EnvironmentHelpers.HasAnyEnvironmentVariable(System.String())
  name.vb: HasAnyEnvironmentVariable(String())
- uid: CodeJam.PerfTests.Running.Core.EnvironmentHelpers.HasAnyEnvironmentVariable(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:CodeJam.PerfTests.Running.Core.EnvironmentHelpers.HasAnyEnvironmentVariable(System.Collections.Generic.IEnumerable{System.String})
  id: HasAnyEnvironmentVariable(System.Collections.Generic.IEnumerable{System.String})
  parent: CodeJam.PerfTests.Running.Core.EnvironmentHelpers
  langs:
  - csharp
  - vb
  name: HasAnyEnvironmentVariable(IEnumerable<String>)
  nameWithType: EnvironmentHelpers.HasAnyEnvironmentVariable(IEnumerable<String>)
  fullName: CodeJam.PerfTests.Running.Core.EnvironmentHelpers.HasAnyEnvironmentVariable(System.Collections.Generic.IEnumerable<System.String>)
  type: Method
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Running.Core/EnvironmentHelpers.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: HasAnyEnvironmentVariable
    path: ../PerfTests/src/[L1_CompetitionApi]/Running.Core/EnvironmentHelpers.cs
    startLine: 43
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Running.Core
  summary: Determines whether any environment variable is set.
  example: []
  syntax:
    content: public static bool HasAnyEnvironmentVariable(IEnumerable<string> variables)
    parameters:
    - id: variables
      type: System.Collections.Generic.IEnumerable{System.String}
      description: The variables to check. Case is ignored.
    return:
      type: System.Boolean
      description: "\n<code>true</code> if any environment variable from <code data-dev-comment-type=\"paramref\" class=\"paramref\">variables</code> is set.\n"
    content.vb: Public Shared Function HasAnyEnvironmentVariable(variables As IEnumerable(Of String)) As Boolean
  overload: CodeJam.PerfTests.Running.Core.EnvironmentHelpers.HasAnyEnvironmentVariable*
  nameWithType.vb: EnvironmentHelpers.HasAnyEnvironmentVariable(IEnumerable(Of String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: CodeJam.PerfTests.Running.Core.EnvironmentHelpers.HasAnyEnvironmentVariable(System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: HasAnyEnvironmentVariable(IEnumerable(Of String))
- uid: CodeJam.PerfTests.Running.Core.EnvironmentHelpers.ParseConfigurationSection``1(System.String,System.Reflection.Assembly[])
  commentId: M:CodeJam.PerfTests.Running.Core.EnvironmentHelpers.ParseConfigurationSection``1(System.String,System.Reflection.Assembly[])
  id: ParseConfigurationSection``1(System.String,System.Reflection.Assembly[])
  parent: CodeJam.PerfTests.Running.Core.EnvironmentHelpers
  langs:
  - csharp
  - vb
  name: ParseConfigurationSection<TSection>(String, Assembly[])
  nameWithType: EnvironmentHelpers.ParseConfigurationSection<TSection>(String, Assembly[])
  fullName: CodeJam.PerfTests.Running.Core.EnvironmentHelpers.ParseConfigurationSection<TSection>(System.String, System.Reflection.Assembly[])
  type: Method
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Running.Core/EnvironmentHelpers.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: ParseConfigurationSection
    path: ../PerfTests/src/[L1_CompetitionApi]/Running.Core/EnvironmentHelpers.cs
    startLine: 64
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Running.Core
  summary: "\nRetuns configuration section from app.config or (if none)\nfrom first of the <code data-dev-comment-type=\"paramref\" class=\"paramref\">fallbackAssemblies</code> that have the section in its config.\n"
  example: []
  syntax:
    content: 'public static TSection ParseConfigurationSection<TSection>(string sectionName, params Assembly[] fallbackAssemblies)where TSection : ConfigurationSection'
    parameters:
    - id: sectionName
      type: System.String
      description: Name of the section.
    - id: fallbackAssemblies
      type: System.Reflection.Assembly[]
      description: "\nThe assemblies to check for the config section if the app.config does not contain the section.\n"
    typeParameters:
    - id: TSection
      description: Type of the section.
    return:
      type: '{TSection}'
      description: Configuration section with the name specified in <code data-dev-comment-type="paramref" class="paramref">sectionName</code>.
    content.vb: Public Shared Function ParseConfigurationSection(Of TSection As ConfigurationSection)(sectionName As String, ParamArray fallbackAssemblies As Assembly()) As TSection
  overload: CodeJam.PerfTests.Running.Core.EnvironmentHelpers.ParseConfigurationSection*
  nameWithType.vb: EnvironmentHelpers.ParseConfigurationSection(Of TSection)(String, Assembly())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: CodeJam.PerfTests.Running.Core.EnvironmentHelpers.ParseConfigurationSection(Of TSection)(System.String, System.Reflection.Assembly())
  name.vb: ParseConfigurationSection(Of TSection)(String, Assembly())
- uid: CodeJam.PerfTests.Running.Core.EnvironmentHelpers.ParseConfigurationSection``1(System.String,System.Collections.Generic.IEnumerable{System.Reflection.Assembly})
  commentId: M:CodeJam.PerfTests.Running.Core.EnvironmentHelpers.ParseConfigurationSection``1(System.String,System.Collections.Generic.IEnumerable{System.Reflection.Assembly})
  id: ParseConfigurationSection``1(System.String,System.Collections.Generic.IEnumerable{System.Reflection.Assembly})
  parent: CodeJam.PerfTests.Running.Core.EnvironmentHelpers
  langs:
  - csharp
  - vb
  name: ParseConfigurationSection<TSection>(String, IEnumerable<Assembly>)
  nameWithType: EnvironmentHelpers.ParseConfigurationSection<TSection>(String, IEnumerable<Assembly>)
  fullName: CodeJam.PerfTests.Running.Core.EnvironmentHelpers.ParseConfigurationSection<TSection>(System.String, System.Collections.Generic.IEnumerable<System.Reflection.Assembly>)
  type: Method
  source:
    remote:
      path: PerfTests/src/[L1_CompetitionApi]/Running.Core/EnvironmentHelpers.cs
      branch: master
      repo: https://andrewvk@github.com/rsdn/CodeJam.git
    id: ParseConfigurationSection
    path: ../PerfTests/src/[L1_CompetitionApi]/Running.Core/EnvironmentHelpers.cs
    startLine: 80
  assemblies:
  - CodeJam.PerfTests
  namespace: CodeJam.PerfTests.Running.Core
  summary: "\nRetuns configuration section from app.config or (if none)\nfrom first of the <code data-dev-comment-type=\"paramref\" class=\"paramref\">fallbackAssemblies</code> that have the section in its config.\n"
  example: []
  syntax:
    content: 'public static TSection ParseConfigurationSection<TSection>(string sectionName, IEnumerable<Assembly> fallbackAssemblies)where TSection : ConfigurationSection'
    parameters:
    - id: sectionName
      type: System.String
      description: Name of the section.
    - id: fallbackAssemblies
      type: System.Collections.Generic.IEnumerable{System.Reflection.Assembly}
      description: "\nThe assemblies to check for the config section if the app.config does not contain the section.\n"
    typeParameters:
    - id: TSection
      description: Type of the section.
    return:
      type: '{TSection}'
      description: Configuration section with the name specified in <code data-dev-comment-type="paramref" class="paramref">sectionName</code>.
    content.vb: Public Shared Function ParseConfigurationSection(Of TSection As ConfigurationSection)(sectionName As String, fallbackAssemblies As IEnumerable(Of Assembly)) As TSection
  overload: CodeJam.PerfTests.Running.Core.EnvironmentHelpers.ParseConfigurationSection*
  nameWithType.vb: EnvironmentHelpers.ParseConfigurationSection(Of TSection)(String, IEnumerable(Of Assembly))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: CodeJam.PerfTests.Running.Core.EnvironmentHelpers.ParseConfigurationSection(Of TSection)(System.String, System.Collections.Generic.IEnumerable(Of System.Reflection.Assembly))
  name.vb: ParseConfigurationSection(Of TSection)(String, IEnumerable(Of Assembly))
references:
- uid: CodeJam.PerfTests.Running.Core
  commentId: N:CodeJam.PerfTests.Running.Core
  isExternal: false
  name: CodeJam.PerfTests.Running.Core
  nameWithType: CodeJam.PerfTests.Running.Core
  fullName: CodeJam.PerfTests.Running.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: CodeJam.PerfTests.Running.Core.EnvironmentHelpers.HasAnyEnvironmentVariable*
  commentId: Overload:CodeJam.PerfTests.Running.Core.EnvironmentHelpers.HasAnyEnvironmentVariable
  isExternal: false
  name: HasAnyEnvironmentVariable
  nameWithType: EnvironmentHelpers.HasAnyEnvironmentVariable
  fullName: CodeJam.PerfTests.Running.Core.EnvironmentHelpers.HasAnyEnvironmentVariable
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: CodeJam.PerfTests.Running.Core.EnvironmentHelpers.ParseConfigurationSection*
  commentId: Overload:CodeJam.PerfTests.Running.Core.EnvironmentHelpers.ParseConfigurationSection
  isExternal: false
  name: ParseConfigurationSection
  nameWithType: EnvironmentHelpers.ParseConfigurationSection
  fullName: CodeJam.PerfTests.Running.Core.EnvironmentHelpers.ParseConfigurationSection
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.Assembly[]
  name: Assembly[]
  nameWithType: Assembly[]
  fullName: System.Reflection.Assembly[]
  nameWithType.vb: Assembly()
  fullName.vb: System.Reflection.Assembly()
  name.vb: Assembly()
  spec.csharp:
  - uid: System.Reflection.Assembly
    name: Assembly
    nameWithType: Assembly
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Reflection.Assembly
    name: Assembly
    nameWithType: Assembly
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: '{TSection}'
  commentId: '!:TSection'
  definition: TSection
  name: TSection
  nameWithType: TSection
  fullName: TSection
- uid: TSection
  isExternal: false
  name: TSection
  nameWithType: TSection
  fullName: TSection
- uid: System.Collections.Generic.IEnumerable{System.Reflection.Assembly}
  commentId: T:System.Collections.Generic.IEnumerable{System.Reflection.Assembly}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Assembly>
  nameWithType: IEnumerable<Assembly>
  fullName: System.Collections.Generic.IEnumerable<System.Reflection.Assembly>
  nameWithType.vb: IEnumerable(Of Assembly)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Reflection.Assembly)
  name.vb: IEnumerable(Of Assembly)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.Assembly
    name: Assembly
    nameWithType: Assembly
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Reflection.Assembly
    name: Assembly
    nameWithType: Assembly
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
